package com.power.qa.pages;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.testng.Assert;
import org.testng.Reporter;

import com.power.qa.base.TestBase;
import com.power.qa.util.Helpers;
import com.power.qa.util.ReadConfig;

public class Gdn_Pages extends BasePage
{
	Helpers helper=new Helpers();
	public Gdn_Pages(WebDriver driver) throws InterruptedException  {
		super(TestBase.getDriver());

	}

	@FindBy(xpath = "//img[@class='active_pg_logo img-fluid']")
	WebElement Logo;
	
	@FindBy(xpath = "//span[@class='guided-tour-step-button guided-tour-step-button-complete']")
	WebElement NewFeatureClosedButton;

	@FindBy(css = "a[id='gdn_ads'] img")
	WebElement gdn;

	@FindBy(id = "search-ads")
	WebElement searchButton;

	@FindBy(id ="domain_date")
	WebElement Domain_Rgsd_Date;


	@FindBy(id = "affiliates")
	WebElement AffiliateNetwork;

	@FindBy(xpath = "//span[@class='dropdown-label dropdown_filter']")
	WebElement sortBy;

	@FindBy(id = "totaladscount-div")
	WebElement totaladscount_div;

	@FindBy(xpath = "//a[normalize-space()='Newest']")
	WebElement SortBy_Newest;

	@FindBy(css = ".clear_filters")
	WebElement Clear_Filters;


	@FindBy(id = "country")
	WebElement countryDropDown;

	@FindBy(id  = "first_seen_block")
	//@FindBy(xpath = "//div[@id='first_seen_block']")
	WebElement firstSeen;

	@FindBy(id = "last_seen_block")
	WebElement lastSeen;

	@FindBy(id = "post_date_block")
	WebElement postDate;

	@FindBy(xpath = "//a[normalize-space()='Last Seen']")
	WebElement sortBy_LastSeen;

	@FindBy(xpath = "//a[normalize-space()='Running Longest']")
	WebElement sortby_Running_longest;

	//	@FindBy(xpath = "//body/div[@class='wrapper']/div[@class='right_content ad_analytics_content']/div/section[@class='boxx_sectn']/div[@class='container-fluid']/div[@class='row']/div[@class='col-lg-6 col-sm-6 col-12 ad-analytics-col']/div[4]/div[2]//div[1]//div[2]")
	@FindBy(xpath = "//div[@id='days_running_block']")
	WebElement LongestRunningDate;

	@FindBy(xpath = "//a[normalize-space()='Domain Registration Date']")
	WebElement domain_Registration_Date;

	@FindBy(id = "domain_date")
	WebElement domain_Registration;


	//@FindBy(xpath = "//span[@class='dropdown-label dropdown_filter']")
	@FindBy(id = "dropdown_select")
	WebElement dropdownFilter;

	@FindBy(css = "a#fb_ads > img")
	WebElement fb;

	@FindBy(id = "ads_timepicker")
	WebElement adSeenbetweenfilter;

	@FindBy(xpath = "//span[@id='timefilter']")
	WebElement adSeenbetween_filter;

	@FindBy(xpath = "(//li[text()='All'])[1]")
	WebElement adSeenbetween_all;

	@FindBy(id ="totaladscount")
	WebElement totaladscount_ad;

	@FindBy(xpath ="//div[@class='ad_date']")
	WebElement Date1;

	@FindBy(xpath = "//a[text()='Show Analytics']")
	WebElement showAnalytics;



	//	@FindBy(xpath = "//ul//li[@class='active'][text()='Today']")
	//  @FindBy(css = "li[class='active']")
	@FindBy(xpath ="(//li[text()='Today'])[1]")
	WebElement adSeenbetween_today;

	@FindBy(xpath = "(//li[text()='Yesterday'])[1]")
	WebElement adSeenbetween_yesterday;

	@FindBy(xpath = "(//li[text()='Last Seven Days'])[1]")  // dev site
	//	@FindBy(xpath = "(//li[text()='Last 7 Days'])[1]")  // main site
	WebElement adSeenbetween_last_Seven_Days;

	// @FindBy(xpath = "//body/div[6]/div[1]/ul[1]/li[5]")  
	@FindBy(xpath = "(//li[text()='Last Thirty Days'])[1]")   //dev site
	//	@FindBy(xpath = "(//li[text()='Last 30 Days'])[1]")		//main site
	WebElement adSeenBetween_last_Thirty_days;

	@FindBy(xpath = "(//li[text()='This Month'])[1]")
	WebElement adSeenBetween_this_month;

	@FindBy(xpath = "(//li[text()='Last Month'])[1]")
	WebElement adSeenBetween_last_month;

	@FindBy(xpath = "(//li[text()='Custom Range'])[1]")
	WebElement adSeenBetween_customrange;

	@FindBy(xpath = "(//select[@class='monthselect'])[1]")
	WebElement leftmonthselect;
	@FindBy(xpath = "(//select[@class='yearselect'])[1]")
	WebElement leftyearselect;
	@FindBy(xpath = "(//select[@class='monthselect'])[2]")
	WebElement rightmonthselect;
	@FindBy(xpath = "(//select[@class='yearselect'])[2]")
	WebElement rightyearselect;


	@FindBy(xpath = "//button[text()='Apply']")
	WebElement AdseenCustomRangeApplyButton;

	@FindBy(xpath = "(//button[text()='Apply'])[2]")
	WebElement PostCustomRangeApplyButton;

	@FindBy(xpath = "(//button[text()='Apply'])[3]")
	WebElement DomainCustomRangeApplyButton;



	@FindBy(xpath = "//th[@class='prev available']")
	WebElement Custom_Range_Next_Line;

	//	@FindBy(xpath = "(//td[@class='weekend available' and @data-title='r1c0'])[1]")
	@FindBy(xpath="//td[text()='1']")
	WebElement adSeenBetween_Start_range1;

	//	@FindBy(xpath = "//td[@class='available in-range' and @data-title='r4c3' and text()='26']")
	@FindBy(xpath="(//td[text()='14'])[2]")
	WebElement adSeenBetween_end_range2;

	@FindBy(xpath ="//div[@class='form-group']//div[@class='input-group']//div[@id='post_ads_timepicker']")
	WebElement post_date_between_dropdown;

	@FindBy(xpath = "//li[@class='active']")
	WebElement  post_date_between_all;

	//@FindBy(css = "body > div:nth-child(68) > div:nth-child(1) > ul:nth-child(1) > li:nth-child(2)")
	@FindBy(xpath = "(//li[text()='Today'])[2]")
	WebElement post_date_between_today;

	//@FindBy(xpath = "//body/div[7]/div[1]/ul[1]/li[3]")
	@FindBy(xpath = "(//li[text()='Yesterday'])[2]")
	WebElement post_date_between_Yesterday;

	//	@FindBy(css = "body > div:nth-child(68) > div:nth-child(1) > ul:nth-child(1) > li:nth-child(4)")
	@FindBy(xpath = "(//li[text()='Last Seven Days'])[2]")
	WebElement post_date_between_Last_Seven_Days;

	@FindBy(xpath = "(//li[text()='Last Thirty Days'])[2]")
	WebElement post_date_between_Last_Thirty_Days;

	/*@FindBy(xpath = "(//li[text()='Last 30 Days'])[2]")   //main site
	WebElement post_date_between_Last_Thirty_Days;*/

	@FindBy(xpath = "(//li[contains(text(),'This Month')])[2]")
	WebElement post_date_between_This_Month;

	@FindBy(xpath = "(//li[text()='Last Month'])[2]")
	//@FindBy(xpath = "//body/div[7]/div[1]/ul[1]/li[7]")
	WebElement post_date_between_last_Month;


	@FindBy(id="post_date_block")
	WebElement postdate;

	@FindBy(xpath = "//span[@id='post_timefilter']")
	WebElement postdatebetweenfilter;

	//@FindBy(xpath = "//body/div[7]/div[1]/ul[1]/li[8]")
	@FindBy(xpath = "(//li[text()='Custom Range'])[2]")
	WebElement postdateBetween_customrange;


	//	@FindBy(xpath = "(//td[@class='weekend available' and @data-title='r1c0'])[1]")
	@FindBy(xpath="//td[text()='1']")
	WebElement post_date_Between_Start_range1;

	//	@FindBy(xpath = "//td[@class='available in-range' and @data-title='r4c3' and text()='26']")
	@FindBy(xpath="//td[text()='15']")
	WebElement post_date_Between_end_range2;

	@FindBy(xpath = "//span[@id='domain_timefilter']")
	WebElement  domainRegistrationfilter;

	@FindBy(xpath = "//li[@class='active'][normalize-space()='All']")
	WebElement All;

	//	@FindBy(xpath = "//body/div[8]/div[1]/ul[1]/li[2]")    //long
	@FindBy(xpath = "(//li[text()='Today'])[3]")
	WebElement Today;

	@FindBy(xpath = "(//li[text()='Yesterday'])[3]")
	//@FindBy(xpath = "//body/div[8]/div[1]/ul[1]/li[3]")
	WebElement yesterday;

	//@FindBy(xpath = "//body/div[8]/div[1]/ul[1]/li[3]")
	//	@FindBy(xpath = "(//li[text()='Last 30 Days'])[3]") //live
	@FindBy(xpath = "(//li[text()='Last Seven Days'])[3]") //dev
	WebElement Last_7_Days;

	//	@FindBy(xpath = "(//li[text()='Last 30 Days'])[3]") //live
	@FindBy(xpath = "(//li[text()='Last Thirty Days'])[3]") //dev
	WebElement Last_30_Days;

	@FindBy(xpath = "(//li[text()='This Month'])[3]")
	WebElement This_Month;

	@FindBy(xpath = "(//li[text()='Last Month'])[3]")
	WebElement Last_Month;

	@FindBy(xpath = "(//li[text()='Custom Range'])[3]")
	WebElement Custom_Range;



	@FindBy(xpath = "//div[@class='dropdown filters_dropdown standard_filter show']")
	WebElement filteropen;


	@FindBy(xpath = "//div[@class='col-lg-6 col-6 ad_btn2']/a[@class='btn btn-primary float-right']")
	WebElement callToActionChildWindow;

	@FindBy(id = "totaladscount")
	WebElement toatal_Count_Ads;

	@FindBy(xpath = "//button[text()='Filters']")
	WebElement filterDropDown;


	@FindBy(xpath = "//input[@placeholder='Call to Action']")
	WebElement callToAction_field;

	@FindBy(id = "callToAction")
	WebElement calltoActionDropdown;

	@FindBy(xpath = "//li[text()='Apply Now']")
	WebElement applyNow;

	@FindBy(id = "lang")
	WebElement filterslangugage;

	@FindBy(xpath = "//option[text()='Abkhazian']")
	WebElement Abkhazian;

	@FindBy(xpath = "(//span[@class='select2-selection select2-selection--multiple'])[10]")
	WebElement manuallangfilter;

	@FindBy(id = "select2-lang-result-vi84-aa")
	WebElement lalsl;

	@FindBy(id = "gender")
	WebElement filtersgender;

	@FindBy(xpath = "//input[@id='start-age']")
	WebElement minage;

	@FindBy(xpath = "//input[@id='end-age']")
	WebElement maxage;


	@FindBy(id = "language")
	WebElement language;

	@FindBy(id = "male")
	WebElement male;
	@FindBy(id = "male_percent")
	WebElement male_percent;
	@FindBy(id = "male_count")
	WebElement male_count;

	@FindBy(id = "female")
	WebElement female;
	@FindBy(id = "female_percent")
	WebElement female_percent;
	@FindBy(id = "female_count")
	WebElement female_count;


	@FindBy(xpath="(//*[@class='col-lg-12 col-sm-12 col-12']//*[name()='svg']//*[local-name()='text']//*[local-name()='tspan'])")
	List<WebElement>countryDropDown1 ;

	//@FindBy(xpath ="(//*[name()='svg']//*[local-name()='tspan'])[33]")
	@FindBy(xpath = "(//*[@class='col-lg-12 col-sm-12 col-12']//*[name()='svg']//*[local-name()='text']//*[local-name()='tspan'])[3]")
	WebElement country;

	@FindBy(xpath = "(//div[@id='ageChart']//div//*[name()='tspan'][1])[14]")
	WebElement one;
	@FindBy(xpath = "(//div[@id='ageChart']//div//*[name()='tspan'][1])[6]")
	WebElement percentageone;

	@FindBy(xpath = "(//div[@id='ageChart']//div//*[name()='tspan'][1])[13]")
	WebElement two;
	@FindBy(xpath = "(//div[@id='ageChart']//div//*[name()='tspan'][1])[5]")
	WebElement percentagetwo;


	@FindBy(xpath = "(//div[@id='ageChart']//div//*[name()='tspan'][1])[11]")
	WebElement three;
	@FindBy(xpath = "(//div[@id='ageChart']//div//*[name()='tspan'][1])[4]")
	WebElement percentagethree;

	@FindBy(xpath = "(//div[@id='ageChart']//div//*[name()='tspan'][1])[10]")
	WebElement four;
	@FindBy(xpath = "(//div[@id='ageChart']//div//*[name()='tspan'][1])[3]")
	WebElement percentagefour;

	@FindBy(xpath = "(//div[@id='ageChart']//div//*[name()='tspan'][1])[9]")
	WebElement five;
	@FindBy(xpath = "(//div[@id='ageChart']//div//*[name()='tspan'][1])[2]")
	WebElement percentagefive;

	@FindBy(xpath = "(//div[@id='ageChart']//div//*[name()='tspan'][1])[12]")
	WebElement six;
	@FindBy(xpath = "(//div[@id='ageChart']//div//*[name()='tspan'][1])[1]")
	WebElement percentagesix;



	@FindBy(xpath = "//*[@class='right_icon_round introjs-step-14']")
	WebElement createrequesticon;

	@FindBy(xpath = "//*[@class='right_icon_round introjs-step-15']")
	WebElement invitedFirendicon;

	@FindBy(xpath = "//*[@class='right_icon_round introjs-step-16']")
	WebElement youtubeicon;

	@FindBy(xpath = "//*[@class='right_icon_round introjs-step-18']")
	WebElement twittericon;

	@FindBy(xpath = "//*[@class='right_icon_round']")
	WebElement bookDemo;

	@FindBy(id = "req_report_url")
	WebElement enterurl;

	@FindBy(id = "req_report_keyword")
	WebElement enterkeyword;

	@FindBy(id = "req_report_advertiser")
	WebElement enteradvertiser;

	@FindBy(id = "request_submit")
	WebElement Sumbit;

	@FindBy(xpath =  "(//td)[1]")
	WebElement listCheck;

	@FindBy(id = "email_text")
	WebElement Invitefriendsviaemail;

	@FindBy(xpath = "//button[@type='submit']")
	WebElement SendInvite;

	@FindBy(xpath = "(//div[@class='upload']//input)[1]")
	WebElement fileUpload;


	@FindBy(xpath="//textarea[@id='email_text']")
	WebElement eamilTextField;

	@FindBy(xpath="//input[@id='fileUpload']")
	WebElement chooseFile;

	@FindBy(xpath="//button[contains(text(),'Send invite')]")
	WebElement sendFile;

	@FindBy(xpath = "//button[text()='OK']")
	WebElement ok;

	@FindBy(xpath = "//button[normalize-space()='Lander Properties']")
	WebElement landerProperties;

	@FindBy(css =".btn.btn-primary.btn-lg.dropdown-toggle.top_dropdown_btn.introjs-step-5")
	WebElement landerProperties1;

	@FindBy(xpath = "//input[@placeholder='Ecommerce Platform']")
	WebElement ecommerceplatform;

	@FindBy(id="marketing")
	WebElement MarketingPlatform;

	@FindBy(id = "ecommerce")
	WebElement ecommerce;


	@FindBy(id = "destination_url")
	WebElement link1;

	@FindBy(id = "//a[@id='destination_url']//a[@target='_blank']")
	WebElement link2;

	@FindBy(id = "//a[@id='redirectsurls']//a[@target='_blank']")
	WebElement link3;

	@FindBy(id = "redirectsurls")
	WebElement link4;

	@FindBy(id = "//a[@id='source_url']//a[@target='_blank']")
	WebElement link5;

	@FindBy(id = "source_url")
	WebElement link6;

	@FindBy(xpath = "//a[@id='redirectsurls']//a[@target='_blank']")
	WebElement link7;

	@FindBy(id = "redirectsurls")
	WebElement link8;



	@FindBy(id = "redirect_url")
	WebElement link9;
	@FindBy(xpath = "//a[@id='redirect_url']//a[@target='_blank']")
	WebElement link10;


	@FindBy(xpath = "//a[@id='final_url']//a[@target='_blank']")
	WebElement link11;

	@FindBy(id = "final_url")
	WebElement link12;



	@FindBy(id = "fb_post_link")
	WebElement link13;

	@FindBy(xpath = "//a[@id='fb_post_link']//a[@target='_blank']")
	WebElement link14;

	@FindBy(id = "destination_url")
	WebElement destinationUrl;

	@FindBy(id = "redirectsurls")
	WebElement redirectsurls;



	@FindBy(xpath = "(//div[@class='card_col_1']//img[@class='shopify_icon'])[1]")
	WebElement image1;
	@FindBy(xpath = "(//div[@class='card_col_2']//img[@class='shopify_icon'])[1]")
	WebElement image2;
	@FindBy(xpath = "(//div[@class='card_col_3']//img[@class='shopify_icon'])[1]")
	WebElement image3;
	@FindBy(xpath = "(//div[@class='card_col_1']//img[@class='shopify_icon'])[2]")
	WebElement image4;
	@FindBy(xpath = "(//div[@class='card_col_2']//img[@class='shopify_icon'])[2]")
	WebElement image5;
	@FindBy(xpath = "(//div[@class='card_col_3']//img[@class='shopify_icon'])[2]")
	WebElement image6;
	@FindBy(xpath = "(//div[@class='card_col_1']//img[@class='shopify_icon'])[3]")
	WebElement image7;
	@FindBy(xpath = "(//div[@class='card_col_2']//img[@class='shopify_icon'])[3]")
	WebElement image8;
	@FindBy(xpath = "(//div[@class='card_col_3']//img[@class='shopify_icon'])[3]")
	WebElement image9;
	@FindBy(xpath = "(//div[@class='card_col_1']//img[@class='shopify_icon'])[4]")
	WebElement image10;
	@FindBy(xpath = "(//div[@class='card_col_2']//img[@class='shopify_icon'])[4]")
	WebElement image11;
	@FindBy(xpath = "(//div[@class='card_col_3']//img[@class='shopify_icon'])[4]")
	WebElement image12;
	@FindBy(xpath = "(//div[@class='card_col_1']//img[@class='shopify_icon'])[5]")
	WebElement image13;
	@FindBy(xpath = "(//div[@class='card_col_2']//img[@class='shopify_icon'])[5]")
	WebElement image14;
	@FindBy(xpath = "(//div[@class='card_col_3']//img[@class='shopify_icon'])[5]")
	WebElement image15;

	// Ads
	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[1]")
	WebElement date1;
	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[1]")
	WebElement lastdate1;
	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[1]")
	WebElement ShowAnalytics1;

	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[1]")
	WebElement date2;
	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[1]")
	WebElement lastdate2;
	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[1]")
	WebElement ShowAnalytics2;

	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[1]")
	WebElement date3;
	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[1]")
	WebElement lastdate3;
	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[1]")
	WebElement ShowAnalytics3;

	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[2]")
	WebElement date4;
	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[2]")
	WebElement lastdate4;
	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[2]")
	WebElement ShowAnalytics4;

	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[2]")
	WebElement date5;
	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[2]")
	WebElement lastdate5;
	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[2]")
	WebElement ShowAnalytics5;

	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[2]")
	WebElement date6;
	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[2]")
	WebElement lastdate6;
	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[2]")
	WebElement ShowAnalytics6;

	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[3]")
	WebElement date7;
	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[3]")
	WebElement lastdate7;
	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[3]")
	WebElement ShowAnalytics7;

	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[3]")
	WebElement date8;
	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[3]")
	WebElement lastdate8;
	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[3]")
	WebElement ShowAnalytics8;

	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[3]")
	WebElement date9;
	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[3]")
	WebElement lastdate9;
	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[3]")
	WebElement ShowAnalytics9;

	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[4]")
	WebElement date10;
	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[4]")
	WebElement lastdate10;
	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[4]")
	WebElement ShowAnalytics10;

	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[4]")
	WebElement date11;
	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[4]")
	WebElement lastdate11;
	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[4]")
	WebElement ShowAnalytics11;

	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[4]")
	WebElement date12;
	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[4]")
	WebElement lastdate12;
	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[4]")
	WebElement ShowAnalytics12;

	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[5]")
	WebElement date13;
	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[5]")
	WebElement lastdate13;
	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[5]")
	WebElement ShowAnalytics13;

	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[5]")
	WebElement date14;
	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[5]")
	WebElement lastdate14;
	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[5]")
	WebElement ShowAnalytics14;

	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='col-lg-6 float-left native_txt_below_btn gdn_text_left']//span)[5]")
	WebElement date15;
	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='col-lg-6 float-right native_txt_below_btn gdn_text_right']//span)[5]")
	WebElement lastdate15;
	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[5]")
	WebElement ShowAnalytics15;



	public void GdnpageSortBy() throws Exception
	{
		Reporter.log("<B><font color = 'purple'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();


		//		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'purple'> Step3 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(gdn);
		helper.highLightElement(driver, gdn);
		helper.Scrollintoview(gdn);
		helper.waitFor(gdn);
		try {
			gdn.click();
			gdn.click();
		} catch (Exception e) {
			// TODO: handle exception
			helper.jsCLick(gdn);
			helper.jsCLick(gdn);
		}
		helper.waitForPageToLoad();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'purple'> Step2 -</font> I am on the page :" + Page_titel);

		Assert.assertTrue(gdn.isDisplayed(), "PowerAdSpy | GDN Dashboard");

		Reporter.log("<B><font color = 'purple'> Step4 -</font> Clicked On GDN  Icon");
				//helper.waitForPageToLoad();
		try {
	    	helper.waitFor(NewFeatureClosedButton);
	    	helper.Scrollintoview(NewFeatureClosedButton);
	    	helper.highLightElement(driver, NewFeatureClosedButton);
	    	NewFeatureClosedButton.click();
		} catch (Exception e) {
			// TODO: handle exception
		}
	}

	public void Gdn_SortBy_Newest() throws Exception
	{
		System.out.println();
		System.out.println("ShortBy Newest:");
		Reporter.log("    ");
		Reporter.log("<B><font color = 'green'>  - ShortBy Newest Step will Start from here </font>  ");
		helper.waitFor(sortBy);
		helper.highLightElement(driver, sortBy);
		sortBy.click();
		Reporter.log("");
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On sortBy Icon");

		helper.waitFor(SortBy_Newest);
		helper.highLightElement(driver, SortBy_Newest);
		SortBy_Newest.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On SortBy Newest Icon");


		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_div.getText();
		System.out.println("Newest Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Newest Total Ad Count is :"+totaladscount);
		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -1 Ad- -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			helper.Scrollintoview(date1);
			helper.highLightElement(driver, date1);
			String imageDate=date1.getText();
			System.out.println("First Image Date is :"+imageDate);
			System.out.println("Current Image Date: "+imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate); 

			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);

			String linkText1 = ShowAnalytics1.getAttribute("href");
			String idString1 = null;
			String[] splitStringid1 = linkText1.split("/");
			for(int i=0;i<splitStringid1.length;i++) {
				String actualDate1=splitStringid1[splitStringid1.length-1]; 
				System.out.println("actualDate : " + actualDate1);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate1);
				break;
			}

			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1= s.iterator();
			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					Thread.sleep(2000);
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.Scrollintoview(firstSeen);
					String imageDate1 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(lastSeen);
					String imageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate2);
					helper.waitFor(postDate);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join=null;
					String[] splitString = imageDate1.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						join= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join);
					}
					Assert.assertEquals(imageDate, imageDate2);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate+"="+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching First Seen  Date Assert Pass :"+imageDate+"="+imageDate2);


					String join201=null;
					String[] splitString201 = imageDate2.split(" ");
					for(int i=0;i<splitString201.length-2;i++) {
						String actualDate201=splitString201[i]; 
						join201= splitString201[i+1]+" "+ splitString201[i]+" " + splitString201[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join201);
					}
					Assert.assertEquals(lastimageDate1, imageDate1);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate1+"="+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate1+"="+imageDate1);

					driver.close();
				}
			}

			driver.switchTo().window(parent);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -2 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("2 Ads image");

			helper.Scrollintoview(date2);
			helper.highLightElement(driver, date2);
			String imageDate2=date2.getText();
			System.out.println("First Image Date is :"+imageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate2); 

			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2);

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);

			String linkText2 = ShowAnalytics2.getAttribute("href");
			String idString2 = null;
			String[] splitStringid2 = linkText2.split("/");
			for(int i=0;i<splitStringid2.length;i++) {
				String actualDate2=splitStringid2[splitStringid2.length-1]; 
				System.out.println("actualDate : " + actualDate2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate2);
				break;
			}
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent1=driver.getWindowHandle();
			Set<String>s1=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I11= s1.iterator();
			while(I11.hasNext())
			{
				String child_window=I11.next();
				if(!parent1.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					Thread.sleep(2000);
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join2=null;
					String[] splitString2 = imageDate11.split(" ");
					for(int i=0;i<splitString2.length-2;i++) {
						String actualDate2=splitString2[i]; 
						join2= splitString2[i+1]+" "+ splitString2[i]+" " + splitString2[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2);
					}
					Assert.assertEquals(imageDate2, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate21);

					String join202=null;
					String[] splitString202 = imageDate21.split(" ");
					for(int i=0;i<splitString202.length-2;i++) {
						String actualDate202=splitString202[i]; 
						join202= splitString202[i+1]+" "+ splitString202[i]+" " + splitString202[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join202);
					}
					Assert.assertEquals(lastimageDate2, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate2+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate2+"="+imageDate11);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate2);
			driver.switchTo().window(parent1);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -3 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("3 Ads image");

			helper.Scrollintoview(date3);
			helper.highLightElement(driver, date3);
			String imageDate3=date3.getText();
			System.out.println("First Image Date is :"+imageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate3); 
			helper.waitFor(firstSeen);
			helper.waitFor(lastSeen);
			helper.waitFor(postDate);
			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3);

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);

			String linkText3 = ShowAnalytics3.getAttribute("href");
			String idString3 = null;
			String[] splitStringid3 = linkText3.split("/");
			for(int i=0;i<splitStringid3.length;i++) {
				String actualDate3=splitStringid3[splitStringid3.length-1]; 
				System.out.println("actualDate : " + actualDate3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate3);
				break;
			}
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent121=driver.getWindowHandle();
			Set<String>s121=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I111= s121.iterator();
			while(I111.hasNext())
			{
				String child_window=I111.next();
				if(!parent121.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join3=null;
					String[] splitString3 = imageDate111.split(" ");
					for(int i=0;i<splitString3.length-2;i++) {
						String actualDate3=splitString3[i]; 
						join3= splitString3[i+1]+" "+ splitString3[i]+" " + splitString3[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join3);
					}

					Assert.assertEquals(lastimageDate3,imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate3+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+lastimageDate3+"="+imageDate21);

					String join203=null;
					String[] splitString203 = imageDate21.split(" ");
					for(int i=0;i<splitString203.length-2;i++) {
						String actualDate203=splitString203[i]; 
						join203= splitString203[i+1]+" "+ splitString203[i]+" " + splitString203[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join203);
					}
					Assert.assertEquals(lastimageDate3, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate3+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate3+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate3);
			driver.switchTo().window(parent121);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}	


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -4 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("4 Ads image");
			helper.Scrollintoview(date4);
			helper.highLightElement(driver, date4);
			String imageDate4=date4.getText();
			System.out.println("First Image Date is :"+imageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate4); 

			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4);

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);

			String linkText4 = ShowAnalytics4.getAttribute("href");
			String idString4 = null;
			String[] splitStringid4 = linkText4.split("/");
			for(int i=0;i<splitStringid4.length;i++) {
				String actualDate4=splitStringid4[splitStringid4.length-1]; 
				System.out.println("actualDate : " + actualDate4);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate4);
				break;
			}

			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent111=driver.getWindowHandle();
			Set<String>s111=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1111= s111.iterator();
			while(I1111.hasNext())
			{
				String child_window=I1111.next();
				if(!parent111.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate1111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join4=null;
					String[] splitString4 = imageDate1111.split(" ");
					for(int i=0;i<splitString4.length-2;i++) {
						String actualDate4=splitString4[i]; 
						join4= splitString4[i+1]+" "+ splitString4[i]+" " + splitString4[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join4);
					}
					Assert.assertEquals(imageDate4, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate21);

					String join204=null;
					String[] splitString204 = imageDate21.split(" ");
					for(int i=0;i<splitString204.length-2;i++) {
						String actualDate204=splitString204[i]; 
						join204= splitString204[i+1]+" "+ splitString204[i]+" " + splitString204[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join204);
					}
					Assert.assertEquals(lastimageDate4, imageDate1111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate4+"="+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate4+"="+imageDate1111);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate4);
			driver.switchTo().window(parent111);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -5 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("5 Ads image");
			helper.Scrollintoview(date5);
			helper.highLightElement(driver, date5);
			String imageDate5=date5.getText();
			System.out.println("First Image Date is :"+imageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate5); 

			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5);

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);

			String linkText5 = ShowAnalytics5.getAttribute("href");
			String idString5 = null;
			String[] splitStringid5 = linkText5.split("/");
			for(int i=0;i<splitStringid5.length;i++) {
				String actualDate5=splitStringid5[splitStringid5.length-1]; 
				System.out.println("actualDate : " + actualDate5);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate5);
				break;
			}

			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent5=driver.getWindowHandle();
			Set<String>s5=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I5= s5.iterator();
			while(I5.hasNext())
			{
				String child_window=I5.next();
				if(!parent5.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate6 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate6);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join5=null;
					String[] splitString5 = imageDate6.split(" ");
					for(int i=0;i<splitString5.length-2;i++) {
						String actualDate5=splitString5[i]; 
						join5= splitString5[i+1]+" "+ splitString5[i]+" " + splitString5[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join5);
					}
					Assert.assertEquals(imageDate5, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate21);

					String join205=null;
					String[] splitString205 = imageDate21.split(" ");
					for(int i=0;i<splitString205.length-2;i++) {
						String actualDate205=splitString205[i]; 
						join205= splitString205[i+1]+" "+ splitString205[i]+" " + splitString205[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join205);
					}
					Assert.assertEquals(lastimageDate5, imageDate6);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate5+"="+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate5+"="+imageDate6);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate5);
			driver.switchTo().window(parent5);
		} catch (Exception e) {
			// TODO: handle exception	
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("6 Ads image");
			helper.Scrollintoview(date6);
			helper.highLightElement(driver, date6);
			String imageDate6=date6.getText();
			System.out.println("First Image Date is :"+imageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate6); 

			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6);

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);

			String linkText6 = ShowAnalytics6.getAttribute("href");
			String idString6 = null;
			String[] splitStringid6 = linkText6.split("/");
			for(int i=0;i<splitStringid6.length;i++) {
				String actualDate6=splitStringid6[splitStringid6.length-1]; 
				System.out.println("actualDate : " + actualDate6);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate6);
				break;
			}

			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent6=driver.getWindowHandle();
			Set<String>s6=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I6= s6.iterator();
			while(I6.hasNext())
			{
				String child_window=I6.next();
				if(!parent6.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join6=null;
					String[] splitString6 = imageDate11.split(" ");
					for(int i=0;i<splitString6.length-2;i++) {
						String actualDate6=splitString6[i]; 
						join6= splitString6[i+1]+" "+ splitString6[i]+" " + splitString6[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join6);
					}
					Assert.assertEquals(imageDate6, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate21);

					String join206=null;
					String[] splitString206 = imageDate21.split(" ");
					for(int i=0;i<splitString206.length-2;i++) {
						String actualDate206=splitString206[i]; 
						join206= splitString206[i+1]+" "+ splitString206[i]+" " + splitString206[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join206);
					}
					Assert.assertEquals(lastimageDate6, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate6+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate6+"="+imageDate11);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate6);
			driver.switchTo().window(parent6);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("7 Ads image");
			helper.Scrollintoview(date7);
			helper.highLightElement(driver, date7);
			String imageDate7=date7.getText();
			System.out.println("First Image Date is :"+imageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate7); 

			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7);

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);

			String linkText7 = ShowAnalytics7.getAttribute("href");
			String idString7 = null;
			String[] splitStringid7 = linkText7.split("/");
			for(int i=0;i<splitStringid7.length;i++) {
				String actualDate7=splitStringid7[splitStringid7.length-1]; 
				System.out.println("actualDate : " + actualDate7);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate7);
				break;
			}
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent17=driver.getWindowHandle();
			Set<String>s17=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I17= s17.iterator();
			while(I17.hasNext())
			{
				String child_window=I17.next();
				if(!parent17.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join7=null;
					String[] splitString7 = imageDate11.split(" ");
					for(int i=0;i<splitString7.length-2;i++) {
						String actualDate7=splitString7[i]; 
						join7= splitString7[i+1]+" "+ splitString7[i]+" " + splitString7[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join7);
					}
					Assert.assertEquals(imageDate7, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate21);

					String join207=null;
					String[] splitString207 = imageDate21.split(" ");
					for(int i=0;i<splitString207.length-2;i++) {
						String actualDate207=splitString207[i]; 
						join207= splitString207[i+1]+" "+ splitString207[i]+" " + splitString207[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join207);
					}
					Assert.assertEquals(lastimageDate7, imageDate11);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate7+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate7+"="+imageDate11);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate7);
			driver.switchTo().window(parent17);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -8 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("8 Ads image");
			helper.Scrollintoview(date8);
			helper.highLightElement(driver, date8);
			String imageDate8=date8.getText();
			System.out.println("First Image Date is :"+imageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate8); 

			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8);

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);

			String linkText8 = ShowAnalytics8.getAttribute("href");
			String idString8 = null;
			String[] splitStringid8 = linkText8.split("/");
			for(int i=0;i<splitStringid8.length;i++) {
				String actualDate8=splitStringid8[splitStringid8.length-1]; 
				System.out.println("actualDate : " + actualDate8);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate8);
				break;
			}

			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent8=driver.getWindowHandle();
			Set<String>s8=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I8= s8.iterator();
			while(I8.hasNext())
			{
				String child_window=I8.next();
				if(!parent8.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join8=null;
					String[] splitString8 = imageDate11.split(" ");
					for(int i=0;i<splitString8.length-2;i++) {
						String actualDate8=splitString8[i]; 
						join8= splitString8[i+1]+" "+ splitString8[i]+" " + splitString8[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join8);
					}
					Assert.assertEquals(imageDate8, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate21);

					String join208=null;
					String[] splitString208 = imageDate21.split(" ");
					for(int i=0;i<splitString208.length-2;i++) {
						String actualDate208=splitString208[i]; 
						join208= splitString208[i+1]+" "+ splitString208[i]+" " + splitString208[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join208);
					}
					Assert.assertEquals(lastimageDate8, imageDate11);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate8+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate8+"="+imageDate11);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate8);
			driver.switchTo().window(parent8);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad- </font>  ");
			System.out.println(" ");
			System.out.println("9 Ads image");
			helper.Scrollintoview(date9);
			helper.highLightElement(driver, date9);
			String imageDate9=date9.getText();
			System.out.println("First Image Date is :"+imageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate9); 

			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9);

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);

			String linkText9 = ShowAnalytics9.getAttribute("href");
			String idString9 = null;
			String[] splitStringid9 = linkText9.split("/");
			for(int i=0;i<splitStringid9.length;i++) {
				String actualDate9=splitStringid9[splitStringid9.length-1]; 
				System.out.println("actualDate : " + actualDate9);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate9);
				break;
			}
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent9=driver.getWindowHandle();
			Set<String>s9=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I9=s9.iterator();
			while(I9.hasNext())
			{
				String child_window=I9.next();
				if(!parent9.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate19 = firstSeen.getText();

					System.out.println("Analytics Image First Seen Date: "+imageDate19);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join9=null;
					String[] splitString9 = imageDate19.split(" ");
					for(int i=0;i<splitString9.length-2;i++) {
						String actualDate9=splitString9[i]; 
						join9= splitString9[i+1]+" "+ splitString9[i]+" " + splitString9[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join9);
					}
					Assert.assertEquals(imageDate9, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate21);

					String join209=null;
					String[] splitString209 = imageDate21.split(" ");
					for(int i=0;i<splitString209.length-2;i++) {
						String actualDate209=splitString209[i]; 
						join209= splitString209[i+1]+" "+ splitString209[i]+" " + splitString209[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join209);
					}
					Assert.assertEquals(lastimageDate9, imageDate19);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate9+"="+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate9+"="+imageDate19);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate9);
			driver.switchTo().window(parent9);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -10 Ad</font>  ");
			System.out.println(" ");
			System.out.println("10 Ads image");

			helper.Scrollintoview(date10);
			helper.highLightElement(driver, date10);
			String imageDate10=date10.getText();
			System.out.println("First Image Date is :"+imageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate10); 

			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10);

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);

			String linkText10 = ShowAnalytics10.getAttribute("href");
			String idString10 = null;
			String[] splitStringid10 = linkText10.split("/");
			for(int i=0;i<splitStringid10.length;i++) {
				String actualDate10=splitStringid10[splitStringid10.length-1]; 
				System.out.println("actualDate : " + actualDate10);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate10);
				break;
			}
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent10=driver.getWindowHandle();
			Set<String>s10=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I10= s10.iterator();
			while(I10.hasNext())
			{
				String child_window=I10.next();
				if(!parent10.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join10=null;
					String[] splitString10 = imageDate11.split(" ");
					for(int i=0;i<splitString10.length-2;i++) {
						String actualDate10=splitString10[i]; 
						join10= splitString10[i+1]+" "+ splitString10[i]+" " + splitString10[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join10);
					}
					Assert.assertEquals(imageDate10, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);

					String join2010=null;
					String[] splitString2010 = imageDate21.split(" ");
					for(int i=0;i<splitString2010.length-2;i++) {
						String actualDate2010=splitString2010[i]; 
						join2010= splitString2010[i+1]+" "+ splitString2010[i]+" " + splitString2010[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2010);
					}
					Assert.assertEquals(lastimageDate10, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate10+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate10+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate10);
			driver.switchTo().window(parent10);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -11 Ad </font>  ");
			System.out.println(" ");
			System.out.println("11 Ads image");

			helper.Scrollintoview(date11);
			helper.highLightElement(driver, date11);
			String imageDate11=date11.getText();
			System.out.println("First Image Date is :"+imageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate11); 

			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11);

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);

			String linkText11 = ShowAnalytics11.getAttribute("href");
			String idString11 = null;
			String[] splitStringid11 = linkText11.split("/");
			for(int i=0;i<splitStringid11.length;i++) {
				String actualDate11=splitStringid11[splitStringid11.length-1]; 
				System.out.println("actualDate : " + actualDate11);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate11);
				break;
			}
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent11=driver.getWindowHandle();
			Set<String>s11=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I110= s11.iterator();
			while(I110.hasNext())
			{
				String child_window=I110.next();
				if(!parent11.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate101 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate101);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join11=null;
					String[] splitString11 = imageDate101.split(" ");
					for(int i=0;i<splitString11.length-2;i++) {
						String actualDate11=splitString11[i]; 
						join11= splitString11[i+1]+" "+ splitString11[i]+" " + splitString11[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join11);
					}
					Assert.assertEquals(imageDate11, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate21);

					String join2011=null;
					String[] splitString2011 = imageDate21.split(" ");
					for(int i=0;i<splitString2011.length-2;i++) {
						String actualDate2011=splitString2011[i]; 
						join2011= splitString2011[i+1]+" "+ splitString2011[i]+" " + splitString2011[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2011);
					}
					Assert.assertEquals(lastimageDate11, imageDate101);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate11+"="+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate11+"="+imageDate101);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate11);
			driver.switchTo().window(parent11);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -12 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("12 Ads image");

			helper.Scrollintoview(date12);
			helper.highLightElement(driver, date12);
			String imageDate12=date12.getText();
			System.out.println("First Image Date is :"+imageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate12); 

			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12);

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);

			String linkText12 = ShowAnalytics12.getAttribute("href");
			String idString12 = null;
			String[] splitStringid12 = linkText12.split("/");
			for(int i=0;i<splitStringid12.length;i++) {
				String actualDate12=splitStringid12[splitStringid12.length-1]; 
				System.out.println("actualDate : " + actualDate12);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate12);
				break;
			}

			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent12=driver.getWindowHandle();
			Set<String>s12=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I112= s12.iterator();
			while(I112.hasNext())
			{
				String child_window=I112.next();
				if(!parent12.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate112 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate112);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join12=null;
					String[] splitString12 = imageDate112.split(" ");
					for(int i=0;i<splitString12.length-2;i++) {
						String actualDate12=splitString12[i]; 
						join12= splitString12[i+1]+" "+ splitString12[i]+" " + splitString12[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join12);
					}
					Assert.assertEquals(imageDate12, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate12+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate12+"="+imageDate21);

					String join2012=null;
					String[] splitString2012 = imageDate21.split(" ");
					for(int i=0;i<splitString2012.length-2;i++) {
						String actualDate2012=splitString2012[i]; 
						join2012= splitString2012[i+1]+" "+ splitString2012[i]+" " + splitString2012[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2012);
					}
					Assert.assertEquals(lastimageDate12, imageDate112);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate12+"="+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate12+"="+imageDate112);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate12);
			driver.switchTo().window(parent12);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("13 Ads image");

			helper.Scrollintoview(date13);
			helper.highLightElement(driver, date13);
			String imageDate13=date13.getText();
			System.out.println("First Image Date is :"+imageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate13); 

			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13);

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);

			String linkText13 = ShowAnalytics13.getAttribute("href");
			String idString13 = null;
			String[] splitStringid13 = linkText13.split("/");
			for(int i=0;i<splitStringid13.length;i++) {
				String actualDate13=splitStringid13[splitStringid13.length-1]; 
				System.out.println("actualDate : " + actualDate13);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate13);
				break;
			}

			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent13=driver.getWindowHandle();
			Set<String>s13=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I13= s13.iterator();
			while(I13.hasNext())
			{
				String child_window=I13.next();
				if(!parent13.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate113 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate113);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join13=null;
					String[] splitString13 = imageDate113.split(" ");
					for(int i=0;i<splitString13.length-2;i++) {
						String actualDate13=splitString13[i]; 
						join13= splitString13[i+1]+" "+ splitString13[i]+" " + splitString13[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join13);
					}
					Assert.assertEquals(imageDate13, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate21);

					String join2013=null;
					String[] splitString2013 = imageDate21.split(" ");
					for(int i=0;i<splitString2013.length-2;i++) {
						String actualDate2013=splitString2013[i]; 
						join2013= splitString2013[i+1]+" "+ splitString2013[i]+" " + splitString2013[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2013);
					}
					Assert.assertEquals(lastimageDate13, imageDate113);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate13+"="+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate13+"="+imageDate113);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate13);
			driver.switchTo().window(parent13);
		} catch (Exception e) {

			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("14 Ads image");

			helper.Scrollintoview(date14);
			helper.highLightElement(driver, date14);
			String imageDate14=date14.getText();
			System.out.println("First Image Date is :"+imageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate14); 

			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14);

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);

			String linkText14 = ShowAnalytics14.getAttribute("href");
			String idString14 = null;
			String[] splitStringid14 = linkText14.split("/");
			for(int i=0;i<splitStringid14.length;i++) {
				String actualDate14=splitStringid14[splitStringid14.length-1]; 
				System.out.println("actualDate : " + actualDate14);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate14);
				break;
			}

			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent14=driver.getWindowHandle();
			Set<String>s14=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I14= s14.iterator();
			while(I14.hasNext())
			{
				String child_window=I14.next();
				if(!parent14.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate114 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate114);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join14=null;
					String[] splitString14 = imageDate114.split(" ");
					for(int i=0;i<splitString14.length-2;i++) {
						String actualDate14=splitString14[i]; 
						join14= splitString14[i+1]+" "+ splitString14[i]+" " + splitString14[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join14);
					}
					Assert.assertEquals(imageDate14, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate21);

					String join2014=null;
					String[] splitString2014 = imageDate21.split(" ");
					for(int i=0;i<splitString2014.length-2;i++) {
						String actualDate2014=splitString2014[i]; 
						join2014= splitString2014[i+1]+" "+ splitString2014[i]+" " + splitString2014[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2014);
					}
					Assert.assertEquals(lastimageDate14, imageDate114);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate14+"="+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate14+"="+imageDate114);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate14);
			driver.switchTo().window(parent14);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("Second Ads image");

			helper.Scrollintoview(date15);
			helper.highLightElement(driver, date15);
			String imageDate15=date15.getText();
			System.out.println("First Image Date is :"+imageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate15); 

			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15);

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);

			String linkText15 = ShowAnalytics15.getAttribute("href");
			String idString15 = null;
			String[] splitStringid15 = linkText15.split("/");
			for(int i=0;i<splitStringid15.length;i++) {
				String actualDate15=splitStringid15[splitStringid15.length-1]; 
				System.out.println("actualDate : " + actualDate15);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate15);
				break;
			}
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent15=driver.getWindowHandle();
			Set<String>s15=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I15= s15.iterator();
			while(I15.hasNext())
			{
				String child_window=I15.next();
				if(!parent15.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate115 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate115);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join15=null;
					String[] splitString15 = imageDate115.split(" ");
					for(int i=0;i<splitString15.length-2;i++) {
						String actualDate15=splitString15[i]; 
						join15= splitString15[i+1]+" "+ splitString15[i]+" " + splitString15[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join15);
					}
					Assert.assertEquals(imageDate15, imageDate115);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);

					String join2015=null;
					String[] splitString2015 = imageDate21.split(" ");
					for(int i=0;i<splitString2015.length-2;i++) {
						String actualDate2015=splitString2015[i]; 
						join2015= splitString2015[i+1]+" "+ splitString2015[i]+" " + splitString2015[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2015);
					}
					Assert.assertEquals(lastimageDate15, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate15+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate15+"="+imageDate21);

					driver.close();
				}
			}

			System.out.println("Current Image Date: "+imageDate15);
			driver.switchTo().window(parent15);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

	}



	/****  Gdn SortBy Last Seen ****/	
	public void Gdn_SortBy_LastSeen() throws Exception
	{

		System.out.println();
		System.out.println("ShortBy Last Seen: ");
		Reporter.log("    ");
		Reporter.log("<B><font color = 'green'>  - ShortBy Last Seen Step will Start from here </font> ");
		helper.waitFor(sortBy);
		helper.highLightElement(driver, sortBy);
		helper.Scrollintoview(sortBy);
		sortBy.click();
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On sortBy Icon");

		helper.waitFor(dropdownFilter);
		helper.highLightElement(driver, dropdownFilter);
		helper.Scrollintoview(dropdownFilter);
		dropdownFilter.click();

		helper.waitFor(sortBy_LastSeen);
		helper.highLightElement(driver, sortBy_LastSeen);
		helper.Scrollintoview(sortBy_LastSeen);
		helper.jsCLick(sortBy_LastSeen);

		Reporter.log("<B><font color = 'orange'> Step6 -</font> Clicked On sortBy Last Seen Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step7 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();
		helper.waitForpage();

		String totaladscount=totaladscount_div.getText();
		System.out.println("Last Seen Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step8 -</font> Last Seen Total Ad Count is :"+ totaladscount);

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -1 Ad- -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			helper.Scrollintoview(date1);
			helper.highLightElement(driver, date1);
			String imageDate=date1.getText();
			System.out.println("First Image Date is :"+imageDate);
			System.out.println("Current Image Date: "+imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate); 

			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);

			String linkText1 = ShowAnalytics1.getAttribute("href");
			String idString1 = null;
			String[] splitStringid1 = linkText1.split("/");
			for(int i=0;i<splitStringid1.length;i++) {
				String actualDate1=splitStringid1[splitStringid1.length-1]; 
				System.out.println("actualDate : " + actualDate1);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate1);
				break;
			}

			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1= s.iterator();
			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					Thread.sleep(2000);
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.Scrollintoview(firstSeen);
					String imageDate1 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(lastSeen);
					String imageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate2);
					helper.waitFor(postDate);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join=null;
					String[] splitString = imageDate1.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						join= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join);
					}
					Assert.assertEquals(lastimageDate1, imageDate2);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate1+"="+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate1+"="+imageDate2);



					driver.close();
				}
			}

			driver.switchTo().window(parent);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -2 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("2 Ads image");

			helper.Scrollintoview(date2);
			helper.highLightElement(driver, date2);
			String imageDate2=date2.getText();
			System.out.println("First Image Date is :"+imageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate2); 

			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2);

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);

			String linkText2 = ShowAnalytics2.getAttribute("href");
			String idString2 = null;
			String[] splitStringid2 = linkText2.split("/");
			for(int i=0;i<splitStringid2.length;i++) {
				String actualDate2=splitStringid2[splitStringid2.length-1]; 
				System.out.println("actualDate : " + actualDate2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate2);
				break;
			}
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent1=driver.getWindowHandle();
			Set<String>s1=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I11= s1.iterator();
			while(I11.hasNext())
			{
				String child_window=I11.next();
				if(!parent1.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					Thread.sleep(2000);
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join2=null;
					String[] splitString2 = imageDate11.split(" ");
					for(int i=0;i<splitString2.length-2;i++) {
						String actualDate2=splitString2[i]; 
						join2= splitString2[i+1]+" "+ splitString2[i]+" " + splitString2[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2);
					}
					Assert.assertEquals(lastimageDate2, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate2+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date last Seen Assert Pass :"+lastimageDate2+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate2);
			driver.switchTo().window(parent1);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -3 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("3 Ads image");

			helper.Scrollintoview(date3);
			helper.highLightElement(driver, date3);
			String imageDate3=date3.getText();
			System.out.println("First Image Date is :"+imageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate3); 

			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3);

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);

			String linkText3 = ShowAnalytics3.getAttribute("href");
			String idString3 = null;
			String[] splitStringid3 = linkText3.split("/");
			for(int i=0;i<splitStringid3.length;i++) {
				String actualDate3=splitStringid3[splitStringid3.length-1]; 
				System.out.println("actualDate : " + actualDate3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate3);
				break;
			}
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent121=driver.getWindowHandle();
			Set<String>s121=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I111= s121.iterator();
			while(I111.hasNext())
			{
				String child_window=I111.next();
				if(!parent121.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join3=null;
					String[] splitString3 = imageDate111.split(" ");
					for(int i=0;i<splitString3.length-2;i++) {
						String actualDate3=splitString3[i]; 
						join3= splitString3[i+1]+" "+ splitString3[i]+" " + splitString3[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join3);
					}

					Assert.assertEquals(lastimageDate3,imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate3+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date last Seen Assert Pass :"+lastimageDate3+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate3);
			driver.switchTo().window(parent121);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}	


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -4 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("4 Ads image");
			helper.Scrollintoview(date4);
			helper.highLightElement(driver, date4);
			String imageDate4=date4.getText();
			System.out.println("First Image Date is :"+imageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate4); 

			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4);

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);

			String linkText4 = ShowAnalytics4.getAttribute("href");
			String idString4 = null;
			String[] splitStringid4 = linkText4.split("/");
			for(int i=0;i<splitStringid4.length;i++) {
				String actualDate4=splitStringid4[splitStringid4.length-1]; 
				System.out.println("actualDate : " + actualDate4);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate4);
				break;
			}

			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent111=driver.getWindowHandle();
			Set<String>s111=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1111= s111.iterator();
			while(I1111.hasNext())
			{
				String child_window=I1111.next();
				if(!parent111.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate1111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join4=null;
					String[] splitString4 = imageDate1111.split(" ");
					for(int i=0;i<splitString4.length-2;i++) {
						String actualDate4=splitString4[i]; 
						join4= splitString4[i+1]+" "+ splitString4[i]+" " + splitString4[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join4);
					}
					Assert.assertEquals(lastimageDate4, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate4+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date last Seen Assert Pass :"+lastimageDate4+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate4);
			driver.switchTo().window(parent111);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -5 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("5 Ads image");
			helper.Scrollintoview(date5);
			helper.highLightElement(driver, date5);
			String imageDate5=date5.getText();
			System.out.println("First Image Date is :"+imageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate5); 

			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5);

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);

			String linkText5 = ShowAnalytics5.getAttribute("href");
			String idString5 = null;
			String[] splitStringid5 = linkText5.split("/");
			for(int i=0;i<splitStringid5.length;i++) {
				String actualDate5=splitStringid5[splitStringid5.length-1]; 
				System.out.println("actualDate : " + actualDate5);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate5);
				break;
			}

			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent5=driver.getWindowHandle();
			Set<String>s5=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I5= s5.iterator();
			while(I5.hasNext())
			{
				String child_window=I5.next();
				if(!parent5.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate6 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate6);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join5=null;
					String[] splitString5 = imageDate6.split(" ");
					for(int i=0;i<splitString5.length-2;i++) {
						String actualDate5=splitString5[i]; 
						join5= splitString5[i+1]+" "+ splitString5[i]+" " + splitString5[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join5);
					}
					Assert.assertEquals(lastimageDate5, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate5+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date last Seen Assert Pass :"+lastimageDate5+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate5);
			driver.switchTo().window(parent5);
		} catch (Exception e) {
			// TODO: handle exception	
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("6 Ads image");
			helper.Scrollintoview(date6);
			helper.highLightElement(driver, date6);
			String imageDate6=date6.getText();
			System.out.println("First Image Date is :"+imageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate6); 

			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6);

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);

			String linkText6 = ShowAnalytics6.getAttribute("href");
			String idString6 = null;
			String[] splitStringid6 = linkText6.split("/");
			for(int i=0;i<splitStringid6.length;i++) {
				String actualDate6=splitStringid6[splitStringid6.length-1]; 
				System.out.println("actualDate : " + actualDate6);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate6);
				break;
			}

			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent6=driver.getWindowHandle();
			Set<String>s6=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I6= s6.iterator();
			while(I6.hasNext())
			{
				String child_window=I6.next();
				if(!parent6.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join6=null;
					String[] splitString6 = imageDate11.split(" ");
					for(int i=0;i<splitString6.length-2;i++) {
						String actualDate6=splitString6[i]; 
						join6= splitString6[i+1]+" "+ splitString6[i]+" " + splitString6[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join6);
					}
					Assert.assertEquals(lastimageDate6, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate6+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date last Seen Assert Pass :"+lastimageDate6+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate6);
			driver.switchTo().window(parent6);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("7 Ads image");
			helper.Scrollintoview(date7);
			helper.highLightElement(driver, date7);
			String imageDate7=date7.getText();
			System.out.println("First Image Date is :"+imageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate7); 

			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7);

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);

			String linkText7 = ShowAnalytics7.getAttribute("href");
			String idString7 = null;
			String[] splitStringid7 = linkText7.split("/");
			for(int i=0;i<splitStringid7.length;i++) {
				String actualDate7=splitStringid7[splitStringid7.length-1]; 
				System.out.println("actualDate : " + actualDate7);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate7);
				break;
			}
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent17=driver.getWindowHandle();
			Set<String>s17=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I17= s17.iterator();
			while(I17.hasNext())
			{
				String child_window=I17.next();
				if(!parent17.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join7=null;
					String[] splitString7 = imageDate11.split(" ");
					for(int i=0;i<splitString7.length-2;i++) {
						String actualDate7=splitString7[i]; 
						join7= splitString7[i+1]+" "+ splitString7[i]+" " + splitString7[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join7);
					}
					Assert.assertEquals(lastimageDate7, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate7+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date last Seen Assert Pass :"+lastimageDate7+"="+imageDate21);



					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate7);
			driver.switchTo().window(parent17);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -8 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("8 Ads image");
			helper.Scrollintoview(date8);
			helper.highLightElement(driver, date8);
			String imageDate8=date8.getText();
			System.out.println("First Image Date is :"+imageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate8); 

			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8);

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);

			String linkText8 = ShowAnalytics8.getAttribute("href");
			String idString8 = null;
			String[] splitStringid8 = linkText8.split("/");
			for(int i=0;i<splitStringid8.length;i++) {
				String actualDate8=splitStringid8[splitStringid8.length-1]; 
				System.out.println("actualDate : " + actualDate8);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate8);
				break;
			}

			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent8=driver.getWindowHandle();
			Set<String>s8=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I8= s8.iterator();
			while(I8.hasNext())
			{
				String child_window=I8.next();
				if(!parent8.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join8=null;
					String[] splitString8 = imageDate11.split(" ");
					for(int i=0;i<splitString8.length-2;i++) {
						String actualDate8=splitString8[i]; 
						join8= splitString8[i+1]+" "+ splitString8[i]+" " + splitString8[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join8);
					}
					Assert.assertEquals(lastimageDate8, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate8+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date last Seen Assert Pass :"+lastimageDate8+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate8);
			driver.switchTo().window(parent8);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad- </font>  ");
			System.out.println(" ");
			System.out.println("9 Ads image");
			helper.Scrollintoview(date9);
			helper.highLightElement(driver, date9);
			String imageDate9=date9.getText();
			System.out.println("First Image Date is :"+imageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate9); 

			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9);

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);

			String linkText9 = ShowAnalytics9.getAttribute("href");
			String idString9 = null;
			String[] splitStringid9 = linkText9.split("/");
			for(int i=0;i<splitStringid9.length;i++) {
				String actualDate9=splitStringid9[splitStringid9.length-1]; 
				System.out.println("actualDate : " + actualDate9);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate9);
				break;
			}
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent9=driver.getWindowHandle();
			Set<String>s9=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I9=s9.iterator();
			while(I9.hasNext())
			{
				String child_window=I9.next();
				if(!parent9.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate19 = firstSeen.getText();

					System.out.println("Analytics Image First Seen Date: "+imageDate19);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join9=null;
					String[] splitString9 = imageDate19.split(" ");
					for(int i=0;i<splitString9.length-2;i++) {
						String actualDate9=splitString9[i]; 
						join9= splitString9[i+1]+" "+ splitString9[i]+" " + splitString9[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join9);
					}
					Assert.assertEquals(lastimageDate9, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate9+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date last Seen Assert Pass :"+lastimageDate9+"="+imageDate21);



					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate9);
			driver.switchTo().window(parent9);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -10 Ad</font>  ");
			System.out.println(" ");
			System.out.println("10 Ads image");

			helper.Scrollintoview(date10);
			helper.highLightElement(driver, date10);
			String imageDate10=date10.getText();
			System.out.println("First Image Date is :"+imageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate10); 

			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10);

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);

			String linkText10 = ShowAnalytics10.getAttribute("href");
			String idString10 = null;
			String[] splitStringid10 = linkText10.split("/");
			for(int i=0;i<splitStringid10.length;i++) {
				String actualDate10=splitStringid10[splitStringid10.length-1]; 
				System.out.println("actualDate : " + actualDate10);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate10);
				break;
			}
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent10=driver.getWindowHandle();
			Set<String>s10=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I10= s10.iterator();
			while(I10.hasNext())
			{
				String child_window=I10.next();
				if(!parent10.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join10=null;
					String[] splitString10 = imageDate11.split(" ");
					for(int i=0;i<splitString10.length-2;i++) {
						String actualDate10=splitString10[i]; 
						join10= splitString10[i+1]+" "+ splitString10[i]+" " + splitString10[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join10);
					}
					Assert.assertEquals(lastimageDate10, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate10+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date last Seen Assert Pass :"+lastimageDate10+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate10);
			driver.switchTo().window(parent10);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -11 Ad </font>  ");
			System.out.println(" ");
			System.out.println("11 Ads image");

			helper.Scrollintoview(date11);
			helper.highLightElement(driver, date11);
			String imageDate11=date11.getText();
			System.out.println("First Image Date is :"+imageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate11); 

			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11);

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);

			String linkText11 = ShowAnalytics11.getAttribute("href");
			String idString11 = null;
			String[] splitStringid11 = linkText11.split("/");
			for(int i=0;i<splitStringid11.length;i++) {
				String actualDate11=splitStringid11[splitStringid11.length-1]; 
				System.out.println("actualDate : " + actualDate11);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate11);
				break;
			}
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent11=driver.getWindowHandle();
			Set<String>s11=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I110= s11.iterator();
			while(I110.hasNext())
			{
				String child_window=I110.next();
				if(!parent11.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate101 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate101);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join11=null;
					String[] splitString11 = imageDate101.split(" ");
					for(int i=0;i<splitString11.length-2;i++) {
						String actualDate11=splitString11[i]; 
						join11= splitString11[i+1]+" "+ splitString11[i]+" " + splitString11[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join11);
					}
					Assert.assertEquals(lastimageDate11, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate11+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date last Seen Assert Pass :"+lastimageDate11+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate11);
			driver.switchTo().window(parent11);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -12 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("12 Ads image");

			helper.Scrollintoview(date12);
			helper.highLightElement(driver, date12);
			String imageDate12=date12.getText();
			System.out.println("First Image Date is :"+imageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate12); 

			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12);

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);

			String linkText12 = ShowAnalytics12.getAttribute("href");
			String idString12 = null;
			String[] splitStringid12 = linkText12.split("/");
			for(int i=0;i<splitStringid12.length;i++) {
				String actualDate12=splitStringid12[splitStringid12.length-1]; 
				System.out.println("actualDate : " + actualDate12);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate12);
				break;
			}

			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent12=driver.getWindowHandle();
			Set<String>s12=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I112= s12.iterator();
			while(I112.hasNext())
			{
				String child_window=I112.next();
				if(!parent12.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate112 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate112);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join12=null;
					String[] splitString12 = imageDate112.split(" ");
					for(int i=0;i<splitString12.length-2;i++) {
						String actualDate12=splitString12[i]; 
						join12= splitString12[i+1]+" "+ splitString12[i]+" " + splitString12[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join12);
					}
					Assert.assertEquals(lastimageDate12, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate12+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date last Seen Assert Pass :"+lastimageDate12+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate12);
			driver.switchTo().window(parent12);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("13 Ads image");

			helper.Scrollintoview(date13);
			helper.highLightElement(driver, date13);
			String imageDate13=date13.getText();
			System.out.println("First Image Date is :"+imageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate13); 

			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13);

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);

			String linkText13 = ShowAnalytics13.getAttribute("href");
			String idString13 = null;
			String[] splitStringid13 = linkText13.split("/");
			for(int i=0;i<splitStringid13.length;i++) {
				String actualDate13=splitStringid13[splitStringid13.length-1]; 
				System.out.println("actualDate : " + actualDate13);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate13);
				break;
			}

			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent13=driver.getWindowHandle();
			Set<String>s13=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I13= s13.iterator();
			while(I13.hasNext())
			{
				String child_window=I13.next();
				if(!parent13.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate113 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate113);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join13=null;
					String[] splitString13 = imageDate113.split(" ");
					for(int i=0;i<splitString13.length-2;i++) {
						String actualDate13=splitString13[i]; 
						join13= splitString13[i+1]+" "+ splitString13[i]+" " + splitString13[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join13);
					}
					Assert.assertEquals(lastimageDate13, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate13+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date last Seen Assert Pass :"+lastimageDate13+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate13);
			driver.switchTo().window(parent13);
		} catch (Exception e) {

			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("14 Ads image");

			helper.Scrollintoview(date14);
			helper.highLightElement(driver, date14);
			String imageDate14=date14.getText();
			System.out.println("First Image Date is :"+imageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate14); 

			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14);

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);

			String linkText14 = ShowAnalytics14.getAttribute("href");
			String idString14 = null;
			String[] splitStringid14 = linkText14.split("/");
			for(int i=0;i<splitStringid14.length;i++) {
				String actualDate14=splitStringid14[splitStringid14.length-1]; 
				System.out.println("actualDate : " + actualDate14);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate14);
				break;
			}

			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent14=driver.getWindowHandle();
			Set<String>s14=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I14= s14.iterator();
			while(I14.hasNext())
			{
				String child_window=I14.next();
				if(!parent14.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate114 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate114);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join14=null;
					String[] splitString14 = imageDate114.split(" ");
					for(int i=0;i<splitString14.length-2;i++) {
						String actualDate14=splitString14[i]; 
						join14= splitString14[i+1]+" "+ splitString14[i]+" " + splitString14[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join14);
					}
					Assert.assertEquals(lastimageDate14, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate14+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date last Seen Assert Pass :"+lastimageDate14+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate14);
			driver.switchTo().window(parent14);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("Second Ads image");

			helper.Scrollintoview(date15);
			helper.highLightElement(driver, date15);
			String imageDate15=date15.getText();
			System.out.println("First Image Date is :"+imageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate15); 

			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15);

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);

			String linkText15 = ShowAnalytics15.getAttribute("href");
			String idString15 = null;
			String[] splitStringid15 = linkText15.split("/");
			for(int i=0;i<splitStringid15.length;i++) {
				String actualDate15=splitStringid15[splitStringid15.length-1]; 
				System.out.println("actualDate : " + actualDate15);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate15);
				break;
			}
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent15=driver.getWindowHandle();
			Set<String>s15=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I15= s15.iterator();
			while(I15.hasNext())
			{
				String child_window=I15.next();
				if(!parent15.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate115 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate115);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join15=null;
					String[] splitString15 = imageDate115.split(" ");
					for(int i=0;i<splitString15.length-2;i++) {
						String actualDate15=splitString15[i]; 
						join15= splitString15[i+1]+" "+ splitString15[i]+" " + splitString15[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join15);
					}
					Assert.assertEquals(lastimageDate15, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate15+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date last Seen Assert Pass :"+lastimageDate15+"="+imageDate21);


					driver.close();
				}
			}

			System.out.println("Current Image Date: "+imageDate15);
			driver.switchTo().window(parent15);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsScrollintoview(Clear_Filters);
		Clear_Filters.click();
		//	Reporter.log("<B><font color = 'orange'> Step8 -</font> Clicked On Clear Filters Icon");
		helper.waitForPageToLoad();

	}


	/****  Gdn SortBy Running Longest ****/	
	public void Gdn_SortBy_RunningLongest() throws InterruptedException
	{
		System.out.println();
		System.out.println("ShortBy Running Longest: ");
		Reporter.log("    ");
		Reporter.log("<B><font color = 'green'>  - ShortBy Running Longest Step will Start from here </font>");
		helper.waitFor(sortBy);
		helper.Scrollintoview(sortBy);
		helper.highLightElement(driver, sortBy);
		sortBy.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On sortBy Icon");

		helper.waitFor(sortby_Running_longest);
		helper.highLightElement(driver, sortby_Running_longest);
		helper.Scrollintoview(sortby_Running_longest);
		sortby_Running_longest.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On sortBy Running longest Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		helper.Scrollintoview(totaladscount_div);
		String totaladscount=totaladscount_div.getText();
		System.out.println("Running Longest Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Running Longest Total Ad Count is :"+ totaladscount);
		System.out.println();

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -1 Ad  -</font> ");
			System.out.println("");
			System.out.println("1 Ads image");

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			helper.Scrollintoview(date1);
			String imageDate1=date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate1);

			String parent1=driver.getWindowHandle();
			Set<String>s1=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1= s1.iterator();
			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent1.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate1);
			driver.switchTo().window(parent1);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");


		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -2 Ad  -</font> ");
			System.out.println("");
			System.out.println("2 Ads image");

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);
			String linkText1 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics2.click();

			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			String imageDate2=date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate2);
			System.out.println("Current Image Date: "+imageDate2);
			String parent2=driver.getWindowHandle();
			Set<String>s2=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I2= s2.iterator();
			while(I2.hasNext())
			{
				String child_window=I2.next();
				if(!parent2.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}

			driver.switchTo().window(parent2);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -3 Ad  -</font> ");
			System.out.println("");
			System.out.println("3 Ads image");

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);
			String linkText1 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			String imageDate3=date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate3);
			System.out.println("Current Image Date: "+imageDate3);
			String parent3=driver.getWindowHandle();
			Set<String>s3=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I3= s3.iterator();
			while(I3.hasNext())
			{
				String child_window=I3.next();
				if(!parent3.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -4 Ad  -</font> ");
			System.out.println("");
			System.out.println("4 Ads image");

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);
			String linkText1 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			String imageDate4=date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate4);
			System.out.println("Current Image Date: "+imageDate4);
			String parent4=driver.getWindowHandle();
			Set<String>s4=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I4= s4.iterator();
			while(I4.hasNext())
			{
				String child_window=I4.next();
				if(!parent4.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}

			driver.switchTo().window(parent4);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -5 Ad  -</font> ");
			System.out.println("");
			System.out.println("5 Ads image");

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);
			String linkText1 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			String imageDate5=date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate5);
			System.out.println("Current Image Date: "+imageDate5);
			String parent5=driver.getWindowHandle();
			Set<String>s5=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I5= s5.iterator();
			while(I5.hasNext())
			{
				String child_window=I5.next();
				if(!parent5.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}

			driver.switchTo().window(parent5);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -6 Ad  -</font> ");
			System.out.println("");
			System.out.println("6 Ads image");

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);
			String linkText1 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			String imageDate6=date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate6);
			System.out.println("Current Image Date: "+imageDate6);
			String parent6=driver.getWindowHandle();
			Set<String>s6=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I6= s6.iterator();
			while(I6.hasNext())
			{
				String child_window=I6.next();
				if(!parent6.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}

			driver.switchTo().window(parent6);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -7 Ad  -</font> ");
			System.out.println("");
			System.out.println("7 Ads image");

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);
			String linkText1 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			String imageDate7=date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate7);
			System.out.println("Current Image Date: "+imageDate7);
			String parent7=driver.getWindowHandle();
			Set<String>s7=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I7= s7.iterator();
			while(I7.hasNext())
			{
				String child_window=I7.next();
				if(!parent7.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}

			driver.switchTo().window(parent7);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -8 Ad  -</font> ");
			System.out.println("");
			System.out.println("8 Ads image");

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);
			String linkText1 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			String imageDate8=date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate8);
			System.out.println("Current Image Date: "+imageDate8);
			String parent8=driver.getWindowHandle();
			Set<String>s8=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I8= s8.iterator();
			while(I8.hasNext())
			{
				String child_window=I8.next();
				if(!parent8.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}

			driver.switchTo().window(parent8);
		} catch (Exception e) {
			System.out.println("Image is not able:   Opp!Looks like we don't have data for this search criteria yet.\r\n"
					+ "But don't worry, Spidey is on the crawl now and it will scrape ads for this search criteria for you ASAP.");

			Reporter.log("<B><font color = 'orange'> Step5 -</font> Image is not able:   Opp! Looks like we don't have data for this search criteria yet."
					+ "   But don't worry, Spidey is on the crawl now and it will scrape ads for this search criteria for you ASAP.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -9 Ad  -</font> ");
			System.out.println("");
			System.out.println("9 Ads image");

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);
			String linkText1 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			String imageDate9=date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate9);
			System.out.println("Current Image Date: "+imageDate9);
			String parent9=driver.getWindowHandle();
			Set<String>s9=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I9= s9.iterator();
			while(I9.hasNext())
			{
				String child_window=I9.next();
				if(!parent9.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}

			driver.switchTo().window(parent9);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -10 Ad  -</font> ");
			System.out.println("");
			System.out.println("10 Ads image");

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);
			String linkText1 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			String imageDate10=date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate10);
			System.out.println("Current Image Date: "+imageDate10);
			String parent10=driver.getWindowHandle();
			Set<String>s10=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I10= s10.iterator();
			while(I10.hasNext())
			{
				String child_window=I10.next();
				if(!parent10.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}

			driver.switchTo().window(parent10);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -11 Ad  -</font> ");
			System.out.println("");
			System.out.println("11 Ads image");

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);
			String linkText1 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			String imageDate11=date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate11);
			System.out.println("Current Image Date: "+imageDate11);
			String parent11=driver.getWindowHandle();
			Set<String>s11=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I11= s11.iterator();
			while(I11.hasNext())
			{
				String child_window=I11.next();
				if(!parent11.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}

			driver.switchTo().window(parent11);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -12 Ad  -</font> ");
			System.out.println("");
			System.out.println("12 Ads image");

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);
			String linkText1 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			String imageDate12=date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate12);
			System.out.println("Current Image Date: "+imageDate12);
			String parent12=driver.getWindowHandle();
			Set<String>s12=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I12= s12.iterator();
			while(I12.hasNext())
			{
				String child_window=I12.next();
				if(!parent12.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}

			driver.switchTo().window(parent12);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -13 Ad  -</font> ");
			System.out.println("");
			System.out.println("13 Ads image");

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);
			String linkText1 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			String imageDate13=date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate13);
			System.out.println("Current Image Date: "+imageDate13);
			String parent13=driver.getWindowHandle();
			Set<String>s13=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I13= s13.iterator();
			while(I13.hasNext())
			{
				String child_window=I13.next();
				if(!parent13.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}

			driver.switchTo().window(parent13);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -14 Ad  -</font> ");
			System.out.println("");
			System.out.println("14 Ads image");

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);
			String linkText1 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			String imageDate14=date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate14);
			System.out.println("Current Image Date: "+imageDate14);
			String parent14=driver.getWindowHandle();
			Set<String>s14=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I14= s14.iterator();
			while(I14.hasNext())
			{
				String child_window=I14.next();
				if(!parent14.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}

			driver.switchTo().window(parent14);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}		

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -15 Ad  -</font> ");
			System.out.println("");
			System.out.println("15 Ads image");

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);
			String linkText1 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();
			String imageDate15=date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image  Date is :"+imageDate15);
			System.out.println("Current Image Date: "+imageDate15);
			String parent15=driver.getWindowHandle();
			Set<String>s15=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I15= s15.iterator();
			while(I15.hasNext())
			{
				String child_window=I15.next();
				if(!parent15.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					String imageDate0 = lastSeen.getText();
					System.out.println("Analytics LastSeen Date: "+imageDate0);

					String imageDate = LongestRunningDate.getText();
					System.out.println("Analytics LongestRunning Date: "+imageDate);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Last Seen Date of is :"+imageDate0);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Running Longest is :"+imageDate);
					driver.close();
				}
			}

			driver.switchTo().window(parent15);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}		

		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsScrollintoview(Clear_Filters);
		Clear_Filters.click();
		//	Reporter.log("<B><font color = 'orange'> Step10 -</font> Clicked On Clear Filters Icon");
		helper.waitForPageToLoad();

	}





	/****  SortBy Domain Registration Date ****/
	public void SortBy_Domain_Registration_Date() throws InterruptedException
	{
		System.out.println();
		System.out.println("ShortBy Domain Registration Date: ");
		Reporter.log("    ");
		Reporter.log("<B><font color = 'green'>  - ShortBy Domain Registration Date Step will Start from here </font>");
		helper.waitFor(sortBy);
		helper.highLightElement(driver, sortBy);
		sortBy.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On sortBy Icon");

		helper.waitFor(domain_Registration_Date);
		helper.highLightElement(driver, domain_Registration_Date);
		domain_Registration_Date.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On sortBy Domain Registration Date Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_div.getText();
		System.out.println("Domain Registration Date Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step4 -</font> domain Registration Date Total Ad Count is :"+ totaladscount);

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -1 Ad  -</font> ");
			System.out.println("");
			System.out.println("1 Ads image");

			helper.waitForPageToLoad();
			helper.Scrollintoview(date1);
			helper.highLightElement(driver, date1);
			String imageDate1=date1.getText();
			System.out.println("Current Image Date: "+imageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent1=driver.getWindowHandle();
			Set<String>s1=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1= s1.iterator();
			while(I1.hasNext())
			{
				String child_window1=I1.next();
				if(!parent1.equals(child_window1))
				{
					driver.switchTo().window(child_window1);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window1).getTitle());
					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();
				}
			}


			driver.switchTo().window(parent1);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -2 Ad  -</font> ");
			System.out.println("");
			System.out.println("2 Ads image");

			helper.waitForPageToLoad();
			String imageDate2=date2.getText();
			System.out.println("Current Image Date: "+imageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);
			String linkText1 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent2=driver.getWindowHandle();
			Set<String>s2=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I2= s2.iterator();
			while(I2.hasNext())
			{
				String child_window2=I2.next();
				if(!parent2.equals(child_window2))
				{
					driver.switchTo().window(child_window2);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window2).getTitle());
					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();
				}
			}


			driver.switchTo().window(parent2);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -3 Ad  -</font> ");
			System.out.println("");
			System.out.println("3 Ads image");

			helper.waitForPageToLoad();
			String imageDate3=date3.getText();
			System.out.println("Current Image Date: "+imageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);
			String linkText1 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent3=driver.getWindowHandle();
			Set<String>s3=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I3= s3.iterator();
			while(I3.hasNext())
			{
				String child_window3=I3.next();
				if(!parent3.equals(child_window3))
				{
					driver.switchTo().window(child_window3);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window3).getTitle());
					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();
				}
			}


			driver.switchTo().window(parent3);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -4 Ad  -</font> ");
			System.out.println("");
			System.out.println("4 Ads image");

			helper.waitForPageToLoad();
			String imageDate4=date4.getText();
			System.out.println("Current Image Date: "+imageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);
			String linkText1 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent4=driver.getWindowHandle();
			Set<String>s4=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I4= s4.iterator();
			while(I4.hasNext())
			{
				String child_window4=I4.next();
				if(!parent4.equals(child_window4))
				{
					driver.switchTo().window(child_window4);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window4).getTitle());
					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();
				}
			}


			driver.switchTo().window(parent4);
		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -5 Ad  -</font> ");
			System.out.println("");
			System.out.println("5 Ads image");

			helper.waitForPageToLoad();
			String imageDate5=date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			System.out.println("Current Image Date: "+imageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);
			String linkText1 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent5=driver.getWindowHandle();
			Set<String>s5=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I5= s5.iterator();
			while(I5.hasNext())
			{
				String child_window5=I5.next();
				if(!parent5.equals(child_window5))
				{
					driver.switchTo().window(child_window5);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window5).getTitle());


					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);

					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();
				}
			}


			driver.switchTo().window(parent5);
		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}			


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -6 Ad  -</font> ");
			System.out.println("");
			System.out.println("6 Ads image");

			helper.waitForPageToLoad();
			String imageDate6=date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			System.out.println("Current Image Date: "+imageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);
			String linkText1 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent6=driver.getWindowHandle();
			Set<String>s6=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I6= s6.iterator();
			while(I6.hasNext())
			{
				String child_window6=I6.next();
				if(!parent6.equals(child_window6))
				{
					driver.switchTo().window(child_window6);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window6).getTitle());
					Thread.sleep(500);

					Thread.sleep(500);

					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);

					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();
				}
			}


			driver.switchTo().window(parent6);
		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}						

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -7 Ad  -</font> ");
			System.out.println("");
			System.out.println("7 Ads image");

			helper.waitForPageToLoad();
			String imageDate7=date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			System.out.println("Current Image Date: "+imageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);
			String linkText1 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent7=driver.getWindowHandle();
			Set<String>s7=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I7= s7.iterator();
			while(I7.hasNext())
			{
				String child_window7=I7.next();
				if(!parent7.equals(child_window7))
				{
					driver.switchTo().window(child_window7);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window7).getTitle());


					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);

					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();
				}
			}


			driver.switchTo().window(parent7);
		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}						


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -8 Ad  -</font> ");
			System.out.println("");
			System.out.println("8 Ads image");

			helper.waitForPageToLoad();
			String imageDate8=date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			System.out.println("Current Image Date: "+imageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);
			String linkText1 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent8=driver.getWindowHandle();
			Set<String>s8=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I8= s8.iterator();
			while(I8.hasNext())
			{
				String child_window8=I8.next();
				if(!parent8.equals(child_window8))
				{
					driver.switchTo().window(child_window8);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window8).getTitle());


					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);

					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();
				}
			}


			driver.switchTo().window(parent8);
		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}						

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -9 Ad  -</font> ");
			System.out.println("");
			System.out.println("9 Ads image");

			helper.waitForPageToLoad();
			String imageDate9=date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			System.out.println("Current Image Date: "+imageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);
			String linkText1 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent9=driver.getWindowHandle();
			Set<String>s9=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I9= s9.iterator();
			while(I9.hasNext())
			{
				String child_window9=I9.next();
				if(!parent9.equals(child_window9))
				{
					driver.switchTo().window(child_window9);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window9).getTitle());


					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);

					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();

				}
			}


			driver.switchTo().window(parent9);
		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}						

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -10 Ad  -</font> ");
			System.out.println("");
			System.out.println("10 Ads image");

			helper.waitForPageToLoad();
			String imageDate10=date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			System.out.println("Current Image Date: "+imageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);
			String linkText1 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent10=driver.getWindowHandle();
			Set<String>s10=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I10= s10.iterator();
			while(I10.hasNext())
			{
				String child_window10=I10.next();
				if(!parent10.equals(child_window10))
				{
					driver.switchTo().window(child_window10);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window10).getTitle());


					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);

					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();
				}
			}


			driver.switchTo().window(parent10);
		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}			

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -11 Ad  -</font> ");
			System.out.println("");
			System.out.println("11 Ads image");

			helper.waitForPageToLoad();
			String imageDate11=date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			System.out.println("Current Image Date: "+imageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);
			String linkText1 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent11=driver.getWindowHandle();
			Set<String>s11=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I11= s11.iterator();
			while(I11.hasNext())
			{
				String child_window11=I11.next();
				if(!parent11.equals(child_window11))
				{
					driver.switchTo().window(child_window11);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window11).getTitle());


					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);

					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();
				}
			}


			driver.switchTo().window(parent11);
		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}		

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -12 Ad  -</font> ");
			System.out.println("");
			System.out.println("12 Ads image");

			helper.waitForPageToLoad();
			String imageDate12=date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			System.out.println("Current Image Date: "+imageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);
			String linkText1 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent12=driver.getWindowHandle();
			Set<String>s12=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I12= s12.iterator();
			while(I12.hasNext())
			{
				String child_window12=I12.next();
				if(!parent12.equals(child_window12))
				{
					driver.switchTo().window(child_window12);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window12).getTitle());
					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();
				}
			}


			driver.switchTo().window(parent12);
		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}				

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -13 Ad  -</font> ");
			System.out.println("");
			System.out.println("13 Ads image");

			helper.waitForPageToLoad();
			String imageDate13=date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			System.out.println("Current Image Date: "+imageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);
			String linkText1 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent13=driver.getWindowHandle();
			Set<String>s13=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I13= s13.iterator();
			while(I13.hasNext())
			{
				String child_window13=I13.next();
				if(!parent13.equals(child_window13))
				{
					driver.switchTo().window(child_window13);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window13).getTitle());

					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();
				}
			}


			driver.switchTo().window(parent13);
		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}			

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -14 Ad  -</font> ");
			System.out.println("");
			System.out.println("14 Ads image");

			helper.waitForPageToLoad();
			String imageDate14=date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			System.out.println("Current Image Date: "+imageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);
			String linkText1 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent14=driver.getWindowHandle();
			Set<String>s14=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I14= s14.iterator();
			while(I14.hasNext())
			{
				String child_window14=I14.next();
				if(!parent14.equals(child_window14))
				{
					driver.switchTo().window(child_window14);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window14).getTitle());


					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);

					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();
				}
			}




			driver.switchTo().window(parent14);
		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}			

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color = 'red'> -15 Ad  -</font> ");
			System.out.println("");
			System.out.println("15 Ads image");

			helper.waitForPageToLoad();
			String imageDate15=date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Capture image date");
			System.out.println("Current Image Date: "+imageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);
			String linkText1 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");


			String parent15=driver.getWindowHandle();
			Set<String>s15=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I15= s15.iterator();
			while(I15.hasNext())
			{
				String child_window15=I15.next();
				if(!parent15.equals(child_window15))
				{
					driver.switchTo().window(child_window15);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window15).getTitle());


					String imageDate21 = domain_Registration.getText();
					System.out.println("Analytics Domain Registration Date: "+imageDate21);

					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Domain Registration Date is :"+imageDate21);
					driver.close();
				}
			}	

			driver.switchTo().window(parent15);
		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}			
		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsScrollintoview(Clear_Filters);
		Clear_Filters.click();
		//	Reporter.log("<B><font color = 'orange'> Step9 -</font> Clicked On Clear Filters Icon");
		helper.waitForPageToLoad();
		System.out.println(" ");
		Reporter.log(" ");



	}



	public void GdnPageGdn_Ad_Seen_Between()
	{
		Reporter.log("<B><font color = 'purple'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();


		//		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'purple'> Step2 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(gdn);
		helper.highLightElement(driver, gdn);
		gdn.click();

		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'purple'> Step3 -</font> I am on the page :" + Page_titel);

		Assert.assertTrue(gdn.isDisplayed(), "PowerAdSpy | GDN Dashboard");

		Reporter.log("<B><font color = 'purple'> Step4 -</font> Clicked On GDN  Icon");
		//		helper.waitForPageToLoad();
	}


	public void AdSeenBetween_All() throws InterruptedException
	{
		System.out.println();
		System.out.println("ShortBy Newest:");
		Reporter.log("    ");
		Reporter.log("<B><font color = 'green'>  - ShortBy Newest Step will Start from here </font>  ");
		helper.waitFor(sortBy);
		helper.highLightElement(driver, sortBy);
		sortBy.click();
		Reporter.log("");
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On sortBy Icon");

		helper.waitFor(SortBy_Newest);
		helper.highLightElement(driver, SortBy_Newest);
		SortBy_Newest.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On SortBy Newest Icon");


		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		System.out.println("-ShortBy Newest -Ad Seen Between -All:");
		Reporter.log("<B><font color = 'green'>  -ShortBy Newest -Ad Seen Between All Step will Start from here  </font> ");
		helper.waitFor(adSeenbetweenfilter);
		helper.highLightElement(driver, adSeenbetweenfilter);
		adSeenbetweenfilter.click();
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Ad Seen between filter Icon");

		helper.waitFor(adSeenbetween_all);
		helper.highLightElement(driver, adSeenbetween_all);
		helper.Scrollintoview(adSeenbetween_all);
		adSeenbetween_all.click();
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On Ad Seen between All Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step7 -</font>  Total Ad Count is :" +totaladscount);

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -1 Ad- -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			helper.Scrollintoview(date1);
			helper.highLightElement(driver, date1);
			String imageDate=date1.getText();
			System.out.println("First Image Date is :"+imageDate);
			System.out.println("Current Image Date: "+imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate); 

			helper.Scrollintoview(lastdate1);
			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);

			String linkText1 = ShowAnalytics1.getAttribute("href");
			String idString1 = null;
			String[] splitStringid1 = linkText1.split("/");
			for(int i=0;i<splitStringid1.length;i++) {
				String actualDate1=splitStringid1[splitStringid1.length-1]; 
				System.out.println("actualDate : " + actualDate1);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate1);
				break;
			}

			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1= s.iterator();
			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					Thread.sleep(2000);
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					helper.waitFor(firstSeen);
					String imageDate1 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(lastSeen);
					String imageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate2);
				
					helper.Scrollintoview(postDate);
					helper.waitFor(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join=null;
					String[] splitString = imageDate1.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						join= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join);
					}
					Assert.assertEquals(imageDate, imageDate1);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate+"="+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching First Seen  Date Assert Pass :"+imageDate+"="+imageDate1);


					String join201=null;
					String[] splitString201 = imageDate2.split(" ");
					for(int i=0;i<splitString201.length-2;i++) {
						String actualDate201=splitString201[i]; 
						join201= splitString201[i+1]+" "+ splitString201[i]+" " + splitString201[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join201);
					}
					Assert.assertEquals(lastimageDate1, imageDate2);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate1+"="+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate1+"="+imageDate2);

					driver.close();
				}
			}

			driver.switchTo().window(parent);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -2 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("2 Ads image");

			helper.Scrollintoview(date2);
			helper.highLightElement(driver, date2);
			String imageDate2=date2.getText();
			System.out.println("First Image Date is :"+imageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate2); 

			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2);

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);

			String linkText2 = ShowAnalytics2.getAttribute("href");
			String idString2 = null;
			String[] splitStringid2 = linkText2.split("/");
			for(int i=0;i<splitStringid2.length;i++) {
				String actualDate2=splitStringid2[splitStringid2.length-1]; 
				System.out.println("actualDate : " + actualDate2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate2);
				break;
			}
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent1=driver.getWindowHandle();
			Set<String>s1=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I11= s1.iterator();
			while(I11.hasNext())
			{
				String child_window=I11.next();
				if(!parent1.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					Thread.sleep(2000);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join2=null;
					String[] splitString2 = imageDate11.split(" ");
					for(int i=0;i<splitString2.length-2;i++) {
						String actualDate2=splitString2[i]; 
						join2= splitString2[i+1]+" "+ splitString2[i]+" " + splitString2[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2);
					}
					Assert.assertEquals(imageDate2, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);

					String join202=null;
					String[] splitString202 = imageDate21.split(" ");
					for(int i=0;i<splitString202.length-2;i++) {
						String actualDate202=splitString202[i]; 
						join202= splitString202[i+1]+" "+ splitString202[i]+" " + splitString202[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join202);
					}
					Assert.assertEquals(lastimageDate2, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate2+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate2+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate2);
			driver.switchTo().window(parent1);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -3 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("3 Ads image");

			helper.Scrollintoview(date3);
			helper.highLightElement(driver, date3);
			String imageDate3=date3.getText();
			System.out.println("First Image Date is :"+imageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate3); 

			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3);

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);

			String linkText3 = ShowAnalytics3.getAttribute("href");
			String idString3 = null;
			String[] splitStringid3 = linkText3.split("/");
			for(int i=0;i<splitStringid3.length;i++) {
				String actualDate3=splitStringid3[splitStringid3.length-1]; 
				System.out.println("actualDate : " + actualDate3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate3);
				break;
			}
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent121=driver.getWindowHandle();
			Set<String>s121=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I111= s121.iterator();
			while(I111.hasNext())
			{
				String child_window=I111.next();
				if(!parent121.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join3=null;
					String[] splitString3 = imageDate111.split(" ");
					for(int i=0;i<splitString3.length-2;i++) {
						String actualDate3=splitString3[i]; 
						join3= splitString3[i+1]+" "+ splitString3[i]+" " + splitString3[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join3);
					}

					Assert.assertEquals(imageDate3,imageDate111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);

					String join203=null;
					String[] splitString203 = imageDate21.split(" ");
					for(int i=0;i<splitString203.length-2;i++) {
						String actualDate203=splitString203[i]; 
						join203= splitString203[i+1]+" "+ splitString203[i]+" " + splitString203[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join203);
					}
					Assert.assertEquals(lastimageDate3, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate3+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate3+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate3);
			driver.switchTo().window(parent121);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}	


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -4 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("4 Ads image");
			helper.Scrollintoview(date4);
			helper.highLightElement(driver, date4);
			String imageDate4=date4.getText();
			System.out.println("First Image Date is :"+imageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate4); 

			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4);

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);

			String linkText4 = ShowAnalytics4.getAttribute("href");
			String idString4 = null;
			String[] splitStringid4 = linkText4.split("/");
			for(int i=0;i<splitStringid4.length;i++) {
				String actualDate4=splitStringid4[splitStringid4.length-1]; 
				System.out.println("actualDate : " + actualDate4);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate4);
				break;
			}

			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent111=driver.getWindowHandle();
			Set<String>s111=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1111= s111.iterator();
			while(I1111.hasNext())
			{
				String child_window=I1111.next();
				if(!parent111.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate1111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join4=null;
					String[] splitString4 = imageDate1111.split(" ");
					for(int i=0;i<splitString4.length-2;i++) {
						String actualDate4=splitString4[i]; 
						join4= splitString4[i+1]+" "+ splitString4[i]+" " + splitString4[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join4);
					}
					Assert.assertEquals(imageDate4, imageDate1111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);

					String join204=null;
					String[] splitString204 = imageDate21.split(" ");
					for(int i=0;i<splitString204.length-2;i++) {
						String actualDate204=splitString204[i]; 
						join204= splitString204[i+1]+" "+ splitString204[i]+" " + splitString204[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join204);
					}
					Assert.assertEquals(lastimageDate4, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate4+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate4+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate4);
			driver.switchTo().window(parent111);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -5 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("5 Ads image");
			helper.Scrollintoview(date5);
			helper.highLightElement(driver, date5);
			String imageDate5=date5.getText();
			System.out.println("First Image Date is :"+imageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate5); 

			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5);

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);

			String linkText5 = ShowAnalytics5.getAttribute("href");
			String idString5 = null;
			String[] splitStringid5 = linkText5.split("/");
			for(int i=0;i<splitStringid5.length;i++) {
				String actualDate5=splitStringid5[splitStringid5.length-1]; 
				System.out.println("actualDate : " + actualDate5);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate5);
				break;
			}

			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent5=driver.getWindowHandle();
			Set<String>s5=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I5= s5.iterator();
			while(I5.hasNext())
			{
				String child_window=I5.next();
				if(!parent5.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate6 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate6);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join5=null;
					String[] splitString5 = imageDate6.split(" ");
					for(int i=0;i<splitString5.length-2;i++) {
						String actualDate5=splitString5[i]; 
						join5= splitString5[i+1]+" "+ splitString5[i]+" " + splitString5[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join5);
					}
					Assert.assertEquals(imageDate5, imageDate6);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);

					String join205=null;
					String[] splitString205 = imageDate21.split(" ");
					for(int i=0;i<splitString205.length-2;i++) {
						String actualDate205=splitString205[i]; 
						join205= splitString205[i+1]+" "+ splitString205[i]+" " + splitString205[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join205);
					}
					Assert.assertEquals(lastimageDate5, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate5+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate5+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate5);
			driver.switchTo().window(parent5);
		} catch (Exception e) {
			// TODO: handle exception	
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("6 Ads image");
			helper.Scrollintoview(date6);
			helper.highLightElement(driver, date6);
			String imageDate6=date6.getText();
			System.out.println("First Image Date is :"+imageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate6); 

			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6);

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);

			String linkText6 = ShowAnalytics6.getAttribute("href");
			String idString6 = null;
			String[] splitStringid6 = linkText6.split("/");
			for(int i=0;i<splitStringid6.length;i++) {
				String actualDate6=splitStringid6[splitStringid6.length-1]; 
				System.out.println("actualDate : " + actualDate6);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate6);
				break;
			}

			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent6=driver.getWindowHandle();
			Set<String>s6=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I6= s6.iterator();
			while(I6.hasNext())
			{
				String child_window=I6.next();
				if(!parent6.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join6=null;
					String[] splitString6 = imageDate11.split(" ");
					for(int i=0;i<splitString6.length-2;i++) {
						String actualDate6=splitString6[i]; 
						join6= splitString6[i+1]+" "+ splitString6[i]+" " + splitString6[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join6);
					}
					Assert.assertEquals(imageDate6, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);

					String join206=null;
					String[] splitString206 = imageDate21.split(" ");
					for(int i=0;i<splitString206.length-2;i++) {
						String actualDate206=splitString206[i]; 
						join206= splitString206[i+1]+" "+ splitString206[i]+" " + splitString206[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join206);
					}
					Assert.assertEquals(lastimageDate6, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate6+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate6+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate6);
			driver.switchTo().window(parent6);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("7 Ads image");
			helper.Scrollintoview(date7);
			helper.highLightElement(driver, date7);
			String imageDate7=date7.getText();
			System.out.println("First Image Date is :"+imageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate7); 

			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7);

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);

			String linkText7 = ShowAnalytics7.getAttribute("href");
			String idString7 = null;
			String[] splitStringid7 = linkText7.split("/");
			for(int i=0;i<splitStringid7.length;i++) {
				String actualDate7=splitStringid7[splitStringid7.length-1]; 
				System.out.println("actualDate : " + actualDate7);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate7);
				break;
			}
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent17=driver.getWindowHandle();
			Set<String>s17=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I17= s17.iterator();
			while(I17.hasNext())
			{
				String child_window=I17.next();
				if(!parent17.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join7=null;
					String[] splitString7 = imageDate11.split(" ");
					for(int i=0;i<splitString7.length-2;i++) {
						String actualDate7=splitString7[i]; 
						join7= splitString7[i+1]+" "+ splitString7[i]+" " + splitString7[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join7);
					}
					Assert.assertEquals(imageDate7, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);

					String join207=null;
					String[] splitString207 = imageDate21.split(" ");
					for(int i=0;i<splitString207.length-2;i++) {
						String actualDate207=splitString207[i]; 
						join207= splitString207[i+1]+" "+ splitString207[i]+" " + splitString207[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join207);
					}
					Assert.assertEquals(lastimageDate7, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate7+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate7+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate7);
			driver.switchTo().window(parent17);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -8 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("8 Ads image");
			helper.Scrollintoview(date8);
			helper.highLightElement(driver, date8);
			String imageDate8=date8.getText();
			System.out.println("First Image Date is :"+imageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate8); 

			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8);

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);

			String linkText8 = ShowAnalytics8.getAttribute("href");
			String idString8 = null;
			String[] splitStringid8 = linkText8.split("/");
			for(int i=0;i<splitStringid8.length;i++) {
				String actualDate8=splitStringid8[splitStringid8.length-1]; 
				System.out.println("actualDate : " + actualDate8);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate8);
				break;
			}

			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent8=driver.getWindowHandle();
			Set<String>s8=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I8= s8.iterator();
			while(I8.hasNext())
			{
				String child_window=I8.next();
				if(!parent8.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join8=null;
					String[] splitString8 = imageDate11.split(" ");
					for(int i=0;i<splitString8.length-2;i++) {
						String actualDate8=splitString8[i]; 
						join8= splitString8[i+1]+" "+ splitString8[i]+" " + splitString8[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join8);
					}
					Assert.assertEquals(imageDate8, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);

					String join208=null;
					String[] splitString208 = imageDate21.split(" ");
					for(int i=0;i<splitString208.length-2;i++) {
						String actualDate208=splitString208[i]; 
						join208= splitString208[i+1]+" "+ splitString208[i]+" " + splitString208[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join208);
					}
					Assert.assertEquals(lastimageDate8, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate8+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate8+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate8);
			driver.switchTo().window(parent8);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad- </font>  ");
			System.out.println(" ");
			System.out.println("9 Ads image");
			helper.Scrollintoview(date9);
			helper.highLightElement(driver, date9);
			String imageDate9=date9.getText();
			System.out.println("First Image Date is :"+imageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate9); 

			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9);

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);

			String linkText9 = ShowAnalytics9.getAttribute("href");
			String idString9 = null;
			String[] splitStringid9 = linkText9.split("/");
			for(int i=0;i<splitStringid9.length;i++) {
				String actualDate9=splitStringid9[splitStringid9.length-1]; 
				System.out.println("actualDate : " + actualDate9);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate9);
				break;
			}
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent9=driver.getWindowHandle();
			Set<String>s9=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I9=s9.iterator();
			while(I9.hasNext())
			{
				String child_window=I9.next();
				if(!parent9.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate19 = firstSeen.getText();

					System.out.println("Analytics Image First Seen Date: "+imageDate19);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join9=null;
					String[] splitString9 = imageDate19.split(" ");
					for(int i=0;i<splitString9.length-2;i++) {
						String actualDate9=splitString9[i]; 
						join9= splitString9[i+1]+" "+ splitString9[i]+" " + splitString9[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join9);
					}
					Assert.assertEquals(imageDate9, imageDate19);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);

					String join209=null;
					String[] splitString209 = imageDate21.split(" ");
					for(int i=0;i<splitString209.length-2;i++) {
						String actualDate209=splitString209[i]; 
						join209= splitString209[i+1]+" "+ splitString209[i]+" " + splitString209[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join209);
					}
					Assert.assertEquals(lastimageDate9, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate9+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate9+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate9);
			driver.switchTo().window(parent9);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -10 Ad</font>  ");
			System.out.println(" ");
			System.out.println("10 Ads image");

			helper.Scrollintoview(date10);
			helper.highLightElement(driver, date10);
			String imageDate10=date10.getText();
			System.out.println("First Image Date is :"+imageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate10); 

			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10);

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);

			String linkText10 = ShowAnalytics10.getAttribute("href");
			String idString10 = null;
			String[] splitStringid10 = linkText10.split("/");
			for(int i=0;i<splitStringid10.length;i++) {
				String actualDate10=splitStringid10[splitStringid10.length-1]; 
				System.out.println("actualDate : " + actualDate10);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate10);
				break;
			}
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent10=driver.getWindowHandle();
			Set<String>s10=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I10= s10.iterator();
			while(I10.hasNext())
			{
				String child_window=I10.next();
				if(!parent10.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join10=null;
					String[] splitString10 = imageDate11.split(" ");
					for(int i=0;i<splitString10.length-2;i++) {
						String actualDate10=splitString10[i]; 
						join10= splitString10[i+1]+" "+ splitString10[i]+" " + splitString10[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join10);
					}
					Assert.assertEquals(imageDate10, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);

					String join2010=null;
					String[] splitString2010 = imageDate21.split(" ");
					for(int i=0;i<splitString2010.length-2;i++) {
						String actualDate2010=splitString2010[i]; 
						join2010= splitString2010[i+1]+" "+ splitString2010[i]+" " + splitString2010[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2010);
					}
					Assert.assertEquals(lastimageDate10, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate10+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate10+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate10);
			driver.switchTo().window(parent10);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -11 Ad </font>  ");
			System.out.println(" ");
			System.out.println("11 Ads image");

			helper.Scrollintoview(date11);
			helper.highLightElement(driver, date11);
			String imageDate11=date11.getText();
			System.out.println("First Image Date is :"+imageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate11); 

			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11);

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);

			String linkText11 = ShowAnalytics11.getAttribute("href");
			String idString11 = null;
			String[] splitStringid11 = linkText11.split("/");
			for(int i=0;i<splitStringid11.length;i++) {
				String actualDate11=splitStringid11[splitStringid11.length-1]; 
				System.out.println("actualDate : " + actualDate11);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate11);
				break;
			}
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent11=driver.getWindowHandle();
			Set<String>s11=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I110= s11.iterator();
			while(I110.hasNext())
			{
				String child_window=I110.next();
				if(!parent11.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate101 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate101);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join11=null;
					String[] splitString11 = imageDate101.split(" ");
					for(int i=0;i<splitString11.length-2;i++) {
						String actualDate11=splitString11[i]; 
						join11= splitString11[i+1]+" "+ splitString11[i]+" " + splitString11[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join11);
					}
					Assert.assertEquals(imageDate11, imageDate101);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);

					String join2011=null;
					String[] splitString2011 = imageDate21.split(" ");
					for(int i=0;i<splitString2011.length-2;i++) {
						String actualDate2011=splitString2011[i]; 
						join2011= splitString2011[i+1]+" "+ splitString2011[i]+" " + splitString2011[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2011);
					}
					Assert.assertEquals(lastimageDate11, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate11+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate11+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate11);
			driver.switchTo().window(parent11);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -12 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("12 Ads image");

			helper.Scrollintoview(date12);
			helper.highLightElement(driver, date12);
			String imageDate12=date12.getText();
			System.out.println("First Image Date is :"+imageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate12); 

			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12);

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);

			String linkText12 = ShowAnalytics12.getAttribute("href");
			String idString12 = null;
			String[] splitStringid12 = linkText12.split("/");
			for(int i=0;i<splitStringid12.length;i++) {
				String actualDate12=splitStringid12[splitStringid12.length-1]; 
				System.out.println("actualDate : " + actualDate12);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate12);
				break;
			}

			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent12=driver.getWindowHandle();
			Set<String>s12=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I112= s12.iterator();
			while(I112.hasNext())
			{
				String child_window=I112.next();
				if(!parent12.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate112 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate112);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join12=null;
					String[] splitString12 = imageDate112.split(" ");
					for(int i=0;i<splitString12.length-2;i++) {
						String actualDate12=splitString12[i]; 
						join12= splitString12[i+1]+" "+ splitString12[i]+" " + splitString12[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join12);
					}
					Assert.assertEquals(imageDate12, imageDate112);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate12+"="+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate12+"="+join12);

					String join2012=null;
					String[] splitString2012 = imageDate21.split(" ");
					for(int i=0;i<splitString2012.length-2;i++) {
						String actualDate2012=splitString2012[i]; 
						join2012= splitString2012[i+1]+" "+ splitString2012[i]+" " + splitString2012[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2012);
					}
					Assert.assertEquals(lastimageDate12, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate12+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate12+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate12);
			driver.switchTo().window(parent12);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("13 Ads image");

			helper.Scrollintoview(date13);
			helper.highLightElement(driver, date13);
			String imageDate13=date13.getText();
			System.out.println("First Image Date is :"+imageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate13); 

			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13);

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);

			String linkText13 = ShowAnalytics13.getAttribute("href");
			String idString13 = null;
			String[] splitStringid13 = linkText13.split("/");
			for(int i=0;i<splitStringid13.length;i++) {
				String actualDate13=splitStringid13[splitStringid13.length-1]; 
				System.out.println("actualDate : " + actualDate13);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate13);
				break;
			}

			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent13=driver.getWindowHandle();
			Set<String>s13=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I13= s13.iterator();
			while(I13.hasNext())
			{
				String child_window=I13.next();
				if(!parent13.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate113 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate113);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join13=null;
					String[] splitString13 = imageDate113.split(" ");
					for(int i=0;i<splitString13.length-2;i++) {
						String actualDate13=splitString13[i]; 
						join13= splitString13[i+1]+" "+ splitString13[i]+" " + splitString13[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join13);
					}
					Assert.assertEquals(imageDate13, imageDate113);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);

					String join2013=null;
					String[] splitString2013 = imageDate21.split(" ");
					for(int i=0;i<splitString2013.length-2;i++) {
						String actualDate2013=splitString2013[i]; 
						join2013= splitString2013[i+1]+" "+ splitString2013[i]+" " + splitString2013[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2013);
					}
					Assert.assertEquals(lastimageDate13, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate13+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate13+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate13);
			driver.switchTo().window(parent13);
		} catch (Exception e) {

			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("14 Ads image");

			helper.Scrollintoview(date14);
			helper.highLightElement(driver, date14);
			String imageDate14=date14.getText();
			System.out.println("First Image Date is :"+imageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate14); 

			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14);

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);

			String linkText14 = ShowAnalytics14.getAttribute("href");
			String idString14 = null;
			String[] splitStringid14 = linkText14.split("/");
			for(int i=0;i<splitStringid14.length;i++) {
				String actualDate14=splitStringid14[splitStringid14.length-1]; 
				System.out.println("actualDate : " + actualDate14);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate14);
				break;
			}

			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent14=driver.getWindowHandle();
			Set<String>s14=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I14= s14.iterator();
			while(I14.hasNext())
			{
				String child_window=I14.next();
				if(!parent14.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate114 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate114);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join14=null;
					String[] splitString14 = imageDate114.split(" ");
					for(int i=0;i<splitString14.length-2;i++) {
						String actualDate14=splitString14[i]; 
						join14= splitString14[i+1]+" "+ splitString14[i]+" " + splitString14[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join14);
					}
					Assert.assertEquals(imageDate14, imageDate114);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);

					String join2014=null;
					String[] splitString2014 = imageDate21.split(" ");
					for(int i=0;i<splitString2014.length-2;i++) {
						String actualDate2014=splitString2014[i]; 
						join2014= splitString2014[i+1]+" "+ splitString2014[i]+" " + splitString2014[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2014);
					}
					Assert.assertEquals(lastimageDate14, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate14+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate14+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate14);
			driver.switchTo().window(parent14);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("Second Ads image");

			helper.Scrollintoview(date15);
			helper.highLightElement(driver, date15);
			String imageDate15=date15.getText();
			System.out.println("First Image Date is :"+imageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate15); 

			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15);

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);

			String linkText15 = ShowAnalytics15.getAttribute("href");
			String idString15 = null;
			String[] splitStringid15 = linkText15.split("/");
			for(int i=0;i<splitStringid15.length;i++) {
				String actualDate15=splitStringid15[splitStringid15.length-1]; 
				System.out.println("actualDate : " + actualDate15);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate15);
				break;
			}
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent15=driver.getWindowHandle();
			Set<String>s15=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I15= s15.iterator();
			while(I15.hasNext())
			{
				String child_window=I15.next();
				if(!parent15.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate115 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate115);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join15=null;
					String[] splitString15 = imageDate115.split(" ");
					for(int i=0;i<splitString15.length-2;i++) {
						String actualDate15=splitString15[i]; 
						join15= splitString15[i+1]+" "+ splitString15[i]+" " + splitString15[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join15);
					}
					Assert.assertEquals(imageDate15, imageDate115);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);

					String join2015=null;
					String[] splitString2015 = imageDate21.split(" ");
					for(int i=0;i<splitString2015.length-2;i++) {
						String actualDate2015=splitString2015[i]; 
						join2015= splitString2015[i+1]+" "+ splitString2015[i]+" " + splitString2015[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2015);
					}
					Assert.assertEquals(lastimageDate15, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate15+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate15+"="+imageDate21);

					driver.close();
				}
			}

			System.out.println("Current Image Date: "+imageDate15);
			driver.switchTo().window(parent15);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		/*	helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsScrollintoview(Clear_Filters);
		Clear_Filters.click();
		Reporter.log("<B><font color = 'orange'> Step10 -</font> Clicked On Clear Filters Icon");
		helper.waitForPageToLoad();*/


	}
	public void AdSeenBetween_Today() throws InterruptedException
	{


		helper.waitForPageToLoad();

		Reporter.log(" ");
		Reporter.log("<B><font color = 'green'> -ShortBy Newest -Ad Seen Between Today Step will Start from here </font> ");
		helper.waitFor(adSeenbetweenfilter);
		helper.highLightElement(driver, adSeenbetweenfilter);
		helper.jsScrollintoview(adSeenbetweenfilter);
		adSeenbetweenfilter.click();
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Ad Seen between filter Icon");

		helper.waitFor(adSeenbetween_today);
		helper.highLightElement(driver, adSeenbetween_today);
		helper.jsScrollintoview(adSeenbetween_today);
		adSeenbetween_today.click();
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On Ad Seen between Today Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step7 -</font>  Total Ad Count is :"+ totaladscount);

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -1 Ad- -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			helper.Scrollintoview(date1);
			helper.highLightElement(driver, date1);
			String imageDate=date1.getText();
			System.out.println("First Image Date is :"+imageDate);
			System.out.println("Current Image Date: "+imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate); 

			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);

			String linkText1 = ShowAnalytics1.getAttribute("href");
			String idString1 = null;
			String[] splitStringid1 = linkText1.split("/");
			for(int i=0;i<splitStringid1.length;i++) {
				String actualDate1=splitStringid1[splitStringid1.length-1]; 
				System.out.println("actualDate : " + actualDate1);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate1);
				break;
			}

			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1= s.iterator();
			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					Thread.sleep(2000);
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate1 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1);
					helper.Scrollintoview(lastSeen);
					String imageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate2);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join=null;
					String[] splitString = imageDate1.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						join= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join);
					}
					Assert.assertEquals(imageDate, imageDate1);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate+"="+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching First Seen  Date Assert Pass :"+imageDate+"="+imageDate1);


					String join201=null;
					String[] splitString201 = imageDate2.split(" ");
					for(int i=0;i<splitString201.length-2;i++) {
						String actualDate201=splitString201[i]; 
						join201= splitString201[i+1]+" "+ splitString201[i]+" " + splitString201[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join201);
					}
					Assert.assertEquals(lastimageDate1, imageDate2);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate1+"="+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate1+"="+imageDate2);

					driver.close();
				}
			}

			driver.switchTo().window(parent);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -2 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("2 Ads image");

			helper.Scrollintoview(date2);
			helper.highLightElement(driver, date2);
			String imageDate2=date2.getText();
			System.out.println("First Image Date is :"+imageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate2); 

			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2);

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);

			String linkText2 = ShowAnalytics2.getAttribute("href");
			String idString2 = null;
			String[] splitStringid2 = linkText2.split("/");
			for(int i=0;i<splitStringid2.length;i++) {
				String actualDate2=splitStringid2[splitStringid2.length-1]; 
				System.out.println("actualDate : " + actualDate2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate2);
				break;
			}
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent1=driver.getWindowHandle();
			Set<String>s1=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I11= s1.iterator();
			while(I11.hasNext())
			{
				String child_window=I11.next();
				if(!parent1.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					Thread.sleep(2000);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join2=null;
					String[] splitString2 = imageDate11.split(" ");
					for(int i=0;i<splitString2.length-2;i++) {
						String actualDate2=splitString2[i]; 
						join2= splitString2[i+1]+" "+ splitString2[i]+" " + splitString2[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2);
					}
					Assert.assertEquals(imageDate2, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);

					String join202=null;
					String[] splitString202 = imageDate21.split(" ");
					for(int i=0;i<splitString202.length-2;i++) {
						String actualDate202=splitString202[i]; 
						join202= splitString202[i+1]+" "+ splitString202[i]+" " + splitString202[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join202);
					}
					Assert.assertEquals(lastimageDate2, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate2+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate2+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate2);
			driver.switchTo().window(parent1);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -3 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("3 Ads image");

			helper.Scrollintoview(date3);
			helper.highLightElement(driver, date3);
			String imageDate3=date3.getText();
			System.out.println("First Image Date is :"+imageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate3); 

			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3);

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);

			String linkText3 = ShowAnalytics3.getAttribute("href");
			String idString3 = null;
			String[] splitStringid3 = linkText3.split("/");
			for(int i=0;i<splitStringid3.length;i++) {
				String actualDate3=splitStringid3[splitStringid3.length-1]; 
				System.out.println("actualDate : " + actualDate3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate3);
				break;
			}
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent121=driver.getWindowHandle();
			Set<String>s121=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I111= s121.iterator();
			while(I111.hasNext())
			{
				String child_window=I111.next();
				if(!parent121.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join3=null;
					String[] splitString3 = imageDate111.split(" ");
					for(int i=0;i<splitString3.length-2;i++) {
						String actualDate3=splitString3[i]; 
						join3= splitString3[i+1]+" "+ splitString3[i]+" " + splitString3[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join3);
					}

					Assert.assertEquals(imageDate3,imageDate111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);

					String join203=null;
					String[] splitString203 = imageDate21.split(" ");
					for(int i=0;i<splitString203.length-2;i++) {
						String actualDate203=splitString203[i]; 
						join203= splitString203[i+1]+" "+ splitString203[i]+" " + splitString203[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join203);
					}
					Assert.assertEquals(lastimageDate3, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate3+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate3+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate3);
			driver.switchTo().window(parent121);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}	


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -4 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("4 Ads image");
			helper.Scrollintoview(date4);
			helper.highLightElement(driver, date4);
			String imageDate4=date4.getText();
			System.out.println("First Image Date is :"+imageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate4); 

			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4);

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);

			String linkText4 = ShowAnalytics4.getAttribute("href");
			String idString4 = null;
			String[] splitStringid4 = linkText4.split("/");
			for(int i=0;i<splitStringid4.length;i++) {
				String actualDate4=splitStringid4[splitStringid4.length-1]; 
				System.out.println("actualDate : " + actualDate4);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate4);
				break;
			}

			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent111=driver.getWindowHandle();
			Set<String>s111=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1111= s111.iterator();
			while(I1111.hasNext())
			{
				String child_window=I1111.next();
				if(!parent111.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate1111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join4=null;
					String[] splitString4 = imageDate1111.split(" ");
					for(int i=0;i<splitString4.length-2;i++) {
						String actualDate4=splitString4[i]; 
						join4= splitString4[i+1]+" "+ splitString4[i]+" " + splitString4[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join4);
					}
					Assert.assertEquals(imageDate4, imageDate1111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);

					String join204=null;
					String[] splitString204 = imageDate21.split(" ");
					for(int i=0;i<splitString204.length-2;i++) {
						String actualDate204=splitString204[i]; 
						join204= splitString204[i+1]+" "+ splitString204[i]+" " + splitString204[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join204);
					}
					Assert.assertEquals(lastimageDate4, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate4+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate4+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate4);
			driver.switchTo().window(parent111);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -5 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("5 Ads image");
			helper.Scrollintoview(date5);
			helper.highLightElement(driver, date5);
			String imageDate5=date5.getText();
			System.out.println("First Image Date is :"+imageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate5); 

			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5);

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);

			String linkText5 = ShowAnalytics5.getAttribute("href");
			String idString5 = null;
			String[] splitStringid5 = linkText5.split("/");
			for(int i=0;i<splitStringid5.length;i++) {
				String actualDate5=splitStringid5[splitStringid5.length-1]; 
				System.out.println("actualDate : " + actualDate5);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate5);
				break;
			}

			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent5=driver.getWindowHandle();
			Set<String>s5=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I5= s5.iterator();
			while(I5.hasNext())
			{
				String child_window=I5.next();
				if(!parent5.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate6 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate6);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join5=null;
					String[] splitString5 = imageDate6.split(" ");
					for(int i=0;i<splitString5.length-2;i++) {
						String actualDate5=splitString5[i]; 
						join5= splitString5[i+1]+" "+ splitString5[i]+" " + splitString5[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join5);
					}
					Assert.assertEquals(imageDate5, imageDate6);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);

					String join205=null;
					String[] splitString205 = imageDate21.split(" ");
					for(int i=0;i<splitString205.length-2;i++) {
						String actualDate205=splitString205[i]; 
						join205= splitString205[i+1]+" "+ splitString205[i]+" " + splitString205[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join205);
					}
					Assert.assertEquals(lastimageDate5, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate5+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate5+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate5);
			driver.switchTo().window(parent5);
		} catch (Exception e) {
			// TODO: handle exception	
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("6 Ads image");
			helper.Scrollintoview(date6);
			helper.highLightElement(driver, date6);
			String imageDate6=date6.getText();
			System.out.println("First Image Date is :"+imageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate6); 

			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6);

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);

			String linkText6 = ShowAnalytics6.getAttribute("href");
			String idString6 = null;
			String[] splitStringid6 = linkText6.split("/");
			for(int i=0;i<splitStringid6.length;i++) {
				String actualDate6=splitStringid6[splitStringid6.length-1]; 
				System.out.println("actualDate : " + actualDate6);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate6);
				break;
			}

			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent6=driver.getWindowHandle();
			Set<String>s6=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I6= s6.iterator();
			while(I6.hasNext())
			{
				String child_window=I6.next();
				if(!parent6.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join6=null;
					String[] splitString6 = imageDate11.split(" ");
					for(int i=0;i<splitString6.length-2;i++) {
						String actualDate6=splitString6[i]; 
						join6= splitString6[i+1]+" "+ splitString6[i]+" " + splitString6[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join6);
					}
					Assert.assertEquals(imageDate6, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);

					String join206=null;
					String[] splitString206 = imageDate21.split(" ");
					for(int i=0;i<splitString206.length-2;i++) {
						String actualDate206=splitString206[i]; 
						join206= splitString206[i+1]+" "+ splitString206[i]+" " + splitString206[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join206);
					}
					Assert.assertEquals(lastimageDate6, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate6+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate6+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate6);
			driver.switchTo().window(parent6);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("7 Ads image");
			helper.Scrollintoview(date7);
			helper.highLightElement(driver, date7);
			String imageDate7=date7.getText();
			System.out.println("First Image Date is :"+imageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate7); 

			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7);

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);

			String linkText7 = ShowAnalytics7.getAttribute("href");
			String idString7 = null;
			String[] splitStringid7 = linkText7.split("/");
			for(int i=0;i<splitStringid7.length;i++) {
				String actualDate7=splitStringid7[splitStringid7.length-1]; 
				System.out.println("actualDate : " + actualDate7);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate7);
				break;
			}
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent17=driver.getWindowHandle();
			Set<String>s17=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I17= s17.iterator();
			while(I17.hasNext())
			{
				String child_window=I17.next();
				if(!parent17.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join7=null;
					String[] splitString7 = imageDate11.split(" ");
					for(int i=0;i<splitString7.length-2;i++) {
						String actualDate7=splitString7[i]; 
						join7= splitString7[i+1]+" "+ splitString7[i]+" " + splitString7[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join7);
					}
					Assert.assertEquals(imageDate7, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);

					String join207=null;
					String[] splitString207 = imageDate21.split(" ");
					for(int i=0;i<splitString207.length-2;i++) {
						String actualDate207=splitString207[i]; 
						join207= splitString207[i+1]+" "+ splitString207[i]+" " + splitString207[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join207);
					}
					Assert.assertEquals(lastimageDate7, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate7+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate7+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate7);
			driver.switchTo().window(parent17);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -8 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("8 Ads image");
			helper.Scrollintoview(date8);
			helper.highLightElement(driver, date8);
			String imageDate8=date8.getText();
			System.out.println("First Image Date is :"+imageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate8); 

			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8);

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);

			String linkText8 = ShowAnalytics8.getAttribute("href");
			String idString8 = null;
			String[] splitStringid8 = linkText8.split("/");
			for(int i=0;i<splitStringid8.length;i++) {
				String actualDate8=splitStringid8[splitStringid8.length-1]; 
				System.out.println("actualDate : " + actualDate8);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate8);
				break;
			}

			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent8=driver.getWindowHandle();
			Set<String>s8=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I8= s8.iterator();
			while(I8.hasNext())
			{
				String child_window=I8.next();
				if(!parent8.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join8=null;
					String[] splitString8 = imageDate11.split(" ");
					for(int i=0;i<splitString8.length-2;i++) {
						String actualDate8=splitString8[i]; 
						join8= splitString8[i+1]+" "+ splitString8[i]+" " + splitString8[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join8);
					}
					Assert.assertEquals(imageDate8, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);

					String join208=null;
					String[] splitString208 = imageDate21.split(" ");
					for(int i=0;i<splitString208.length-2;i++) {
						String actualDate208=splitString208[i]; 
						join208= splitString208[i+1]+" "+ splitString208[i]+" " + splitString208[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join208);
					}
					Assert.assertEquals(lastimageDate8, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate8+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate8+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate8);
			driver.switchTo().window(parent8);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad- </font>  ");
			System.out.println(" ");
			System.out.println("9 Ads image");
			helper.Scrollintoview(date9);
			helper.highLightElement(driver, date9);
			String imageDate9=date9.getText();
			System.out.println("First Image Date is :"+imageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate9); 

			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9);

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);

			String linkText9 = ShowAnalytics9.getAttribute("href");
			String idString9 = null;
			String[] splitStringid9 = linkText9.split("/");
			for(int i=0;i<splitStringid9.length;i++) {
				String actualDate9=splitStringid9[splitStringid9.length-1]; 
				System.out.println("actualDate : " + actualDate9);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate9);
				break;
			}
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent9=driver.getWindowHandle();
			Set<String>s9=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I9=s9.iterator();
			while(I9.hasNext())
			{
				String child_window=I9.next();
				if(!parent9.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate19 = firstSeen.getText();

					System.out.println("Analytics Image First Seen Date: "+imageDate19);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join9=null;
					String[] splitString9 = imageDate19.split(" ");
					for(int i=0;i<splitString9.length-2;i++) {
						String actualDate9=splitString9[i]; 
						join9= splitString9[i+1]+" "+ splitString9[i]+" " + splitString9[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join9);
					}
					Assert.assertEquals(imageDate9, imageDate19);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);

					String join209=null;
					String[] splitString209 = imageDate21.split(" ");
					for(int i=0;i<splitString209.length-2;i++) {
						String actualDate209=splitString209[i]; 
						join209= splitString209[i+1]+" "+ splitString209[i]+" " + splitString209[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join209);
					}
					Assert.assertEquals(lastimageDate9, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate9+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate9+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate9);
			driver.switchTo().window(parent9);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -10 Ad</font>  ");
			System.out.println(" ");
			System.out.println("10 Ads image");

			helper.Scrollintoview(date10);
			helper.highLightElement(driver, date10);
			String imageDate10=date10.getText();
			System.out.println("First Image Date is :"+imageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate10); 

			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10);

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);

			String linkText10 = ShowAnalytics10.getAttribute("href");
			String idString10 = null;
			String[] splitStringid10 = linkText10.split("/");
			for(int i=0;i<splitStringid10.length;i++) {
				String actualDate10=splitStringid10[splitStringid10.length-1]; 
				System.out.println("actualDate : " + actualDate10);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate10);
				break;
			}
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent10=driver.getWindowHandle();
			Set<String>s10=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I10= s10.iterator();
			while(I10.hasNext())
			{
				String child_window=I10.next();
				if(!parent10.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join10=null;
					String[] splitString10 = imageDate11.split(" ");
					for(int i=0;i<splitString10.length-2;i++) {
						String actualDate10=splitString10[i]; 
						join10= splitString10[i+1]+" "+ splitString10[i]+" " + splitString10[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join10);
					}
					Assert.assertEquals(imageDate10, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);

					String join2010=null;
					String[] splitString2010 = imageDate21.split(" ");
					for(int i=0;i<splitString2010.length-2;i++) {
						String actualDate2010=splitString2010[i]; 
						join2010= splitString2010[i+1]+" "+ splitString2010[i]+" " + splitString2010[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2010);
					}
					Assert.assertEquals(lastimageDate10, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate10+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate10+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate10);
			driver.switchTo().window(parent10);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -11 Ad </font>  ");
			System.out.println(" ");
			System.out.println("11 Ads image");

			helper.Scrollintoview(date11);
			helper.highLightElement(driver, date11);
			String imageDate11=date11.getText();
			System.out.println("First Image Date is :"+imageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate11); 

			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11);

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);

			String linkText11 = ShowAnalytics11.getAttribute("href");
			String idString11 = null;
			String[] splitStringid11 = linkText11.split("/");
			for(int i=0;i<splitStringid11.length;i++) {
				String actualDate11=splitStringid11[splitStringid11.length-1]; 
				System.out.println("actualDate : " + actualDate11);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate11);
				break;
			}
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent11=driver.getWindowHandle();
			Set<String>s11=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I110= s11.iterator();
			while(I110.hasNext())
			{
				String child_window=I110.next();
				if(!parent11.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate101 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate101);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join11=null;
					String[] splitString11 = imageDate101.split(" ");
					for(int i=0;i<splitString11.length-2;i++) {
						String actualDate11=splitString11[i]; 
						join11= splitString11[i+1]+" "+ splitString11[i]+" " + splitString11[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join11);
					}
					Assert.assertEquals(imageDate11, imageDate101);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);

					String join2011=null;
					String[] splitString2011 = imageDate21.split(" ");
					for(int i=0;i<splitString2011.length-2;i++) {
						String actualDate2011=splitString2011[i]; 
						join2011= splitString2011[i+1]+" "+ splitString2011[i]+" " + splitString2011[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2011);
					}
					Assert.assertEquals(lastimageDate11, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate11+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate11+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate11);
			driver.switchTo().window(parent11);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -12 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("12 Ads image");

			helper.Scrollintoview(date12);
			helper.highLightElement(driver, date12);
			String imageDate12=date12.getText();
			System.out.println("First Image Date is :"+imageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate12); 

			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12);

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);

			String linkText12 = ShowAnalytics12.getAttribute("href");
			String idString12 = null;
			String[] splitStringid12 = linkText12.split("/");
			for(int i=0;i<splitStringid12.length;i++) {
				String actualDate12=splitStringid12[splitStringid12.length-1]; 
				System.out.println("actualDate : " + actualDate12);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate12);
				break;
			}

			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent12=driver.getWindowHandle();
			Set<String>s12=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I112= s12.iterator();
			while(I112.hasNext())
			{
				String child_window=I112.next();
				if(!parent12.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate112 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate112);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join12=null;
					String[] splitString12 = imageDate112.split(" ");
					for(int i=0;i<splitString12.length-2;i++) {
						String actualDate12=splitString12[i]; 
						join12= splitString12[i+1]+" "+ splitString12[i]+" " + splitString12[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join12);
					}
					Assert.assertEquals(imageDate12, imageDate112);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate12+"="+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate12+"="+join12);

					String join2012=null;
					String[] splitString2012 = imageDate21.split(" ");
					for(int i=0;i<splitString2012.length-2;i++) {
						String actualDate2012=splitString2012[i]; 
						join2012= splitString2012[i+1]+" "+ splitString2012[i]+" " + splitString2012[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2012);
					}
					Assert.assertEquals(lastimageDate12, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate12+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate12+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate12);
			driver.switchTo().window(parent12);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("13 Ads image");

			helper.Scrollintoview(date13);
			helper.highLightElement(driver, date13);
			String imageDate13=date13.getText();
			System.out.println("First Image Date is :"+imageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate13); 

			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13);

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);

			String linkText13 = ShowAnalytics13.getAttribute("href");
			String idString13 = null;
			String[] splitStringid13 = linkText13.split("/");
			for(int i=0;i<splitStringid13.length;i++) {
				String actualDate13=splitStringid13[splitStringid13.length-1]; 
				System.out.println("actualDate : " + actualDate13);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate13);
				break;
			}

			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent13=driver.getWindowHandle();
			Set<String>s13=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I13= s13.iterator();
			while(I13.hasNext())
			{
				String child_window=I13.next();
				if(!parent13.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate113 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate113);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join13=null;
					String[] splitString13 = imageDate113.split(" ");
					for(int i=0;i<splitString13.length-2;i++) {
						String actualDate13=splitString13[i]; 
						join13= splitString13[i+1]+" "+ splitString13[i]+" " + splitString13[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join13);
					}
					Assert.assertEquals(imageDate13, imageDate113);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);

					String join2013=null;
					String[] splitString2013 = imageDate21.split(" ");
					for(int i=0;i<splitString2013.length-2;i++) {
						String actualDate2013=splitString2013[i]; 
						join2013= splitString2013[i+1]+" "+ splitString2013[i]+" " + splitString2013[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2013);
					}
					Assert.assertEquals(lastimageDate13, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate13+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate13+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate13);
			driver.switchTo().window(parent13);
		} catch (Exception e) {

			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("14 Ads image");

			helper.Scrollintoview(date14);
			helper.highLightElement(driver, date14);
			String imageDate14=date14.getText();
			System.out.println("First Image Date is :"+imageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate14); 

			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14);

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);

			String linkText14 = ShowAnalytics14.getAttribute("href");
			String idString14 = null;
			String[] splitStringid14 = linkText14.split("/");
			for(int i=0;i<splitStringid14.length;i++) {
				String actualDate14=splitStringid14[splitStringid14.length-1]; 
				System.out.println("actualDate : " + actualDate14);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate14);
				break;
			}

			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent14=driver.getWindowHandle();
			Set<String>s14=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I14= s14.iterator();
			while(I14.hasNext())
			{
				String child_window=I14.next();
				if(!parent14.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate114 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate114);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join14=null;
					String[] splitString14 = imageDate114.split(" ");
					for(int i=0;i<splitString14.length-2;i++) {
						String actualDate14=splitString14[i]; 
						join14= splitString14[i+1]+" "+ splitString14[i]+" " + splitString14[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join14);
					}
					Assert.assertEquals(imageDate14, imageDate114);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);

					String join2014=null;
					String[] splitString2014 = imageDate21.split(" ");
					for(int i=0;i<splitString2014.length-2;i++) {
						String actualDate2014=splitString2014[i]; 
						join2014= splitString2014[i+1]+" "+ splitString2014[i]+" " + splitString2014[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2014);
					}
					Assert.assertEquals(lastimageDate14, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate14+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate14+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate14);
			driver.switchTo().window(parent14);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("Second Ads image");

			helper.Scrollintoview(date15);
			helper.highLightElement(driver, date15);
			String imageDate15=date15.getText();
			System.out.println("First Image Date is :"+imageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate15); 

			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15);

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);

			String linkText15 = ShowAnalytics15.getAttribute("href");
			String idString15 = null;
			String[] splitStringid15 = linkText15.split("/");
			for(int i=0;i<splitStringid15.length;i++) {
				String actualDate15=splitStringid15[splitStringid15.length-1]; 
				System.out.println("actualDate : " + actualDate15);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate15);
				break;
			}
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent15=driver.getWindowHandle();
			Set<String>s15=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I15= s15.iterator();
			while(I15.hasNext())
			{
				String child_window=I15.next();
				if(!parent15.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate115 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate115);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join15=null;
					String[] splitString15 = imageDate115.split(" ");
					for(int i=0;i<splitString15.length-2;i++) {
						String actualDate15=splitString15[i]; 
						join15= splitString15[i+1]+" "+ splitString15[i]+" " + splitString15[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join15);
					}
					Assert.assertEquals(imageDate15, imageDate115);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);

					String join2015=null;
					String[] splitString2015 = imageDate21.split(" ");
					for(int i=0;i<splitString2015.length-2;i++) {
						String actualDate2015=splitString2015[i]; 
						join2015= splitString2015[i+1]+" "+ splitString2015[i]+" " + splitString2015[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2015);
					}
					Assert.assertEquals(lastimageDate15, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate15+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate15+"="+imageDate21);

					driver.close();
				}
			}

			System.out.println("Current Image Date: "+imageDate15);
			driver.switchTo().window(parent15);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
	}







	public void AdSeenBetween_Yesterday() throws InterruptedException
	{
		String date_format_lastseen1=null;


		System.out.println();
		Reporter.log("      ");
		helper.waitForPageToLoad();
		Reporter.log("<B><font color = 'green'>  - ShortBy Newest -Ad Seen Between Yesterday Step will Start from here </font> ");
		helper.waitFor(adSeenbetweenfilter);
		helper.highLightElement(driver, adSeenbetweenfilter);
		helper.jsScrollintoview(adSeenbetweenfilter);
		adSeenbetweenfilter.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Ad Seen between filter Icon");

		helper.waitFor(adSeenbetween_yesterday);
		helper.highLightElement(driver, adSeenbetween_yesterday);
		helper.jsScrollintoview(adSeenbetween_yesterday);
		adSeenbetween_yesterday.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On Ad Seen Between Yesterday Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step4 -</font>  Total Ad Count is :"+ totaladscount);


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -1 Ad- -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			helper.Scrollintoview(date1);
			helper.highLightElement(driver, date1);
			String imageDate=date1.getText();
			System.out.println("First Image Date is :"+imageDate);
			System.out.println("Current Image Date: "+imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate); 

			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);

			String linkText1 = ShowAnalytics1.getAttribute("href");
			String idString1 = null;
			String[] splitStringid1 = linkText1.split("/");
			for(int i=0;i<splitStringid1.length;i++) {
				String actualDate1=splitStringid1[splitStringid1.length-1]; 
				System.out.println("actualDate : " + actualDate1);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate1);
				break;
			}

			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1= s.iterator();
			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					Thread.sleep(2000);
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate1 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1);
					helper.Scrollintoview(lastSeen);
					String imageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate2);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join=null;
					String[] splitString = imageDate1.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						join= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join);
					}
					Assert.assertEquals(imageDate, imageDate1);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate+"="+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching First Seen  Date Assert Pass :"+imageDate+"="+imageDate1);


					String join201=null;
					String[] splitString201 = imageDate2.split(" ");
					for(int i=0;i<splitString201.length-2;i++) {
						String actualDate201=splitString201[i]; 
						join201= splitString201[i+1]+" "+ splitString201[i]+" " + splitString201[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join201);
					}
					Assert.assertEquals(lastimageDate1, imageDate2);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate1+"="+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate1+"="+imageDate2);

					driver.close();
				}
			}

			driver.switchTo().window(parent);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -2 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("2 Ads image");

			helper.Scrollintoview(date2);
			helper.highLightElement(driver, date2);
			String imageDate2=date2.getText();
			System.out.println("First Image Date is :"+imageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate2); 

			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2);

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);

			String linkText2 = ShowAnalytics2.getAttribute("href");
			String idString2 = null;
			String[] splitStringid2 = linkText2.split("/");
			for(int i=0;i<splitStringid2.length;i++) {
				String actualDate2=splitStringid2[splitStringid2.length-1]; 
				System.out.println("actualDate : " + actualDate2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate2);
				break;
			}
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent1=driver.getWindowHandle();
			Set<String>s1=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I11= s1.iterator();
			while(I11.hasNext())
			{
				String child_window=I11.next();
				if(!parent1.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					Thread.sleep(2000);
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join2=null;
					String[] splitString2 = imageDate11.split(" ");
					for(int i=0;i<splitString2.length-2;i++) {
						String actualDate2=splitString2[i]; 
						join2= splitString2[i+1]+" "+ splitString2[i]+" " + splitString2[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2);
					}
					Assert.assertEquals(imageDate2, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);

					String join202=null;
					String[] splitString202 = imageDate21.split(" ");
					for(int i=0;i<splitString202.length-2;i++) {
						String actualDate202=splitString202[i]; 
						join202= splitString202[i+1]+" "+ splitString202[i]+" " + splitString202[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join202);
					}
					Assert.assertEquals(lastimageDate2, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate2+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate2+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate2);
			driver.switchTo().window(parent1);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -3 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("3 Ads image");

			helper.Scrollintoview(date3);
			helper.highLightElement(driver, date3);
			String imageDate3=date3.getText();
			System.out.println("First Image Date is :"+imageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate3); 

			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3);

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);

			String linkText3 = ShowAnalytics3.getAttribute("href");
			String idString3 = null;
			String[] splitStringid3 = linkText3.split("/");
			for(int i=0;i<splitStringid3.length;i++) {
				String actualDate3=splitStringid3[splitStringid3.length-1]; 
				System.out.println("actualDate : " + actualDate3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate3);
				break;
			}
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent121=driver.getWindowHandle();
			Set<String>s121=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I111= s121.iterator();
			while(I111.hasNext())
			{
				String child_window=I111.next();
				if(!parent121.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join3=null;
					String[] splitString3 = imageDate111.split(" ");
					for(int i=0;i<splitString3.length-2;i++) {
						String actualDate3=splitString3[i]; 
						join3= splitString3[i+1]+" "+ splitString3[i]+" " + splitString3[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join3);
					}

					Assert.assertEquals(imageDate3,imageDate111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);

					String join203=null;
					String[] splitString203 = imageDate21.split(" ");
					for(int i=0;i<splitString203.length-2;i++) {
						String actualDate203=splitString203[i]; 
						join203= splitString203[i+1]+" "+ splitString203[i]+" " + splitString203[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join203);
					}
					Assert.assertEquals(lastimageDate3, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate3+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate3+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate3);
			driver.switchTo().window(parent121);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}	


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -4 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("4 Ads image");
			helper.Scrollintoview(date4);
			helper.highLightElement(driver, date4);
			String imageDate4=date4.getText();
			System.out.println("First Image Date is :"+imageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate4); 

			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4);

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);

			String linkText4 = ShowAnalytics4.getAttribute("href");
			String idString4 = null;
			String[] splitStringid4 = linkText4.split("/");
			for(int i=0;i<splitStringid4.length;i++) {
				String actualDate4=splitStringid4[splitStringid4.length-1]; 
				System.out.println("actualDate : " + actualDate4);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate4);
				break;
			}

			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent111=driver.getWindowHandle();
			Set<String>s111=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1111= s111.iterator();
			while(I1111.hasNext())
			{
				String child_window=I1111.next();
				if(!parent111.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate1111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join4=null;
					String[] splitString4 = imageDate1111.split(" ");
					for(int i=0;i<splitString4.length-2;i++) {
						String actualDate4=splitString4[i]; 
						join4= splitString4[i+1]+" "+ splitString4[i]+" " + splitString4[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join4);
					}
					Assert.assertEquals(imageDate4, imageDate1111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);

					String join204=null;
					String[] splitString204 = imageDate21.split(" ");
					for(int i=0;i<splitString204.length-2;i++) {
						String actualDate204=splitString204[i]; 
						join204= splitString204[i+1]+" "+ splitString204[i]+" " + splitString204[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join204);
					}
					Assert.assertEquals(lastimageDate4, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate4+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate4+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate4);
			driver.switchTo().window(parent111);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -5 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("5 Ads image");
			helper.Scrollintoview(date5);
			helper.highLightElement(driver, date5);
			String imageDate5=date5.getText();
			System.out.println("First Image Date is :"+imageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate5); 

			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5);

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);

			String linkText5 = ShowAnalytics5.getAttribute("href");
			String idString5 = null;
			String[] splitStringid5 = linkText5.split("/");
			for(int i=0;i<splitStringid5.length;i++) {
				String actualDate5=splitStringid5[splitStringid5.length-1]; 
				System.out.println("actualDate : " + actualDate5);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate5);
				break;
			}

			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent5=driver.getWindowHandle();
			Set<String>s5=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I5= s5.iterator();
			while(I5.hasNext())
			{
				String child_window=I5.next();
				if(!parent5.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate6 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate6);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join5=null;
					String[] splitString5 = imageDate6.split(" ");
					for(int i=0;i<splitString5.length-2;i++) {
						String actualDate5=splitString5[i]; 
						join5= splitString5[i+1]+" "+ splitString5[i]+" " + splitString5[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join5);
					}
					Assert.assertEquals(imageDate5, imageDate6);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);

					String join205=null;
					String[] splitString205 = imageDate21.split(" ");
					for(int i=0;i<splitString205.length-2;i++) {
						String actualDate205=splitString205[i]; 
						join205= splitString205[i+1]+" "+ splitString205[i]+" " + splitString205[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join205);
					}
					Assert.assertEquals(lastimageDate5, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate5+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate5+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate5);
			driver.switchTo().window(parent5);
		} catch (Exception e) {
			// TODO: handle exception	
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("6 Ads image");
			helper.Scrollintoview(date6);
			helper.highLightElement(driver, date6);
			String imageDate6=date6.getText();
			System.out.println("First Image Date is :"+imageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate6); 

			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6);

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);

			String linkText6 = ShowAnalytics6.getAttribute("href");
			String idString6 = null;
			String[] splitStringid6 = linkText6.split("/");
			for(int i=0;i<splitStringid6.length;i++) {
				String actualDate6=splitStringid6[splitStringid6.length-1]; 
				System.out.println("actualDate : " + actualDate6);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate6);
				break;
			}

			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent6=driver.getWindowHandle();
			Set<String>s6=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I6= s6.iterator();
			while(I6.hasNext())
			{
				String child_window=I6.next();
				if(!parent6.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join6=null;
					String[] splitString6 = imageDate11.split(" ");
					for(int i=0;i<splitString6.length-2;i++) {
						String actualDate6=splitString6[i]; 
						join6= splitString6[i+1]+" "+ splitString6[i]+" " + splitString6[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join6);
					}
					Assert.assertEquals(imageDate6, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);

					String join206=null;
					String[] splitString206 = imageDate21.split(" ");
					for(int i=0;i<splitString206.length-2;i++) {
						String actualDate206=splitString206[i]; 
						join206= splitString206[i+1]+" "+ splitString206[i]+" " + splitString206[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join206);
					}
					Assert.assertEquals(lastimageDate6, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate6+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate6+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate6);
			driver.switchTo().window(parent6);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("7 Ads image");
			helper.Scrollintoview(date7);
			helper.highLightElement(driver, date7);
			String imageDate7=date7.getText();
			System.out.println("First Image Date is :"+imageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate7); 

			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7);

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);

			String linkText7 = ShowAnalytics7.getAttribute("href");
			String idString7 = null;
			String[] splitStringid7 = linkText7.split("/");
			for(int i=0;i<splitStringid7.length;i++) {
				String actualDate7=splitStringid7[splitStringid7.length-1]; 
				System.out.println("actualDate : " + actualDate7);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate7);
				break;
			}
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent17=driver.getWindowHandle();
			Set<String>s17=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I17= s17.iterator();
			while(I17.hasNext())
			{
				String child_window=I17.next();
				if(!parent17.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join7=null;
					String[] splitString7 = imageDate11.split(" ");
					for(int i=0;i<splitString7.length-2;i++) {
						String actualDate7=splitString7[i]; 
						join7= splitString7[i+1]+" "+ splitString7[i]+" " + splitString7[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join7);
					}
					Assert.assertEquals(imageDate7, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);

					String join207=null;
					String[] splitString207 = imageDate21.split(" ");
					for(int i=0;i<splitString207.length-2;i++) {
						String actualDate207=splitString207[i]; 
						join207= splitString207[i+1]+" "+ splitString207[i]+" " + splitString207[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join207);
					}
					Assert.assertEquals(lastimageDate7, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate7+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate7+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate7);
			driver.switchTo().window(parent17);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -8 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("8 Ads image");
			helper.Scrollintoview(date8);
			helper.highLightElement(driver, date8);
			String imageDate8=date8.getText();
			System.out.println("First Image Date is :"+imageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate8); 

			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8);

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);

			String linkText8 = ShowAnalytics8.getAttribute("href");
			String idString8 = null;
			String[] splitStringid8 = linkText8.split("/");
			for(int i=0;i<splitStringid8.length;i++) {
				String actualDate8=splitStringid8[splitStringid8.length-1]; 
				System.out.println("actualDate : " + actualDate8);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate8);
				break;
			}

			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent8=driver.getWindowHandle();
			Set<String>s8=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I8= s8.iterator();
			while(I8.hasNext())
			{
				String child_window=I8.next();
				if(!parent8.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join8=null;
					String[] splitString8 = imageDate11.split(" ");
					for(int i=0;i<splitString8.length-2;i++) {
						String actualDate8=splitString8[i]; 
						join8= splitString8[i+1]+" "+ splitString8[i]+" " + splitString8[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join8);
					}
					Assert.assertEquals(imageDate8, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);

					String join208=null;
					String[] splitString208 = imageDate21.split(" ");
					for(int i=0;i<splitString208.length-2;i++) {
						String actualDate208=splitString208[i]; 
						join208= splitString208[i+1]+" "+ splitString208[i]+" " + splitString208[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join208);
					}
					Assert.assertEquals(lastimageDate8, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate8+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate8+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate8);
			driver.switchTo().window(parent8);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad- </font>  ");
			System.out.println(" ");
			System.out.println("9 Ads image");
			helper.Scrollintoview(date9);
			helper.highLightElement(driver, date9);
			String imageDate9=date9.getText();
			System.out.println("First Image Date is :"+imageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate9); 

			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9);

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);

			String linkText9 = ShowAnalytics9.getAttribute("href");
			String idString9 = null;
			String[] splitStringid9 = linkText9.split("/");
			for(int i=0;i<splitStringid9.length;i++) {
				String actualDate9=splitStringid9[splitStringid9.length-1]; 
				System.out.println("actualDate : " + actualDate9);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate9);
				break;
			}
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent9=driver.getWindowHandle();
			Set<String>s9=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I9=s9.iterator();
			while(I9.hasNext())
			{
				String child_window=I9.next();
				if(!parent9.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate19 = firstSeen.getText();

					System.out.println("Analytics Image First Seen Date: "+imageDate19);
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join9=null;
					String[] splitString9 = imageDate19.split(" ");
					for(int i=0;i<splitString9.length-2;i++) {
						String actualDate9=splitString9[i]; 
						join9= splitString9[i+1]+" "+ splitString9[i]+" " + splitString9[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join9);
					}
					Assert.assertEquals(imageDate9, imageDate19);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);

					String join209=null;
					String[] splitString209 = imageDate21.split(" ");
					for(int i=0;i<splitString209.length-2;i++) {
						String actualDate209=splitString209[i]; 
						join209= splitString209[i+1]+" "+ splitString209[i]+" " + splitString209[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join209);
					}
					Assert.assertEquals(lastimageDate9, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate9+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate9+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate9);
			driver.switchTo().window(parent9);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -10 Ad</font>  ");
			System.out.println(" ");
			System.out.println("10 Ads image");

			helper.Scrollintoview(date10);
			helper.highLightElement(driver, date10);
			String imageDate10=date10.getText();
			System.out.println("First Image Date is :"+imageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate10); 

			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10);

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);

			String linkText10 = ShowAnalytics10.getAttribute("href");
			String idString10 = null;
			String[] splitStringid10 = linkText10.split("/");
			for(int i=0;i<splitStringid10.length;i++) {
				String actualDate10=splitStringid10[splitStringid10.length-1]; 
				System.out.println("actualDate : " + actualDate10);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate10);
				break;
			}
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent10=driver.getWindowHandle();
			Set<String>s10=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I10= s10.iterator();
			while(I10.hasNext())
			{
				String child_window=I10.next();
				if(!parent10.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join10=null;
					String[] splitString10 = imageDate11.split(" ");
					for(int i=0;i<splitString10.length-2;i++) {
						String actualDate10=splitString10[i]; 
						join10= splitString10[i+1]+" "+ splitString10[i]+" " + splitString10[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join10);
					}
					Assert.assertEquals(imageDate10, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);

					String join2010=null;
					String[] splitString2010 = imageDate21.split(" ");
					for(int i=0;i<splitString2010.length-2;i++) {
						String actualDate2010=splitString2010[i]; 
						join2010= splitString2010[i+1]+" "+ splitString2010[i]+" " + splitString2010[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2010);
					}
					Assert.assertEquals(lastimageDate10, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate10+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate10+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate10);
			driver.switchTo().window(parent10);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -11 Ad </font>  ");
			System.out.println(" ");
			System.out.println("11 Ads image");

			helper.Scrollintoview(date11);
			helper.highLightElement(driver, date11);
			String imageDate11=date11.getText();
			System.out.println("First Image Date is :"+imageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate11); 

			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11);

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);

			String linkText11 = ShowAnalytics11.getAttribute("href");
			String idString11 = null;
			String[] splitStringid11 = linkText11.split("/");
			for(int i=0;i<splitStringid11.length;i++) {
				String actualDate11=splitStringid11[splitStringid11.length-1]; 
				System.out.println("actualDate : " + actualDate11);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate11);
				break;
			}
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent11=driver.getWindowHandle();
			Set<String>s11=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I110= s11.iterator();
			while(I110.hasNext())
			{
				String child_window=I110.next();
				if(!parent11.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate101 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate101);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join11=null;
					String[] splitString11 = imageDate101.split(" ");
					for(int i=0;i<splitString11.length-2;i++) {
						String actualDate11=splitString11[i]; 
						join11= splitString11[i+1]+" "+ splitString11[i]+" " + splitString11[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join11);
					}
					Assert.assertEquals(imageDate11, imageDate101);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);

					String join2011=null;
					String[] splitString2011 = imageDate21.split(" ");
					for(int i=0;i<splitString2011.length-2;i++) {
						String actualDate2011=splitString2011[i]; 
						join2011= splitString2011[i+1]+" "+ splitString2011[i]+" " + splitString2011[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2011);
					}
					Assert.assertEquals(lastimageDate11, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate11+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate11+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate11);
			driver.switchTo().window(parent11);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -12 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("12 Ads image");

			helper.Scrollintoview(date12);
			helper.highLightElement(driver, date12);
			String imageDate12=date12.getText();
			System.out.println("First Image Date is :"+imageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate12); 

			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12);

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);

			String linkText12 = ShowAnalytics12.getAttribute("href");
			String idString12 = null;
			String[] splitStringid12 = linkText12.split("/");
			for(int i=0;i<splitStringid12.length;i++) {
				String actualDate12=splitStringid12[splitStringid12.length-1]; 
				System.out.println("actualDate : " + actualDate12);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate12);
				break;
			}

			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent12=driver.getWindowHandle();
			Set<String>s12=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I112= s12.iterator();
			while(I112.hasNext())
			{
				String child_window=I112.next();
				if(!parent12.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate112 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate112);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join12=null;
					String[] splitString12 = imageDate112.split(" ");
					for(int i=0;i<splitString12.length-2;i++) {
						String actualDate12=splitString12[i]; 
						join12= splitString12[i+1]+" "+ splitString12[i]+" " + splitString12[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join12);
					}
					Assert.assertEquals(imageDate12, imageDate112);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate12+"="+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate12+"="+join12);

					String join2012=null;
					String[] splitString2012 = imageDate21.split(" ");
					for(int i=0;i<splitString2012.length-2;i++) {
						String actualDate2012=splitString2012[i]; 
						join2012= splitString2012[i+1]+" "+ splitString2012[i]+" " + splitString2012[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2012);
					}
					Assert.assertEquals(lastimageDate12, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate12+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate12+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate12);
			driver.switchTo().window(parent12);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("13 Ads image");

			helper.Scrollintoview(date13);
			helper.highLightElement(driver, date13);
			String imageDate13=date13.getText();
			System.out.println("First Image Date is :"+imageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate13); 

			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13);

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);

			String linkText13 = ShowAnalytics13.getAttribute("href");
			String idString13 = null;
			String[] splitStringid13 = linkText13.split("/");
			for(int i=0;i<splitStringid13.length;i++) {
				String actualDate13=splitStringid13[splitStringid13.length-1]; 
				System.out.println("actualDate : " + actualDate13);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate13);
				break;
			}

			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent13=driver.getWindowHandle();
			Set<String>s13=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I13= s13.iterator();
			while(I13.hasNext())
			{
				String child_window=I13.next();
				if(!parent13.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate113 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate113);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join13=null;
					String[] splitString13 = imageDate113.split(" ");
					for(int i=0;i<splitString13.length-2;i++) {
						String actualDate13=splitString13[i]; 
						join13= splitString13[i+1]+" "+ splitString13[i]+" " + splitString13[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join13);
					}
					Assert.assertEquals(imageDate13, imageDate113);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);

					String join2013=null;
					String[] splitString2013 = imageDate21.split(" ");
					for(int i=0;i<splitString2013.length-2;i++) {
						String actualDate2013=splitString2013[i]; 
						join2013= splitString2013[i+1]+" "+ splitString2013[i]+" " + splitString2013[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2013);
					}
					Assert.assertEquals(lastimageDate13, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate13+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate13+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate13);
			driver.switchTo().window(parent13);
		} catch (Exception e) {

			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("14 Ads image");

			helper.Scrollintoview(date14);
			helper.highLightElement(driver, date14);
			String imageDate14=date14.getText();
			System.out.println("First Image Date is :"+imageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate14); 

			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14);

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);

			String linkText14 = ShowAnalytics14.getAttribute("href");
			String idString14 = null;
			String[] splitStringid14 = linkText14.split("/");
			for(int i=0;i<splitStringid14.length;i++) {
				String actualDate14=splitStringid14[splitStringid14.length-1]; 
				System.out.println("actualDate : " + actualDate14);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate14);
				break;
			}

			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent14=driver.getWindowHandle();
			Set<String>s14=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I14= s14.iterator();
			while(I14.hasNext())
			{
				String child_window=I14.next();
				if(!parent14.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate114 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate114);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join14=null;
					String[] splitString14 = imageDate114.split(" ");
					for(int i=0;i<splitString14.length-2;i++) {
						String actualDate14=splitString14[i]; 
						join14= splitString14[i+1]+" "+ splitString14[i]+" " + splitString14[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join14);
					}
					Assert.assertEquals(imageDate14, imageDate114);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);

					String join2014=null;
					String[] splitString2014 = imageDate21.split(" ");
					for(int i=0;i<splitString2014.length-2;i++) {
						String actualDate2014=splitString2014[i]; 
						join2014= splitString2014[i+1]+" "+ splitString2014[i]+" " + splitString2014[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2014);
					}
					Assert.assertEquals(lastimageDate14, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate14+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate14+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate14);
			driver.switchTo().window(parent14);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("Second Ads image");

			helper.Scrollintoview(date15);
			helper.highLightElement(driver, date15);
			String imageDate15=date15.getText();
			System.out.println("First Image Date is :"+imageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate15); 

			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15);

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);

			String linkText15 = ShowAnalytics15.getAttribute("href");
			String idString15 = null;
			String[] splitStringid15 = linkText15.split("/");
			for(int i=0;i<splitStringid15.length;i++) {
				String actualDate15=splitStringid15[splitStringid15.length-1]; 
				System.out.println("actualDate : " + actualDate15);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate15);
				break;
			}
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent15=driver.getWindowHandle();
			Set<String>s15=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I15= s15.iterator();
			while(I15.hasNext())
			{
				String child_window=I15.next();
				if(!parent15.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate115 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate115);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join15=null;
					String[] splitString15 = imageDate115.split(" ");
					for(int i=0;i<splitString15.length-2;i++) {
						String actualDate15=splitString15[i]; 
						join15= splitString15[i+1]+" "+ splitString15[i]+" " + splitString15[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join15);
					}
					Assert.assertEquals(imageDate15, imageDate115);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);

					String join2015=null;
					String[] splitString2015 = imageDate21.split(" ");
					for(int i=0;i<splitString2015.length-2;i++) {
						String actualDate2015=splitString2015[i]; 
						join2015= splitString2015[i+1]+" "+ splitString2015[i]+" " + splitString2015[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2015);
					}
					Assert.assertEquals(lastimageDate15, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate15+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate15+"="+imageDate21);

					driver.close();
				}
			}

			System.out.println("Current Image Date: "+imageDate15);
			driver.switchTo().window(parent15);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


	}

	public void AdSeenBetween_Last_Seven_Days() throws InterruptedException
	{

		helper.waitForPageToLoad();
		Reporter.log("  ");
		System.out.println("  ");
		Reporter.log("<B><font color = 'green'>  - ShortBy Newest -Ad Seen Between Last Seven Days Step will Start from here </font> ");
		helper.waitFor(adSeenbetweenfilter);
		helper.highLightElement(driver, adSeenbetweenfilter);
		helper.jsScrollintoview(adSeenbetweenfilter);
		adSeenbetweenfilter.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Ad Seen between filter Icon");

		helper.waitFor(adSeenbetween_last_Seven_Days);
		helper.highLightElement(driver, adSeenbetween_last_Seven_Days);
		helper.jsScrollintoview(adSeenbetween_last_Seven_Days);
		adSeenbetween_last_Seven_Days.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On Ad Seen Between Last Seven Days Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step4 -</font>  Total Ad Count is :"+ totaladscount);



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -1 Ad- -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			helper.Scrollintoview(date1);
			helper.highLightElement(driver, date1);
			String imageDate=date1.getText();
			System.out.println("First Image Date is :"+imageDate);
			System.out.println("Current Image Date: "+imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate); 

			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);

			String linkText1 = ShowAnalytics1.getAttribute("href");
			String idString1 = null;
			String[] splitStringid1 = linkText1.split("/");
			for(int i=0;i<splitStringid1.length;i++) {
				String actualDate1=splitStringid1[splitStringid1.length-1]; 
				System.out.println("actualDate : " + actualDate1);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate1);
				break;
			}

			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1= s.iterator();
			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					Thread.sleep(2000);
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate1 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1);
					helper.Scrollintoview(lastSeen);
					String imageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate2);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join=null;
					String[] splitString = imageDate1.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						join= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join);
					}
					Assert.assertEquals(imageDate, imageDate1);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate+"="+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching First Seen  Date Assert Pass :"+imageDate+"="+imageDate1);


					String join201=null;
					String[] splitString201 = imageDate2.split(" ");
					for(int i=0;i<splitString201.length-2;i++) {
						String actualDate201=splitString201[i]; 
						join201= splitString201[i+1]+" "+ splitString201[i]+" " + splitString201[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join201);
					}
					Assert.assertEquals(lastimageDate1, imageDate2);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate1+"="+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate1+"="+imageDate2);

					driver.close();
				}
			}

			driver.switchTo().window(parent);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -2 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("2 Ads image");

			helper.Scrollintoview(date2);
			helper.highLightElement(driver, date2);
			String imageDate2=date2.getText();
			System.out.println("First Image Date is :"+imageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate2); 

			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2);

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);

			String linkText2 = ShowAnalytics2.getAttribute("href");
			String idString2 = null;
			String[] splitStringid2 = linkText2.split("/");
			for(int i=0;i<splitStringid2.length;i++) {
				String actualDate2=splitStringid2[splitStringid2.length-1]; 
				System.out.println("actualDate : " + actualDate2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate2);
				break;
			}
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent1=driver.getWindowHandle();
			Set<String>s1=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I11= s1.iterator();
			while(I11.hasNext())
			{
				String child_window=I11.next();
				if(!parent1.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					Thread.sleep(2000);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join2=null;
					String[] splitString2 = imageDate11.split(" ");
					for(int i=0;i<splitString2.length-2;i++) {
						String actualDate2=splitString2[i]; 
						join2= splitString2[i+1]+" "+ splitString2[i]+" " + splitString2[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2);
					}
					Assert.assertEquals(imageDate2, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);

					String join202=null;
					String[] splitString202 = imageDate21.split(" ");
					for(int i=0;i<splitString202.length-2;i++) {
						String actualDate202=splitString202[i]; 
						join202= splitString202[i+1]+" "+ splitString202[i]+" " + splitString202[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join202);
					}
					Assert.assertEquals(lastimageDate2, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate2+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate2+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate2);
			driver.switchTo().window(parent1);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -3 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("3 Ads image");

			helper.Scrollintoview(date3);
			helper.highLightElement(driver, date3);
			String imageDate3=date3.getText();
			System.out.println("First Image Date is :"+imageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate3); 

			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3);

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);

			String linkText3 = ShowAnalytics3.getAttribute("href");
			String idString3 = null;
			String[] splitStringid3 = linkText3.split("/");
			for(int i=0;i<splitStringid3.length;i++) {
				String actualDate3=splitStringid3[splitStringid3.length-1]; 
				System.out.println("actualDate : " + actualDate3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate3);
				break;
			}
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent121=driver.getWindowHandle();
			Set<String>s121=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I111= s121.iterator();
			while(I111.hasNext())
			{
				String child_window=I111.next();
				if(!parent121.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join3=null;
					String[] splitString3 = imageDate111.split(" ");
					for(int i=0;i<splitString3.length-2;i++) {
						String actualDate3=splitString3[i]; 
						join3= splitString3[i+1]+" "+ splitString3[i]+" " + splitString3[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join3);
					}

					Assert.assertEquals(imageDate3,imageDate111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);

					String join203=null;
					String[] splitString203 = imageDate21.split(" ");
					for(int i=0;i<splitString203.length-2;i++) {
						String actualDate203=splitString203[i]; 
						join203= splitString203[i+1]+" "+ splitString203[i]+" " + splitString203[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join203);
					}
					Assert.assertEquals(lastimageDate3, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate3+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate3+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate3);
			driver.switchTo().window(parent121);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}	


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -4 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("4 Ads image");
			helper.Scrollintoview(date4);
			helper.highLightElement(driver, date4);
			String imageDate4=date4.getText();
			System.out.println("First Image Date is :"+imageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate4); 

			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4);

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);

			String linkText4 = ShowAnalytics4.getAttribute("href");
			String idString4 = null;
			String[] splitStringid4 = linkText4.split("/");
			for(int i=0;i<splitStringid4.length;i++) {
				String actualDate4=splitStringid4[splitStringid4.length-1]; 
				System.out.println("actualDate : " + actualDate4);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate4);
				break;
			}

			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent111=driver.getWindowHandle();
			Set<String>s111=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1111= s111.iterator();
			while(I1111.hasNext())
			{
				String child_window=I1111.next();
				if(!parent111.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate1111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join4=null;
					String[] splitString4 = imageDate1111.split(" ");
					for(int i=0;i<splitString4.length-2;i++) {
						String actualDate4=splitString4[i]; 
						join4= splitString4[i+1]+" "+ splitString4[i]+" " + splitString4[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join4);
					}
					Assert.assertEquals(imageDate4, imageDate1111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);

					String join204=null;
					String[] splitString204 = imageDate21.split(" ");
					for(int i=0;i<splitString204.length-2;i++) {
						String actualDate204=splitString204[i]; 
						join204= splitString204[i+1]+" "+ splitString204[i]+" " + splitString204[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join204);
					}
					Assert.assertEquals(lastimageDate4, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate4+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate4+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate4);
			driver.switchTo().window(parent111);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -5 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("5 Ads image");
			helper.Scrollintoview(date5);
			helper.highLightElement(driver, date5);
			String imageDate5=date5.getText();
			System.out.println("First Image Date is :"+imageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate5); 

			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5);

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);

			String linkText5 = ShowAnalytics5.getAttribute("href");
			String idString5 = null;
			String[] splitStringid5 = linkText5.split("/");
			for(int i=0;i<splitStringid5.length;i++) {
				String actualDate5=splitStringid5[splitStringid5.length-1]; 
				System.out.println("actualDate : " + actualDate5);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate5);
				break;
			}

			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent5=driver.getWindowHandle();
			Set<String>s5=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I5= s5.iterator();
			while(I5.hasNext())
			{
				String child_window=I5.next();
				if(!parent5.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate6 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate6);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join5=null;
					String[] splitString5 = imageDate6.split(" ");
					for(int i=0;i<splitString5.length-2;i++) {
						String actualDate5=splitString5[i]; 
						join5= splitString5[i+1]+" "+ splitString5[i]+" " + splitString5[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join5);
					}
					Assert.assertEquals(imageDate5, imageDate6);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);

					String join205=null;
					String[] splitString205 = imageDate21.split(" ");
					for(int i=0;i<splitString205.length-2;i++) {
						String actualDate205=splitString205[i]; 
						join205= splitString205[i+1]+" "+ splitString205[i]+" " + splitString205[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join205);
					}
					Assert.assertEquals(lastimageDate5, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate5+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate5+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate5);
			driver.switchTo().window(parent5);
		} catch (Exception e) {
			// TODO: handle exception	
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("6 Ads image");
			helper.Scrollintoview(date6);
			helper.highLightElement(driver, date6);
			String imageDate6=date6.getText();
			System.out.println("First Image Date is :"+imageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate6); 

			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6);

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);

			String linkText6 = ShowAnalytics6.getAttribute("href");
			String idString6 = null;
			String[] splitStringid6 = linkText6.split("/");
			for(int i=0;i<splitStringid6.length;i++) {
				String actualDate6=splitStringid6[splitStringid6.length-1]; 
				System.out.println("actualDate : " + actualDate6);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate6);
				break;
			}

			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent6=driver.getWindowHandle();
			Set<String>s6=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I6= s6.iterator();
			while(I6.hasNext())
			{
				String child_window=I6.next();
				if(!parent6.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join6=null;
					String[] splitString6 = imageDate11.split(" ");
					for(int i=0;i<splitString6.length-2;i++) {
						String actualDate6=splitString6[i]; 
						join6= splitString6[i+1]+" "+ splitString6[i]+" " + splitString6[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join6);
					}
					Assert.assertEquals(imageDate6, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);

					String join206=null;
					String[] splitString206 = imageDate21.split(" ");
					for(int i=0;i<splitString206.length-2;i++) {
						String actualDate206=splitString206[i]; 
						join206= splitString206[i+1]+" "+ splitString206[i]+" " + splitString206[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join206);
					}
					Assert.assertEquals(lastimageDate6, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate6+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate6+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate6);
			driver.switchTo().window(parent6);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("7 Ads image");
			helper.Scrollintoview(date7);
			helper.highLightElement(driver, date7);
			String imageDate7=date7.getText();
			System.out.println("First Image Date is :"+imageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate7); 

			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7);

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);

			String linkText7 = ShowAnalytics7.getAttribute("href");
			String idString7 = null;
			String[] splitStringid7 = linkText7.split("/");
			for(int i=0;i<splitStringid7.length;i++) {
				String actualDate7=splitStringid7[splitStringid7.length-1]; 
				System.out.println("actualDate : " + actualDate7);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate7);
				break;
			}
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent17=driver.getWindowHandle();
			Set<String>s17=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I17= s17.iterator();
			while(I17.hasNext())
			{
				String child_window=I17.next();
				if(!parent17.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join7=null;
					String[] splitString7 = imageDate11.split(" ");
					for(int i=0;i<splitString7.length-2;i++) {
						String actualDate7=splitString7[i]; 
						join7= splitString7[i+1]+" "+ splitString7[i]+" " + splitString7[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join7);
					}
					Assert.assertEquals(imageDate7, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);

					String join207=null;
					String[] splitString207 = imageDate21.split(" ");
					for(int i=0;i<splitString207.length-2;i++) {
						String actualDate207=splitString207[i]; 
						join207= splitString207[i+1]+" "+ splitString207[i]+" " + splitString207[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join207);
					}
					Assert.assertEquals(lastimageDate7, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate7+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate7+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate7);
			driver.switchTo().window(parent17);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -8 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("8 Ads image");
			helper.Scrollintoview(date8);
			helper.highLightElement(driver, date8);
			String imageDate8=date8.getText();
			System.out.println("First Image Date is :"+imageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate8); 

			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8);

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);

			String linkText8 = ShowAnalytics8.getAttribute("href");
			String idString8 = null;
			String[] splitStringid8 = linkText8.split("/");
			for(int i=0;i<splitStringid8.length;i++) {
				String actualDate8=splitStringid8[splitStringid8.length-1]; 
				System.out.println("actualDate : " + actualDate8);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate8);
				break;
			}

			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent8=driver.getWindowHandle();
			Set<String>s8=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I8= s8.iterator();
			while(I8.hasNext())
			{
				String child_window=I8.next();
				if(!parent8.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join8=null;
					String[] splitString8 = imageDate11.split(" ");
					for(int i=0;i<splitString8.length-2;i++) {
						String actualDate8=splitString8[i]; 
						join8= splitString8[i+1]+" "+ splitString8[i]+" " + splitString8[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join8);
					}
					Assert.assertEquals(imageDate8, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);

					String join208=null;
					String[] splitString208 = imageDate21.split(" ");
					for(int i=0;i<splitString208.length-2;i++) {
						String actualDate208=splitString208[i]; 
						join208= splitString208[i+1]+" "+ splitString208[i]+" " + splitString208[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join208);
					}
					Assert.assertEquals(lastimageDate8, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate8+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate8+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate8);
			driver.switchTo().window(parent8);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad- </font>  ");
			System.out.println(" ");
			System.out.println("9 Ads image");
			helper.Scrollintoview(date9);
			helper.highLightElement(driver, date9);
			String imageDate9=date9.getText();
			System.out.println("First Image Date is :"+imageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate9); 

			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9);

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);

			String linkText9 = ShowAnalytics9.getAttribute("href");
			String idString9 = null;
			String[] splitStringid9 = linkText9.split("/");
			for(int i=0;i<splitStringid9.length;i++) {
				String actualDate9=splitStringid9[splitStringid9.length-1]; 
				System.out.println("actualDate : " + actualDate9);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate9);
				break;
			}
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent9=driver.getWindowHandle();
			Set<String>s9=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I9=s9.iterator();
			while(I9.hasNext())
			{
				String child_window=I9.next();
				if(!parent9.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate19 = firstSeen.getText();

					System.out.println("Analytics Image First Seen Date: "+imageDate19);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join9=null;
					String[] splitString9 = imageDate19.split(" ");
					for(int i=0;i<splitString9.length-2;i++) {
						String actualDate9=splitString9[i]; 
						join9= splitString9[i+1]+" "+ splitString9[i]+" " + splitString9[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join9);
					}
					Assert.assertEquals(imageDate9, imageDate19);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);

					String join209=null;
					String[] splitString209 = imageDate21.split(" ");
					for(int i=0;i<splitString209.length-2;i++) {
						String actualDate209=splitString209[i]; 
						join209= splitString209[i+1]+" "+ splitString209[i]+" " + splitString209[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join209);
					}
					Assert.assertEquals(lastimageDate9, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate9+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate9+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate9);
			driver.switchTo().window(parent9);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -10 Ad</font>  ");
			System.out.println(" ");
			System.out.println("10 Ads image");

			helper.Scrollintoview(date10);
			helper.highLightElement(driver, date10);
			String imageDate10=date10.getText();
			System.out.println("First Image Date is :"+imageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate10); 

			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10);

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);

			String linkText10 = ShowAnalytics10.getAttribute("href");
			String idString10 = null;
			String[] splitStringid10 = linkText10.split("/");
			for(int i=0;i<splitStringid10.length;i++) {
				String actualDate10=splitStringid10[splitStringid10.length-1]; 
				System.out.println("actualDate : " + actualDate10);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate10);
				break;
			}
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent10=driver.getWindowHandle();
			Set<String>s10=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I10= s10.iterator();
			while(I10.hasNext())
			{
				String child_window=I10.next();
				if(!parent10.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join10=null;
					String[] splitString10 = imageDate11.split(" ");
					for(int i=0;i<splitString10.length-2;i++) {
						String actualDate10=splitString10[i]; 
						join10= splitString10[i+1]+" "+ splitString10[i]+" " + splitString10[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join10);
					}
					Assert.assertEquals(imageDate10, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);

					String join2010=null;
					String[] splitString2010 = imageDate21.split(" ");
					for(int i=0;i<splitString2010.length-2;i++) {
						String actualDate2010=splitString2010[i]; 
						join2010= splitString2010[i+1]+" "+ splitString2010[i]+" " + splitString2010[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2010);
					}
					Assert.assertEquals(lastimageDate10, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate10+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate10+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate10);
			driver.switchTo().window(parent10);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -11 Ad </font>  ");
			System.out.println(" ");
			System.out.println("11 Ads image");

			helper.Scrollintoview(date11);
			helper.highLightElement(driver, date11);
			String imageDate11=date11.getText();
			System.out.println("First Image Date is :"+imageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate11); 

			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11);

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);

			String linkText11 = ShowAnalytics11.getAttribute("href");
			String idString11 = null;
			String[] splitStringid11 = linkText11.split("/");
			for(int i=0;i<splitStringid11.length;i++) {
				String actualDate11=splitStringid11[splitStringid11.length-1]; 
				System.out.println("actualDate : " + actualDate11);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate11);
				break;
			}
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent11=driver.getWindowHandle();
			Set<String>s11=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I110= s11.iterator();
			while(I110.hasNext())
			{
				String child_window=I110.next();
				if(!parent11.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate101 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate101);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join11=null;
					String[] splitString11 = imageDate101.split(" ");
					for(int i=0;i<splitString11.length-2;i++) {
						String actualDate11=splitString11[i]; 
						join11= splitString11[i+1]+" "+ splitString11[i]+" " + splitString11[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join11);
					}
					Assert.assertEquals(imageDate11, imageDate101);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);

					String join2011=null;
					String[] splitString2011 = imageDate21.split(" ");
					for(int i=0;i<splitString2011.length-2;i++) {
						String actualDate2011=splitString2011[i]; 
						join2011= splitString2011[i+1]+" "+ splitString2011[i]+" " + splitString2011[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2011);
					}
					Assert.assertEquals(lastimageDate11, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate11+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate11+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate11);
			driver.switchTo().window(parent11);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -12 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("12 Ads image");

			helper.Scrollintoview(date12);
			helper.highLightElement(driver, date12);
			String imageDate12=date12.getText();
			System.out.println("First Image Date is :"+imageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate12); 

			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12);

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);

			String linkText12 = ShowAnalytics12.getAttribute("href");
			String idString12 = null;
			String[] splitStringid12 = linkText12.split("/");
			for(int i=0;i<splitStringid12.length;i++) {
				String actualDate12=splitStringid12[splitStringid12.length-1]; 
				System.out.println("actualDate : " + actualDate12);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate12);
				break;
			}

			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent12=driver.getWindowHandle();
			Set<String>s12=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I112= s12.iterator();
			while(I112.hasNext())
			{
				String child_window=I112.next();
				if(!parent12.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate112 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate112);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join12=null;
					String[] splitString12 = imageDate112.split(" ");
					for(int i=0;i<splitString12.length-2;i++) {
						String actualDate12=splitString12[i]; 
						join12= splitString12[i+1]+" "+ splitString12[i]+" " + splitString12[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join12);
					}
					Assert.assertEquals(imageDate12, imageDate112);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate12+"="+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate12+"="+join12);

					String join2012=null;
					String[] splitString2012 = imageDate21.split(" ");
					for(int i=0;i<splitString2012.length-2;i++) {
						String actualDate2012=splitString2012[i]; 
						join2012= splitString2012[i+1]+" "+ splitString2012[i]+" " + splitString2012[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2012);
					}
					Assert.assertEquals(lastimageDate12, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate12+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate12+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate12);
			driver.switchTo().window(parent12);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("13 Ads image");

			helper.Scrollintoview(date13);
			helper.highLightElement(driver, date13);
			String imageDate13=date13.getText();
			System.out.println("First Image Date is :"+imageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate13); 

			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13);

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);

			String linkText13 = ShowAnalytics13.getAttribute("href");
			String idString13 = null;
			String[] splitStringid13 = linkText13.split("/");
			for(int i=0;i<splitStringid13.length;i++) {
				String actualDate13=splitStringid13[splitStringid13.length-1]; 
				System.out.println("actualDate : " + actualDate13);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate13);
				break;
			}

			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent13=driver.getWindowHandle();
			Set<String>s13=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I13= s13.iterator();
			while(I13.hasNext())
			{
				String child_window=I13.next();
				if(!parent13.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate113 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate113);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join13=null;
					String[] splitString13 = imageDate113.split(" ");
					for(int i=0;i<splitString13.length-2;i++) {
						String actualDate13=splitString13[i]; 
						join13= splitString13[i+1]+" "+ splitString13[i]+" " + splitString13[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join13);
					}
					Assert.assertEquals(imageDate13, imageDate113);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);

					String join2013=null;
					String[] splitString2013 = imageDate21.split(" ");
					for(int i=0;i<splitString2013.length-2;i++) {
						String actualDate2013=splitString2013[i]; 
						join2013= splitString2013[i+1]+" "+ splitString2013[i]+" " + splitString2013[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2013);
					}
					Assert.assertEquals(lastimageDate13, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate13+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate13+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate13);
			driver.switchTo().window(parent13);
		} catch (Exception e) {

			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("14 Ads image");

			helper.Scrollintoview(date14);
			helper.highLightElement(driver, date14);
			String imageDate14=date14.getText();
			System.out.println("First Image Date is :"+imageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate14); 

			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14);

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);

			String linkText14 = ShowAnalytics14.getAttribute("href");
			String idString14 = null;
			String[] splitStringid14 = linkText14.split("/");
			for(int i=0;i<splitStringid14.length;i++) {
				String actualDate14=splitStringid14[splitStringid14.length-1]; 
				System.out.println("actualDate : " + actualDate14);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate14);
				break;
			}

			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent14=driver.getWindowHandle();
			Set<String>s14=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I14= s14.iterator();
			while(I14.hasNext())
			{
				String child_window=I14.next();
				if(!parent14.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate114 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate114);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join14=null;
					String[] splitString14 = imageDate114.split(" ");
					for(int i=0;i<splitString14.length-2;i++) {
						String actualDate14=splitString14[i]; 
						join14= splitString14[i+1]+" "+ splitString14[i]+" " + splitString14[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join14);
					}
					Assert.assertEquals(imageDate14, imageDate114);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);

					String join2014=null;
					String[] splitString2014 = imageDate21.split(" ");
					for(int i=0;i<splitString2014.length-2;i++) {
						String actualDate2014=splitString2014[i]; 
						join2014= splitString2014[i+1]+" "+ splitString2014[i]+" " + splitString2014[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2014);
					}
					Assert.assertEquals(lastimageDate14, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate14+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate14+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate14);
			driver.switchTo().window(parent14);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("Second Ads image");

			helper.Scrollintoview(date15);
			helper.highLightElement(driver, date15);
			String imageDate15=date15.getText();
			System.out.println("First Image Date is :"+imageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate15); 

			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15);

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);

			String linkText15 = ShowAnalytics15.getAttribute("href");
			String idString15 = null;
			String[] splitStringid15 = linkText15.split("/");
			for(int i=0;i<splitStringid15.length;i++) {
				String actualDate15=splitStringid15[splitStringid15.length-1]; 
				System.out.println("actualDate : " + actualDate15);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate15);
				break;
			}
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent15=driver.getWindowHandle();
			Set<String>s15=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I15= s15.iterator();
			while(I15.hasNext())
			{
				String child_window=I15.next();
				if(!parent15.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate115 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate115);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join15=null;
					String[] splitString15 = imageDate115.split(" ");
					for(int i=0;i<splitString15.length-2;i++) {
						String actualDate15=splitString15[i]; 
						join15= splitString15[i+1]+" "+ splitString15[i]+" " + splitString15[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join15);
					}
					Assert.assertEquals(imageDate15, imageDate115);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);

					String join2015=null;
					String[] splitString2015 = imageDate21.split(" ");
					for(int i=0;i<splitString2015.length-2;i++) {
						String actualDate2015=splitString2015[i]; 
						join2015= splitString2015[i+1]+" "+ splitString2015[i]+" " + splitString2015[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2015);
					}
					Assert.assertEquals(lastimageDate15, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate15+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate15+"="+imageDate21);

					driver.close();
				}
			}

			System.out.println("Current Image Date: "+imageDate15);
			driver.switchTo().window(parent15);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

	}	






	public void AdSeenBetween_Last_Thirty_Days() throws InterruptedException 
	{

		System.out.println();
		Reporter.log("      ");
		System.out.println("-ShortBy Newest -Ad Seen Between Last Thirty Days:");

		helper.waitForPageToLoad();
		Reporter.log("<B><font color = 'green'> - ShortBy Newest -Ad Seen Between Last Thirty Days Step will Start from here </font> "); 

		helper.waitFor(adSeenbetweenfilter); 
		helper.highLightElement(driver,adSeenbetweenfilter); 
		helper.jsScrollintoview(adSeenbetweenfilter);
		adSeenbetweenfilter.click(); 
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Ad Seen between filter Icon");

		helper.waitFor(adSeenBetween_last_Thirty_days);
		helper.highLightElement(driver, adSeenBetween_last_Thirty_days);
		helper.jsScrollintoview(adSeenBetween_last_Thirty_days);
		adSeenBetween_last_Thirty_days.click();
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On Ad Seen Between Last Thirty Days Icon");

		helper.waitFor(searchButton); 
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton); 
		searchButton.click(); 
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Clicked On Search Button Icon"); 
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step7 -</font>  Total Ad Count is :"+ totaladscount); 

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -1 Ad- -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			helper.Scrollintoview(date1);
			helper.highLightElement(driver, date1);
			String imageDate=date1.getText();
			System.out.println("First Image Date is :"+imageDate);
			System.out.println("Current Image Date: "+imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate); 

			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);

			String linkText1 = ShowAnalytics1.getAttribute("href");
			String idString1 = null;
			String[] splitStringid1 = linkText1.split("/");
			for(int i=0;i<splitStringid1.length;i++) {
				String actualDate1=splitStringid1[splitStringid1.length-1]; 
				System.out.println("actualDate : " + actualDate1);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate1);
				break;
			}

			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1= s.iterator();
			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					Thread.sleep(2000);
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate1 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1);
					helper.Scrollintoview(lastSeen);
					String imageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate2);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join=null;
					String[] splitString = imageDate1.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						join= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join);
					}
					Assert.assertEquals(imageDate, imageDate1);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate+"="+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching First Seen  Date Assert Pass :"+imageDate+"="+imageDate1);


					String join201=null;
					String[] splitString201 = imageDate2.split(" ");
					for(int i=0;i<splitString201.length-2;i++) {
						String actualDate201=splitString201[i]; 
						join201= splitString201[i+1]+" "+ splitString201[i]+" " + splitString201[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join201);
					}
					Assert.assertEquals(lastimageDate1, imageDate2);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate1+"="+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate1+"="+imageDate2);

					driver.close();
				}
			}

			driver.switchTo().window(parent);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -2 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("2 Ads image");

			helper.Scrollintoview(date2);
			helper.highLightElement(driver, date2);
			String imageDate2=date2.getText();
			System.out.println("First Image Date is :"+imageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate2); 

			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2);

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);

			String linkText2 = ShowAnalytics2.getAttribute("href");
			String idString2 = null;
			String[] splitStringid2 = linkText2.split("/");
			for(int i=0;i<splitStringid2.length;i++) {
				String actualDate2=splitStringid2[splitStringid2.length-1]; 
				System.out.println("actualDate : " + actualDate2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate2);
				break;
			}
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent1=driver.getWindowHandle();
			Set<String>s1=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I11= s1.iterator();
			while(I11.hasNext())
			{
				String child_window=I11.next();
				if(!parent1.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					Thread.sleep(2000);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join2=null;
					String[] splitString2 = imageDate11.split(" ");
					for(int i=0;i<splitString2.length-2;i++) {
						String actualDate2=splitString2[i]; 
						join2= splitString2[i+1]+" "+ splitString2[i]+" " + splitString2[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2);
					}
					Assert.assertEquals(imageDate2, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);

					String join202=null;
					String[] splitString202 = imageDate21.split(" ");
					for(int i=0;i<splitString202.length-2;i++) {
						String actualDate202=splitString202[i]; 
						join202= splitString202[i+1]+" "+ splitString202[i]+" " + splitString202[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join202);
					}
					Assert.assertEquals(lastimageDate2, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate2+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate2+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate2);
			driver.switchTo().window(parent1);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -3 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("3 Ads image");

			helper.Scrollintoview(date3);
			helper.highLightElement(driver, date3);
			String imageDate3=date3.getText();
			System.out.println("First Image Date is :"+imageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate3); 

			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3);

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);

			String linkText3 = ShowAnalytics3.getAttribute("href");
			String idString3 = null;
			String[] splitStringid3 = linkText3.split("/");
			for(int i=0;i<splitStringid3.length;i++) {
				String actualDate3=splitStringid3[splitStringid3.length-1]; 
				System.out.println("actualDate : " + actualDate3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate3);
				break;
			}
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent121=driver.getWindowHandle();
			Set<String>s121=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I111= s121.iterator();
			while(I111.hasNext())
			{
				String child_window=I111.next();
				if(!parent121.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join3=null;
					String[] splitString3 = imageDate111.split(" ");
					for(int i=0;i<splitString3.length-2;i++) {
						String actualDate3=splitString3[i]; 
						join3= splitString3[i+1]+" "+ splitString3[i]+" " + splitString3[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join3);
					}

					Assert.assertEquals(imageDate3,imageDate111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);

					String join203=null;
					String[] splitString203 = imageDate21.split(" ");
					for(int i=0;i<splitString203.length-2;i++) {
						String actualDate203=splitString203[i]; 
						join203= splitString203[i+1]+" "+ splitString203[i]+" " + splitString203[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join203);
					}
					Assert.assertEquals(lastimageDate3, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate3+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate3+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate3);
			driver.switchTo().window(parent121);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}	


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -4 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("4 Ads image");
			helper.Scrollintoview(date4);
			helper.highLightElement(driver, date4);
			String imageDate4=date4.getText();
			System.out.println("First Image Date is :"+imageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate4); 

			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4);

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);

			String linkText4 = ShowAnalytics4.getAttribute("href");
			String idString4 = null;
			String[] splitStringid4 = linkText4.split("/");
			for(int i=0;i<splitStringid4.length;i++) {
				String actualDate4=splitStringid4[splitStringid4.length-1]; 
				System.out.println("actualDate : " + actualDate4);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate4);
				break;
			}

			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent111=driver.getWindowHandle();
			Set<String>s111=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1111= s111.iterator();
			while(I1111.hasNext())
			{
				String child_window=I1111.next();
				if(!parent111.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate1111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join4=null;
					String[] splitString4 = imageDate1111.split(" ");
					for(int i=0;i<splitString4.length-2;i++) {
						String actualDate4=splitString4[i]; 
						join4= splitString4[i+1]+" "+ splitString4[i]+" " + splitString4[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join4);
					}
					Assert.assertEquals(imageDate4, imageDate1111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);

					String join204=null;
					String[] splitString204 = imageDate21.split(" ");
					for(int i=0;i<splitString204.length-2;i++) {
						String actualDate204=splitString204[i]; 
						join204= splitString204[i+1]+" "+ splitString204[i]+" " + splitString204[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join204);
					}
					Assert.assertEquals(lastimageDate4, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate4+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate4+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate4);
			driver.switchTo().window(parent111);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -5 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("5 Ads image");
			helper.Scrollintoview(date5);
			helper.highLightElement(driver, date5);
			String imageDate5=date5.getText();
			System.out.println("First Image Date is :"+imageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate5); 

			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5);

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);

			String linkText5 = ShowAnalytics5.getAttribute("href");
			String idString5 = null;
			String[] splitStringid5 = linkText5.split("/");
			for(int i=0;i<splitStringid5.length;i++) {
				String actualDate5=splitStringid5[splitStringid5.length-1]; 
				System.out.println("actualDate : " + actualDate5);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate5);
				break;
			}

			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent5=driver.getWindowHandle();
			Set<String>s5=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I5= s5.iterator();
			while(I5.hasNext())
			{
				String child_window=I5.next();
				if(!parent5.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate6 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate6);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join5=null;
					String[] splitString5 = imageDate6.split(" ");
					for(int i=0;i<splitString5.length-2;i++) {
						String actualDate5=splitString5[i]; 
						join5= splitString5[i+1]+" "+ splitString5[i]+" " + splitString5[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join5);
					}
					Assert.assertEquals(imageDate5, imageDate6);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);

					String join205=null;
					String[] splitString205 = imageDate21.split(" ");
					for(int i=0;i<splitString205.length-2;i++) {
						String actualDate205=splitString205[i]; 
						join205= splitString205[i+1]+" "+ splitString205[i]+" " + splitString205[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join205);
					}
					Assert.assertEquals(lastimageDate5, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate5+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate5+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate5);
			driver.switchTo().window(parent5);
		} catch (Exception e) {
			// TODO: handle exception	
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("6 Ads image");
			helper.Scrollintoview(date6);
			helper.highLightElement(driver, date6);
			String imageDate6=date6.getText();
			System.out.println("First Image Date is :"+imageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate6); 

			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6);

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);

			String linkText6 = ShowAnalytics6.getAttribute("href");
			String idString6 = null;
			String[] splitStringid6 = linkText6.split("/");
			for(int i=0;i<splitStringid6.length;i++) {
				String actualDate6=splitStringid6[splitStringid6.length-1]; 
				System.out.println("actualDate : " + actualDate6);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate6);
				break;
			}

			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent6=driver.getWindowHandle();
			Set<String>s6=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I6= s6.iterator();
			while(I6.hasNext())
			{
				String child_window=I6.next();
				if(!parent6.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join6=null;
					String[] splitString6 = imageDate11.split(" ");
					for(int i=0;i<splitString6.length-2;i++) {
						String actualDate6=splitString6[i]; 
						join6= splitString6[i+1]+" "+ splitString6[i]+" " + splitString6[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join6);
					}
					Assert.assertEquals(imageDate6, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);

					String join206=null;
					String[] splitString206 = imageDate21.split(" ");
					for(int i=0;i<splitString206.length-2;i++) {
						String actualDate206=splitString206[i]; 
						join206= splitString206[i+1]+" "+ splitString206[i]+" " + splitString206[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join206);
					}
					Assert.assertEquals(lastimageDate6, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate6+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate6+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate6);
			driver.switchTo().window(parent6);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("7 Ads image");
			helper.Scrollintoview(date7);
			helper.highLightElement(driver, date7);
			String imageDate7=date7.getText();
			System.out.println("First Image Date is :"+imageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate7); 

			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7);

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);

			String linkText7 = ShowAnalytics7.getAttribute("href");
			String idString7 = null;
			String[] splitStringid7 = linkText7.split("/");
			for(int i=0;i<splitStringid7.length;i++) {
				String actualDate7=splitStringid7[splitStringid7.length-1]; 
				System.out.println("actualDate : " + actualDate7);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate7);
				break;
			}
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent17=driver.getWindowHandle();
			Set<String>s17=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I17= s17.iterator();
			while(I17.hasNext())
			{
				String child_window=I17.next();
				if(!parent17.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join7=null;
					String[] splitString7 = imageDate11.split(" ");
					for(int i=0;i<splitString7.length-2;i++) {
						String actualDate7=splitString7[i]; 
						join7= splitString7[i+1]+" "+ splitString7[i]+" " + splitString7[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join7);
					}
					Assert.assertEquals(imageDate7, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);

					String join207=null;
					String[] splitString207 = imageDate21.split(" ");
					for(int i=0;i<splitString207.length-2;i++) {
						String actualDate207=splitString207[i]; 
						join207= splitString207[i+1]+" "+ splitString207[i]+" " + splitString207[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join207);
					}
					Assert.assertEquals(lastimageDate7, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate7+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate7+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate7);
			driver.switchTo().window(parent17);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -8 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("8 Ads image");
			helper.Scrollintoview(date8);
			helper.highLightElement(driver, date8);
			String imageDate8=date8.getText();
			System.out.println("First Image Date is :"+imageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate8); 

			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8);

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);

			String linkText8 = ShowAnalytics8.getAttribute("href");
			String idString8 = null;
			String[] splitStringid8 = linkText8.split("/");
			for(int i=0;i<splitStringid8.length;i++) {
				String actualDate8=splitStringid8[splitStringid8.length-1]; 
				System.out.println("actualDate : " + actualDate8);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate8);
				break;
			}

			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent8=driver.getWindowHandle();
			Set<String>s8=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I8= s8.iterator();
			while(I8.hasNext())
			{
				String child_window=I8.next();
				if(!parent8.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join8=null;
					String[] splitString8 = imageDate11.split(" ");
					for(int i=0;i<splitString8.length-2;i++) {
						String actualDate8=splitString8[i]; 
						join8= splitString8[i+1]+" "+ splitString8[i]+" " + splitString8[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join8);
					}
					Assert.assertEquals(imageDate8, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);

					String join208=null;
					String[] splitString208 = imageDate21.split(" ");
					for(int i=0;i<splitString208.length-2;i++) {
						String actualDate208=splitString208[i]; 
						join208= splitString208[i+1]+" "+ splitString208[i]+" " + splitString208[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join208);
					}
					Assert.assertEquals(lastimageDate8, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate8+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate8+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate8);
			driver.switchTo().window(parent8);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad- </font>  ");
			System.out.println(" ");
			System.out.println("9 Ads image");
			helper.Scrollintoview(date9);
			helper.highLightElement(driver, date9);
			String imageDate9=date9.getText();
			System.out.println("First Image Date is :"+imageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate9); 

			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9);

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);

			String linkText9 = ShowAnalytics9.getAttribute("href");
			String idString9 = null;
			String[] splitStringid9 = linkText9.split("/");
			for(int i=0;i<splitStringid9.length;i++) {
				String actualDate9=splitStringid9[splitStringid9.length-1]; 
				System.out.println("actualDate : " + actualDate9);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate9);
				break;
			}
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent9=driver.getWindowHandle();
			Set<String>s9=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I9=s9.iterator();
			while(I9.hasNext())
			{
				String child_window=I9.next();
				if(!parent9.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate19 = firstSeen.getText();

					System.out.println("Analytics Image First Seen Date: "+imageDate19);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join9=null;
					String[] splitString9 = imageDate19.split(" ");
					for(int i=0;i<splitString9.length-2;i++) {
						String actualDate9=splitString9[i]; 
						join9= splitString9[i+1]+" "+ splitString9[i]+" " + splitString9[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join9);
					}
					Assert.assertEquals(imageDate9, imageDate19);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);

					String join209=null;
					String[] splitString209 = imageDate21.split(" ");
					for(int i=0;i<splitString209.length-2;i++) {
						String actualDate209=splitString209[i]; 
						join209= splitString209[i+1]+" "+ splitString209[i]+" " + splitString209[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join209);
					}
					Assert.assertEquals(lastimageDate9, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate9+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate9+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate9);
			driver.switchTo().window(parent9);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -10 Ad</font>  ");
			System.out.println(" ");
			System.out.println("10 Ads image");

			helper.Scrollintoview(date10);
			helper.highLightElement(driver, date10);
			String imageDate10=date10.getText();
			System.out.println("First Image Date is :"+imageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate10); 

			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10);

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);

			String linkText10 = ShowAnalytics10.getAttribute("href");
			String idString10 = null;
			String[] splitStringid10 = linkText10.split("/");
			for(int i=0;i<splitStringid10.length;i++) {
				String actualDate10=splitStringid10[splitStringid10.length-1]; 
				System.out.println("actualDate : " + actualDate10);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate10);
				break;
			}
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent10=driver.getWindowHandle();
			Set<String>s10=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I10= s10.iterator();
			while(I10.hasNext())
			{
				String child_window=I10.next();
				if(!parent10.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join10=null;
					String[] splitString10 = imageDate11.split(" ");
					for(int i=0;i<splitString10.length-2;i++) {
						String actualDate10=splitString10[i]; 
						join10= splitString10[i+1]+" "+ splitString10[i]+" " + splitString10[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join10);
					}
					Assert.assertEquals(imageDate10, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);

					String join2010=null;
					String[] splitString2010 = imageDate21.split(" ");
					for(int i=0;i<splitString2010.length-2;i++) {
						String actualDate2010=splitString2010[i]; 
						join2010= splitString2010[i+1]+" "+ splitString2010[i]+" " + splitString2010[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2010);
					}
					Assert.assertEquals(lastimageDate10, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate10+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate10+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate10);
			driver.switchTo().window(parent10);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -11 Ad </font>  ");
			System.out.println(" ");
			System.out.println("11 Ads image");

			helper.Scrollintoview(date11);
			helper.highLightElement(driver, date11);
			String imageDate11=date11.getText();
			System.out.println("First Image Date is :"+imageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate11); 

			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11);

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);

			String linkText11 = ShowAnalytics11.getAttribute("href");
			String idString11 = null;
			String[] splitStringid11 = linkText11.split("/");
			for(int i=0;i<splitStringid11.length;i++) {
				String actualDate11=splitStringid11[splitStringid11.length-1]; 
				System.out.println("actualDate : " + actualDate11);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate11);
				break;
			}
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent11=driver.getWindowHandle();
			Set<String>s11=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I110= s11.iterator();
			while(I110.hasNext())
			{
				String child_window=I110.next();
				if(!parent11.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate101 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate101);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join11=null;
					String[] splitString11 = imageDate101.split(" ");
					for(int i=0;i<splitString11.length-2;i++) {
						String actualDate11=splitString11[i]; 
						join11= splitString11[i+1]+" "+ splitString11[i]+" " + splitString11[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join11);
					}
					Assert.assertEquals(imageDate11, imageDate101);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);

					String join2011=null;
					String[] splitString2011 = imageDate21.split(" ");
					for(int i=0;i<splitString2011.length-2;i++) {
						String actualDate2011=splitString2011[i]; 
						join2011= splitString2011[i+1]+" "+ splitString2011[i]+" " + splitString2011[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2011);
					}
					Assert.assertEquals(lastimageDate11, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate11+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate11+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate11);
			driver.switchTo().window(parent11);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -12 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("12 Ads image");

			helper.Scrollintoview(date12);
			helper.highLightElement(driver, date12);
			String imageDate12=date12.getText();
			System.out.println("First Image Date is :"+imageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate12); 

			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12);

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);

			String linkText12 = ShowAnalytics12.getAttribute("href");
			String idString12 = null;
			String[] splitStringid12 = linkText12.split("/");
			for(int i=0;i<splitStringid12.length;i++) {
				String actualDate12=splitStringid12[splitStringid12.length-1]; 
				System.out.println("actualDate : " + actualDate12);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate12);
				break;
			}

			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent12=driver.getWindowHandle();
			Set<String>s12=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I112= s12.iterator();
			while(I112.hasNext())
			{
				String child_window=I112.next();
				if(!parent12.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate112 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate112);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join12=null;
					String[] splitString12 = imageDate112.split(" ");
					for(int i=0;i<splitString12.length-2;i++) {
						String actualDate12=splitString12[i]; 
						join12= splitString12[i+1]+" "+ splitString12[i]+" " + splitString12[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join12);
					}
					Assert.assertEquals(imageDate12, imageDate112);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate12+"="+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate12+"="+join12);

					String join2012=null;
					String[] splitString2012 = imageDate21.split(" ");
					for(int i=0;i<splitString2012.length-2;i++) {
						String actualDate2012=splitString2012[i]; 
						join2012= splitString2012[i+1]+" "+ splitString2012[i]+" " + splitString2012[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2012);
					}
					Assert.assertEquals(lastimageDate12, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate12+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate12+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate12);
			driver.switchTo().window(parent12);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("13 Ads image");

			helper.Scrollintoview(date13);
			helper.highLightElement(driver, date13);
			String imageDate13=date13.getText();
			System.out.println("First Image Date is :"+imageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate13); 

			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13);

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);

			String linkText13 = ShowAnalytics13.getAttribute("href");
			String idString13 = null;
			String[] splitStringid13 = linkText13.split("/");
			for(int i=0;i<splitStringid13.length;i++) {
				String actualDate13=splitStringid13[splitStringid13.length-1]; 
				System.out.println("actualDate : " + actualDate13);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate13);
				break;
			}

			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent13=driver.getWindowHandle();
			Set<String>s13=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I13= s13.iterator();
			while(I13.hasNext())
			{
				String child_window=I13.next();
				if(!parent13.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate113 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate113);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join13=null;
					String[] splitString13 = imageDate113.split(" ");
					for(int i=0;i<splitString13.length-2;i++) {
						String actualDate13=splitString13[i]; 
						join13= splitString13[i+1]+" "+ splitString13[i]+" " + splitString13[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join13);
					}
					Assert.assertEquals(imageDate13, imageDate113);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);

					String join2013=null;
					String[] splitString2013 = imageDate21.split(" ");
					for(int i=0;i<splitString2013.length-2;i++) {
						String actualDate2013=splitString2013[i]; 
						join2013= splitString2013[i+1]+" "+ splitString2013[i]+" " + splitString2013[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2013);
					}
					Assert.assertEquals(lastimageDate13, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate13+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate13+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate13);
			driver.switchTo().window(parent13);
		} catch (Exception e) {

			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("14 Ads image");

			helper.Scrollintoview(date14);
			helper.highLightElement(driver, date14);
			String imageDate14=date14.getText();
			System.out.println("First Image Date is :"+imageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate14); 

			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14);

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);

			String linkText14 = ShowAnalytics14.getAttribute("href");
			String idString14 = null;
			String[] splitStringid14 = linkText14.split("/");
			for(int i=0;i<splitStringid14.length;i++) {
				String actualDate14=splitStringid14[splitStringid14.length-1]; 
				System.out.println("actualDate : " + actualDate14);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate14);
				break;
			}

			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent14=driver.getWindowHandle();
			Set<String>s14=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I14= s14.iterator();
			while(I14.hasNext())
			{
				String child_window=I14.next();
				if(!parent14.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate114 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate114);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join14=null;
					String[] splitString14 = imageDate114.split(" ");
					for(int i=0;i<splitString14.length-2;i++) {
						String actualDate14=splitString14[i]; 
						join14= splitString14[i+1]+" "+ splitString14[i]+" " + splitString14[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join14);
					}
					Assert.assertEquals(imageDate14, imageDate114);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);

					String join2014=null;
					String[] splitString2014 = imageDate21.split(" ");
					for(int i=0;i<splitString2014.length-2;i++) {
						String actualDate2014=splitString2014[i]; 
						join2014= splitString2014[i+1]+" "+ splitString2014[i]+" " + splitString2014[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2014);
					}
					Assert.assertEquals(lastimageDate14, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate14+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate14+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate14);
			driver.switchTo().window(parent14);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("Second Ads image");

			helper.Scrollintoview(date15);
			helper.highLightElement(driver, date15);
			String imageDate15=date15.getText();
			System.out.println("First Image Date is :"+imageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate15); 

			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15);

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);

			String linkText15 = ShowAnalytics15.getAttribute("href");
			String idString15 = null;
			String[] splitStringid15 = linkText15.split("/");
			for(int i=0;i<splitStringid15.length;i++) {
				String actualDate15=splitStringid15[splitStringid15.length-1]; 
				System.out.println("actualDate : " + actualDate15);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate15);
				break;
			}
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent15=driver.getWindowHandle();
			Set<String>s15=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I15= s15.iterator();
			while(I15.hasNext())
			{
				String child_window=I15.next();
				if(!parent15.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate115 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate115);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join15=null;
					String[] splitString15 = imageDate115.split(" ");
					for(int i=0;i<splitString15.length-2;i++) {
						String actualDate15=splitString15[i]; 
						join15= splitString15[i+1]+" "+ splitString15[i]+" " + splitString15[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join15);
					}
					Assert.assertEquals(imageDate15, imageDate115);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);

					String join2015=null;
					String[] splitString2015 = imageDate21.split(" ");
					for(int i=0;i<splitString2015.length-2;i++) {
						String actualDate2015=splitString2015[i]; 
						join2015= splitString2015[i+1]+" "+ splitString2015[i]+" " + splitString2015[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2015);
					}
					Assert.assertEquals(lastimageDate15, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate15+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate15+"="+imageDate21);

					driver.close();
				}
			}

			System.out.println("Current Image Date: "+imageDate15);
			driver.switchTo().window(parent15);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
	}
	public void AdSeenBetween_This_Month() throws InterruptedException
	{

		System.out.println();
		Reporter.log("      ");
		System.out.println("-ShortBy Newest -Seen Between This Month:");

		helper.waitForPageToLoad();

		Reporter.log("<B><font color = 'green'>  -ShortBy Newest -Ad Seen Between This Month Step will Start from here </font> ");
		helper.waitFor(adSeenbetweenfilter);
		helper.highLightElement(driver, adSeenbetweenfilter);
		helper.jsScrollintoview(adSeenbetweenfilter);
		adSeenbetweenfilter.click();
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Ad Seen between filter Icon");

		helper.waitFor(adSeenBetween_this_month);
		helper.highLightElement(driver, adSeenBetween_this_month);
		helper.jsScrollintoview(adSeenBetween_this_month);
		adSeenBetween_this_month.click();
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On Ad Seen Between This Month Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step7 -</font>  Total Ad Count is :"+ totaladscount);


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -1 Ad- -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			helper.Scrollintoview(date1);
			helper.highLightElement(driver, date1);
			String imageDate=date1.getText();
			System.out.println("First Image Date is :"+imageDate);
			System.out.println("Current Image Date: "+imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate); 

			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);

			String linkText1 = ShowAnalytics1.getAttribute("href");
			String idString1 = null;
			String[] splitStringid1 = linkText1.split("/");
			for(int i=0;i<splitStringid1.length;i++) {
				String actualDate1=splitStringid1[splitStringid1.length-1]; 
				System.out.println("actualDate : " + actualDate1);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate1);
				break;
			}

			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1= s.iterator();
			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					Thread.sleep(2000);
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate1 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1);
					helper.Scrollintoview(lastSeen);
					String imageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate2);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join=null;
					String[] splitString = imageDate1.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						join= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join);
					}
					Assert.assertEquals(imageDate, imageDate1);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate+"="+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching First Seen  Date Assert Pass :"+imageDate+"="+imageDate1);


					String join201=null;
					String[] splitString201 = imageDate2.split(" ");
					for(int i=0;i<splitString201.length-2;i++) {
						String actualDate201=splitString201[i]; 
						join201= splitString201[i+1]+" "+ splitString201[i]+" " + splitString201[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join201);
					}
					Assert.assertEquals(lastimageDate1, imageDate2);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate1+"="+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate1+"="+imageDate2);

					driver.close();
				}
			}

			driver.switchTo().window(parent);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -2 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("2 Ads image");

			helper.Scrollintoview(date2);
			helper.highLightElement(driver, date2);
			String imageDate2=date2.getText();
			System.out.println("First Image Date is :"+imageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate2); 

			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2);

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);

			String linkText2 = ShowAnalytics2.getAttribute("href");
			String idString2 = null;
			String[] splitStringid2 = linkText2.split("/");
			for(int i=0;i<splitStringid2.length;i++) {
				String actualDate2=splitStringid2[splitStringid2.length-1]; 
				System.out.println("actualDate : " + actualDate2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate2);
				break;
			}
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent1=driver.getWindowHandle();
			Set<String>s1=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I11= s1.iterator();
			while(I11.hasNext())
			{
				String child_window=I11.next();
				if(!parent1.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					Thread.sleep(2000);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join2=null;
					String[] splitString2 = imageDate11.split(" ");
					for(int i=0;i<splitString2.length-2;i++) {
						String actualDate2=splitString2[i]; 
						join2= splitString2[i+1]+" "+ splitString2[i]+" " + splitString2[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2);
					}
					Assert.assertEquals(imageDate2, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);

					String join202=null;
					String[] splitString202 = imageDate21.split(" ");
					for(int i=0;i<splitString202.length-2;i++) {
						String actualDate202=splitString202[i]; 
						join202= splitString202[i+1]+" "+ splitString202[i]+" " + splitString202[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join202);
					}
					Assert.assertEquals(lastimageDate2, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate2+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate2+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate2);
			driver.switchTo().window(parent1);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -3 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("3 Ads image");

			helper.Scrollintoview(date3);
			helper.highLightElement(driver, date3);
			String imageDate3=date3.getText();
			System.out.println("First Image Date is :"+imageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate3); 

			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3);

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);

			String linkText3 = ShowAnalytics3.getAttribute("href");
			String idString3 = null;
			String[] splitStringid3 = linkText3.split("/");
			for(int i=0;i<splitStringid3.length;i++) {
				String actualDate3=splitStringid3[splitStringid3.length-1]; 
				System.out.println("actualDate : " + actualDate3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate3);
				break;
			}
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent121=driver.getWindowHandle();
			Set<String>s121=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I111= s121.iterator();
			while(I111.hasNext())
			{
				String child_window=I111.next();
				if(!parent121.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join3=null;
					String[] splitString3 = imageDate111.split(" ");
					for(int i=0;i<splitString3.length-2;i++) {
						String actualDate3=splitString3[i]; 
						join3= splitString3[i+1]+" "+ splitString3[i]+" " + splitString3[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join3);
					}

					Assert.assertEquals(imageDate3,imageDate111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);

					String join203=null;
					String[] splitString203 = imageDate21.split(" ");
					for(int i=0;i<splitString203.length-2;i++) {
						String actualDate203=splitString203[i]; 
						join203= splitString203[i+1]+" "+ splitString203[i]+" " + splitString203[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join203);
					}
					Assert.assertEquals(lastimageDate3, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate3+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate3+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate3);
			driver.switchTo().window(parent121);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}	


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -4 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("4 Ads image");
			helper.Scrollintoview(date4);
			helper.highLightElement(driver, date4);
			String imageDate4=date4.getText();
			System.out.println("First Image Date is :"+imageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate4); 

			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4);

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);

			String linkText4 = ShowAnalytics4.getAttribute("href");
			String idString4 = null;
			String[] splitStringid4 = linkText4.split("/");
			for(int i=0;i<splitStringid4.length;i++) {
				String actualDate4=splitStringid4[splitStringid4.length-1]; 
				System.out.println("actualDate : " + actualDate4);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate4);
				break;
			}

			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent111=driver.getWindowHandle();
			Set<String>s111=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1111= s111.iterator();
			while(I1111.hasNext())
			{
				String child_window=I1111.next();
				if(!parent111.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate1111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join4=null;
					String[] splitString4 = imageDate1111.split(" ");
					for(int i=0;i<splitString4.length-2;i++) {
						String actualDate4=splitString4[i]; 
						join4= splitString4[i+1]+" "+ splitString4[i]+" " + splitString4[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join4);
					}
					Assert.assertEquals(imageDate4, imageDate1111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);

					String join204=null;
					String[] splitString204 = imageDate21.split(" ");
					for(int i=0;i<splitString204.length-2;i++) {
						String actualDate204=splitString204[i]; 
						join204= splitString204[i+1]+" "+ splitString204[i]+" " + splitString204[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join204);
					}
					Assert.assertEquals(lastimageDate4, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate4+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate4+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate4);
			driver.switchTo().window(parent111);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -5 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("5 Ads image");
			helper.Scrollintoview(date5);
			helper.highLightElement(driver, date5);
			String imageDate5=date5.getText();
			System.out.println("First Image Date is :"+imageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate5); 

			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5);

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);

			String linkText5 = ShowAnalytics5.getAttribute("href");
			String idString5 = null;
			String[] splitStringid5 = linkText5.split("/");
			for(int i=0;i<splitStringid5.length;i++) {
				String actualDate5=splitStringid5[splitStringid5.length-1]; 
				System.out.println("actualDate : " + actualDate5);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate5);
				break;
			}

			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent5=driver.getWindowHandle();
			Set<String>s5=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I5= s5.iterator();
			while(I5.hasNext())
			{
				String child_window=I5.next();
				if(!parent5.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate6 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate6);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join5=null;
					String[] splitString5 = imageDate6.split(" ");
					for(int i=0;i<splitString5.length-2;i++) {
						String actualDate5=splitString5[i]; 
						join5= splitString5[i+1]+" "+ splitString5[i]+" " + splitString5[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join5);
					}
					Assert.assertEquals(imageDate5, imageDate6);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);

					String join205=null;
					String[] splitString205 = imageDate21.split(" ");
					for(int i=0;i<splitString205.length-2;i++) {
						String actualDate205=splitString205[i]; 
						join205= splitString205[i+1]+" "+ splitString205[i]+" " + splitString205[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join205);
					}
					Assert.assertEquals(lastimageDate5, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate5+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate5+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate5);
			driver.switchTo().window(parent5);
		} catch (Exception e) {
			// TODO: handle exception	
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("6 Ads image");
			helper.Scrollintoview(date6);
			helper.highLightElement(driver, date6);
			String imageDate6=date6.getText();
			System.out.println("First Image Date is :"+imageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate6); 

			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6);

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);

			String linkText6 = ShowAnalytics6.getAttribute("href");
			String idString6 = null;
			String[] splitStringid6 = linkText6.split("/");
			for(int i=0;i<splitStringid6.length;i++) {
				String actualDate6=splitStringid6[splitStringid6.length-1]; 
				System.out.println("actualDate : " + actualDate6);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate6);
				break;
			}

			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent6=driver.getWindowHandle();
			Set<String>s6=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I6= s6.iterator();
			while(I6.hasNext())
			{
				String child_window=I6.next();
				if(!parent6.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join6=null;
					String[] splitString6 = imageDate11.split(" ");
					for(int i=0;i<splitString6.length-2;i++) {
						String actualDate6=splitString6[i]; 
						join6= splitString6[i+1]+" "+ splitString6[i]+" " + splitString6[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join6);
					}
					Assert.assertEquals(imageDate6, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);

					String join206=null;
					String[] splitString206 = imageDate21.split(" ");
					for(int i=0;i<splitString206.length-2;i++) {
						String actualDate206=splitString206[i]; 
						join206= splitString206[i+1]+" "+ splitString206[i]+" " + splitString206[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join206);
					}
					Assert.assertEquals(lastimageDate6, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate6+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate6+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate6);
			driver.switchTo().window(parent6);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("7 Ads image");
			helper.Scrollintoview(date7);
			helper.highLightElement(driver, date7);
			String imageDate7=date7.getText();
			System.out.println("First Image Date is :"+imageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate7); 

			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7);

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);

			String linkText7 = ShowAnalytics7.getAttribute("href");
			String idString7 = null;
			String[] splitStringid7 = linkText7.split("/");
			for(int i=0;i<splitStringid7.length;i++) {
				String actualDate7=splitStringid7[splitStringid7.length-1]; 
				System.out.println("actualDate : " + actualDate7);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate7);
				break;
			}
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent17=driver.getWindowHandle();
			Set<String>s17=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I17= s17.iterator();
			while(I17.hasNext())
			{
				String child_window=I17.next();
				if(!parent17.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join7=null;
					String[] splitString7 = imageDate11.split(" ");
					for(int i=0;i<splitString7.length-2;i++) {
						String actualDate7=splitString7[i]; 
						join7= splitString7[i+1]+" "+ splitString7[i]+" " + splitString7[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join7);
					}
					Assert.assertEquals(imageDate7, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);

					String join207=null;
					String[] splitString207 = imageDate21.split(" ");
					for(int i=0;i<splitString207.length-2;i++) {
						String actualDate207=splitString207[i]; 
						join207= splitString207[i+1]+" "+ splitString207[i]+" " + splitString207[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join207);
					}
					Assert.assertEquals(lastimageDate7, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate7+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate7+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate7);
			driver.switchTo().window(parent17);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -8 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("8 Ads image");
			helper.Scrollintoview(date8);
			helper.highLightElement(driver, date8);
			String imageDate8=date8.getText();
			System.out.println("First Image Date is :"+imageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate8); 

			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8);

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);

			String linkText8 = ShowAnalytics8.getAttribute("href");
			String idString8 = null;
			String[] splitStringid8 = linkText8.split("/");
			for(int i=0;i<splitStringid8.length;i++) {
				String actualDate8=splitStringid8[splitStringid8.length-1]; 
				System.out.println("actualDate : " + actualDate8);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate8);
				break;
			}

			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent8=driver.getWindowHandle();
			Set<String>s8=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I8= s8.iterator();
			while(I8.hasNext())
			{
				String child_window=I8.next();
				if(!parent8.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join8=null;
					String[] splitString8 = imageDate11.split(" ");
					for(int i=0;i<splitString8.length-2;i++) {
						String actualDate8=splitString8[i]; 
						join8= splitString8[i+1]+" "+ splitString8[i]+" " + splitString8[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join8);
					}
					Assert.assertEquals(imageDate8, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);

					String join208=null;
					String[] splitString208 = imageDate21.split(" ");
					for(int i=0;i<splitString208.length-2;i++) {
						String actualDate208=splitString208[i]; 
						join208= splitString208[i+1]+" "+ splitString208[i]+" " + splitString208[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join208);
					}
					Assert.assertEquals(lastimageDate8, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate8+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate8+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate8);
			driver.switchTo().window(parent8);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad- </font>  ");
			System.out.println(" ");
			System.out.println("9 Ads image");
			helper.Scrollintoview(date9);
			helper.highLightElement(driver, date9);
			String imageDate9=date9.getText();
			System.out.println("First Image Date is :"+imageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate9); 

			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9);

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);

			String linkText9 = ShowAnalytics9.getAttribute("href");
			String idString9 = null;
			String[] splitStringid9 = linkText9.split("/");
			for(int i=0;i<splitStringid9.length;i++) {
				String actualDate9=splitStringid9[splitStringid9.length-1]; 
				System.out.println("actualDate : " + actualDate9);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate9);
				break;
			}
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent9=driver.getWindowHandle();
			Set<String>s9=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I9=s9.iterator();
			while(I9.hasNext())
			{
				String child_window=I9.next();
				if(!parent9.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate19 = firstSeen.getText();

					System.out.println("Analytics Image First Seen Date: "+imageDate19);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join9=null;
					String[] splitString9 = imageDate19.split(" ");
					for(int i=0;i<splitString9.length-2;i++) {
						String actualDate9=splitString9[i]; 
						join9= splitString9[i+1]+" "+ splitString9[i]+" " + splitString9[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join9);
					}
					Assert.assertEquals(imageDate9, imageDate19);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);

					String join209=null;
					String[] splitString209 = imageDate21.split(" ");
					for(int i=0;i<splitString209.length-2;i++) {
						String actualDate209=splitString209[i]; 
						join209= splitString209[i+1]+" "+ splitString209[i]+" " + splitString209[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join209);
					}
					Assert.assertEquals(lastimageDate9, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate9+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate9+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate9);
			driver.switchTo().window(parent9);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -10 Ad</font>  ");
			System.out.println(" ");
			System.out.println("10 Ads image");

			helper.Scrollintoview(date10);
			helper.highLightElement(driver, date10);
			String imageDate10=date10.getText();
			System.out.println("First Image Date is :"+imageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate10); 

			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10);

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);

			String linkText10 = ShowAnalytics10.getAttribute("href");
			String idString10 = null;
			String[] splitStringid10 = linkText10.split("/");
			for(int i=0;i<splitStringid10.length;i++) {
				String actualDate10=splitStringid10[splitStringid10.length-1]; 
				System.out.println("actualDate : " + actualDate10);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate10);
				break;
			}
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent10=driver.getWindowHandle();
			Set<String>s10=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I10= s10.iterator();
			while(I10.hasNext())
			{
				String child_window=I10.next();
				if(!parent10.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join10=null;
					String[] splitString10 = imageDate11.split(" ");
					for(int i=0;i<splitString10.length-2;i++) {
						String actualDate10=splitString10[i]; 
						join10= splitString10[i+1]+" "+ splitString10[i]+" " + splitString10[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join10);
					}
					Assert.assertEquals(imageDate10, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);

					String join2010=null;
					String[] splitString2010 = imageDate21.split(" ");
					for(int i=0;i<splitString2010.length-2;i++) {
						String actualDate2010=splitString2010[i]; 
						join2010= splitString2010[i+1]+" "+ splitString2010[i]+" " + splitString2010[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2010);
					}
					Assert.assertEquals(lastimageDate10, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate10+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate10+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate10);
			driver.switchTo().window(parent10);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -11 Ad </font>  ");
			System.out.println(" ");
			System.out.println("11 Ads image");

			helper.Scrollintoview(date11);
			helper.highLightElement(driver, date11);
			String imageDate11=date11.getText();
			System.out.println("First Image Date is :"+imageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate11); 

			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11);

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);

			String linkText11 = ShowAnalytics11.getAttribute("href");
			String idString11 = null;
			String[] splitStringid11 = linkText11.split("/");
			for(int i=0;i<splitStringid11.length;i++) {
				String actualDate11=splitStringid11[splitStringid11.length-1]; 
				System.out.println("actualDate : " + actualDate11);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate11);
				break;
			}
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent11=driver.getWindowHandle();
			Set<String>s11=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I110= s11.iterator();
			while(I110.hasNext())
			{
				String child_window=I110.next();
				if(!parent11.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate101 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate101);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join11=null;
					String[] splitString11 = imageDate101.split(" ");
					for(int i=0;i<splitString11.length-2;i++) {
						String actualDate11=splitString11[i]; 
						join11= splitString11[i+1]+" "+ splitString11[i]+" " + splitString11[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join11);
					}
					Assert.assertEquals(imageDate11, imageDate101);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);

					String join2011=null;
					String[] splitString2011 = imageDate21.split(" ");
					for(int i=0;i<splitString2011.length-2;i++) {
						String actualDate2011=splitString2011[i]; 
						join2011= splitString2011[i+1]+" "+ splitString2011[i]+" " + splitString2011[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2011);
					}
					Assert.assertEquals(lastimageDate11, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate11+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate11+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate11);
			driver.switchTo().window(parent11);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -12 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("12 Ads image");

			helper.Scrollintoview(date12);
			helper.highLightElement(driver, date12);
			String imageDate12=date12.getText();
			System.out.println("First Image Date is :"+imageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate12); 

			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12);

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);

			String linkText12 = ShowAnalytics12.getAttribute("href");
			String idString12 = null;
			String[] splitStringid12 = linkText12.split("/");
			for(int i=0;i<splitStringid12.length;i++) {
				String actualDate12=splitStringid12[splitStringid12.length-1]; 
				System.out.println("actualDate : " + actualDate12);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate12);
				break;
			}

			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent12=driver.getWindowHandle();
			Set<String>s12=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I112= s12.iterator();
			while(I112.hasNext())
			{
				String child_window=I112.next();
				if(!parent12.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate112 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate112);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join12=null;
					String[] splitString12 = imageDate112.split(" ");
					for(int i=0;i<splitString12.length-2;i++) {
						String actualDate12=splitString12[i]; 
						join12= splitString12[i+1]+" "+ splitString12[i]+" " + splitString12[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join12);
					}
					Assert.assertEquals(imageDate12, imageDate112);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate12+"="+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate12+"="+join12);

					String join2012=null;
					String[] splitString2012 = imageDate21.split(" ");
					for(int i=0;i<splitString2012.length-2;i++) {
						String actualDate2012=splitString2012[i]; 
						join2012= splitString2012[i+1]+" "+ splitString2012[i]+" " + splitString2012[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2012);
					}
					Assert.assertEquals(lastimageDate12, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate12+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate12+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate12);
			driver.switchTo().window(parent12);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("13 Ads image");

			helper.Scrollintoview(date13);
			helper.highLightElement(driver, date13);
			String imageDate13=date13.getText();
			System.out.println("First Image Date is :"+imageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate13); 

			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13);

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);

			String linkText13 = ShowAnalytics13.getAttribute("href");
			String idString13 = null;
			String[] splitStringid13 = linkText13.split("/");
			for(int i=0;i<splitStringid13.length;i++) {
				String actualDate13=splitStringid13[splitStringid13.length-1]; 
				System.out.println("actualDate : " + actualDate13);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate13);
				break;
			}

			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent13=driver.getWindowHandle();
			Set<String>s13=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I13= s13.iterator();
			while(I13.hasNext())
			{
				String child_window=I13.next();
				if(!parent13.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate113 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate113);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join13=null;
					String[] splitString13 = imageDate113.split(" ");
					for(int i=0;i<splitString13.length-2;i++) {
						String actualDate13=splitString13[i]; 
						join13= splitString13[i+1]+" "+ splitString13[i]+" " + splitString13[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join13);
					}
					Assert.assertEquals(imageDate13, imageDate113);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);

					String join2013=null;
					String[] splitString2013 = imageDate21.split(" ");
					for(int i=0;i<splitString2013.length-2;i++) {
						String actualDate2013=splitString2013[i]; 
						join2013= splitString2013[i+1]+" "+ splitString2013[i]+" " + splitString2013[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2013);
					}
					Assert.assertEquals(lastimageDate13, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate13+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate13+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate13);
			driver.switchTo().window(parent13);
		} catch (Exception e) {

			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("14 Ads image");

			helper.Scrollintoview(date14);
			helper.highLightElement(driver, date14);
			String imageDate14=date14.getText();
			System.out.println("First Image Date is :"+imageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate14); 

			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14);

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);

			String linkText14 = ShowAnalytics14.getAttribute("href");
			String idString14 = null;
			String[] splitStringid14 = linkText14.split("/");
			for(int i=0;i<splitStringid14.length;i++) {
				String actualDate14=splitStringid14[splitStringid14.length-1]; 
				System.out.println("actualDate : " + actualDate14);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate14);
				break;
			}

			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent14=driver.getWindowHandle();
			Set<String>s14=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I14= s14.iterator();
			while(I14.hasNext())
			{
				String child_window=I14.next();
				if(!parent14.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate114 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate114);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join14=null;
					String[] splitString14 = imageDate114.split(" ");
					for(int i=0;i<splitString14.length-2;i++) {
						String actualDate14=splitString14[i]; 
						join14= splitString14[i+1]+" "+ splitString14[i]+" " + splitString14[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join14);
					}
					Assert.assertEquals(imageDate14, imageDate114);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);

					String join2014=null;
					String[] splitString2014 = imageDate21.split(" ");
					for(int i=0;i<splitString2014.length-2;i++) {
						String actualDate2014=splitString2014[i]; 
						join2014= splitString2014[i+1]+" "+ splitString2014[i]+" " + splitString2014[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2014);
					}
					Assert.assertEquals(lastimageDate14, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate14+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate14+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate14);
			driver.switchTo().window(parent14);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("Second Ads image");

			helper.Scrollintoview(date15);
			helper.highLightElement(driver, date15);
			String imageDate15=date15.getText();
			System.out.println("First Image Date is :"+imageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate15); 

			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15);

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);

			String linkText15 = ShowAnalytics15.getAttribute("href");
			String idString15 = null;
			String[] splitStringid15 = linkText15.split("/");
			for(int i=0;i<splitStringid15.length;i++) {
				String actualDate15=splitStringid15[splitStringid15.length-1]; 
				System.out.println("actualDate : " + actualDate15);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate15);
				break;
			}
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent15=driver.getWindowHandle();
			Set<String>s15=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I15= s15.iterator();
			while(I15.hasNext())
			{
				String child_window=I15.next();
				if(!parent15.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate115 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate115);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join15=null;
					String[] splitString15 = imageDate115.split(" ");
					for(int i=0;i<splitString15.length-2;i++) {
						String actualDate15=splitString15[i]; 
						join15= splitString15[i+1]+" "+ splitString15[i]+" " + splitString15[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join15);
					}
					Assert.assertEquals(imageDate15, imageDate115);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);

					String join2015=null;
					String[] splitString2015 = imageDate21.split(" ");
					for(int i=0;i<splitString2015.length-2;i++) {
						String actualDate2015=splitString2015[i]; 
						join2015= splitString2015[i+1]+" "+ splitString2015[i]+" " + splitString2015[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2015);
					}
					Assert.assertEquals(lastimageDate15, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate15+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate15+"="+imageDate21);

					driver.close();
				}
			}

			System.out.println("Current Image Date: "+imageDate15);
			driver.switchTo().window(parent15);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
	}
	public void AdSeenBetween_Last_Month() throws InterruptedException
	{

		System.out.println();
		Reporter.log("      ");
		System.out.println("-SortBy Newest -Ad Seen Between Last Month: ");

		helper.waitForPageToLoad();

		Reporter.log("<B><font color = 'green'>  -ShortBy Newest -Ad Seen Between Last Month Step will Start from here </font> ");
		helper.waitFor(adSeenbetweenfilter);
		helper.highLightElement(driver, adSeenbetweenfilter);
		helper.jsScrollintoview(adSeenbetweenfilter);
		adSeenbetweenfilter.click();
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On ad Seen between filter Icon");

		helper.waitFor(adSeenBetween_last_month);
		helper.highLightElement(driver,adSeenBetween_last_month);
		helper.jsScrollintoview(adSeenBetween_last_month);
		adSeenBetween_last_month.click();
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On Ad Seen Between Last Month Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step7 -</font>  Total Ad Count is :"+ totaladscount);


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -1 Ad- -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			helper.Scrollintoview(date1);
			helper.highLightElement(driver, date1);
			String imageDate=date1.getText();
			System.out.println("First Image Date is :"+imageDate);
			System.out.println("Current Image Date: "+imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate); 

			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);

			String linkText1 = ShowAnalytics1.getAttribute("href");
			String idString1 = null;
			String[] splitStringid1 = linkText1.split("/");
			for(int i=0;i<splitStringid1.length;i++) {
				String actualDate1=splitStringid1[splitStringid1.length-1]; 
				System.out.println("actualDate : " + actualDate1);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate1);
				break;
			}

			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1= s.iterator();
			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					Thread.sleep(2000);
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate1 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1);
					helper.Scrollintoview(lastSeen);
					String imageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate2);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join=null;
					String[] splitString = imageDate1.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						join= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join);
					}
					Assert.assertEquals(imageDate, imageDate1);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate+"="+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching First Seen  Date Assert Pass :"+imageDate+"="+imageDate1);


					String join201=null;
					String[] splitString201 = imageDate2.split(" ");
					for(int i=0;i<splitString201.length-2;i++) {
						String actualDate201=splitString201[i]; 
						join201= splitString201[i+1]+" "+ splitString201[i]+" " + splitString201[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join201);
					}
					Assert.assertEquals(lastimageDate1, imageDate2);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate1+"="+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate1+"="+imageDate2);

					driver.close();
				}
			}

			driver.switchTo().window(parent);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -2 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("2 Ads image");

			helper.Scrollintoview(date2);
			helper.highLightElement(driver, date2);
			String imageDate2=date2.getText();
			System.out.println("First Image Date is :"+imageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate2); 

			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2);

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);

			String linkText2 = ShowAnalytics2.getAttribute("href");
			String idString2 = null;
			String[] splitStringid2 = linkText2.split("/");
			for(int i=0;i<splitStringid2.length;i++) {
				String actualDate2=splitStringid2[splitStringid2.length-1]; 
				System.out.println("actualDate : " + actualDate2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate2);
				break;
			}
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent1=driver.getWindowHandle();
			Set<String>s1=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I11= s1.iterator();
			while(I11.hasNext())
			{
				String child_window=I11.next();
				if(!parent1.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					Thread.sleep(2000);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join2=null;
					String[] splitString2 = imageDate11.split(" ");
					for(int i=0;i<splitString2.length-2;i++) {
						String actualDate2=splitString2[i]; 
						join2= splitString2[i+1]+" "+ splitString2[i]+" " + splitString2[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2);
					}
					Assert.assertEquals(imageDate2, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);

					String join202=null;
					String[] splitString202 = imageDate21.split(" ");
					for(int i=0;i<splitString202.length-2;i++) {
						String actualDate202=splitString202[i]; 
						join202= splitString202[i+1]+" "+ splitString202[i]+" " + splitString202[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join202);
					}
					Assert.assertEquals(lastimageDate2, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate2+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate2+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate2);
			driver.switchTo().window(parent1);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -3 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("3 Ads image");

			helper.Scrollintoview(date3);
			helper.highLightElement(driver, date3);
			String imageDate3=date3.getText();
			System.out.println("First Image Date is :"+imageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate3); 

			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3);

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);

			String linkText3 = ShowAnalytics3.getAttribute("href");
			String idString3 = null;
			String[] splitStringid3 = linkText3.split("/");
			for(int i=0;i<splitStringid3.length;i++) {
				String actualDate3=splitStringid3[splitStringid3.length-1]; 
				System.out.println("actualDate : " + actualDate3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate3);
				break;
			}
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent121=driver.getWindowHandle();
			Set<String>s121=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I111= s121.iterator();
			while(I111.hasNext())
			{
				String child_window=I111.next();
				if(!parent121.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join3=null;
					String[] splitString3 = imageDate111.split(" ");
					for(int i=0;i<splitString3.length-2;i++) {
						String actualDate3=splitString3[i]; 
						join3= splitString3[i+1]+" "+ splitString3[i]+" " + splitString3[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join3);
					}

					Assert.assertEquals(imageDate3,imageDate111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);

					String join203=null;
					String[] splitString203 = imageDate21.split(" ");
					for(int i=0;i<splitString203.length-2;i++) {
						String actualDate203=splitString203[i]; 
						join203= splitString203[i+1]+" "+ splitString203[i]+" " + splitString203[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join203);
					}
					Assert.assertEquals(lastimageDate3, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate3+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate3+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate3);
			driver.switchTo().window(parent121);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}	


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -4 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("4 Ads image");
			helper.Scrollintoview(date4);
			helper.highLightElement(driver, date4);
			String imageDate4=date4.getText();
			System.out.println("First Image Date is :"+imageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate4); 

			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4);

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);

			String linkText4 = ShowAnalytics4.getAttribute("href");
			String idString4 = null;
			String[] splitStringid4 = linkText4.split("/");
			for(int i=0;i<splitStringid4.length;i++) {
				String actualDate4=splitStringid4[splitStringid4.length-1]; 
				System.out.println("actualDate : " + actualDate4);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate4);
				break;
			}

			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent111=driver.getWindowHandle();
			Set<String>s111=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1111= s111.iterator();
			while(I1111.hasNext())
			{
				String child_window=I1111.next();
				if(!parent111.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate1111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join4=null;
					String[] splitString4 = imageDate1111.split(" ");
					for(int i=0;i<splitString4.length-2;i++) {
						String actualDate4=splitString4[i]; 
						join4= splitString4[i+1]+" "+ splitString4[i]+" " + splitString4[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join4);
					}
					Assert.assertEquals(imageDate4, imageDate1111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);

					String join204=null;
					String[] splitString204 = imageDate21.split(" ");
					for(int i=0;i<splitString204.length-2;i++) {
						String actualDate204=splitString204[i]; 
						join204= splitString204[i+1]+" "+ splitString204[i]+" " + splitString204[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join204);
					}
					Assert.assertEquals(lastimageDate4, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate4+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate4+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate4);
			driver.switchTo().window(parent111);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -5 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("5 Ads image");
			helper.Scrollintoview(date5);
			helper.highLightElement(driver, date5);
			String imageDate5=date5.getText();
			System.out.println("First Image Date is :"+imageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate5); 

			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5);

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);

			String linkText5 = ShowAnalytics5.getAttribute("href");
			String idString5 = null;
			String[] splitStringid5 = linkText5.split("/");
			for(int i=0;i<splitStringid5.length;i++) {
				String actualDate5=splitStringid5[splitStringid5.length-1]; 
				System.out.println("actualDate : " + actualDate5);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate5);
				break;
			}

			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent5=driver.getWindowHandle();
			Set<String>s5=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I5= s5.iterator();
			while(I5.hasNext())
			{
				String child_window=I5.next();
				if(!parent5.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate6 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate6);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join5=null;
					String[] splitString5 = imageDate6.split(" ");
					for(int i=0;i<splitString5.length-2;i++) {
						String actualDate5=splitString5[i]; 
						join5= splitString5[i+1]+" "+ splitString5[i]+" " + splitString5[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join5);
					}
					Assert.assertEquals(imageDate5, imageDate6);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);

					String join205=null;
					String[] splitString205 = imageDate21.split(" ");
					for(int i=0;i<splitString205.length-2;i++) {
						String actualDate205=splitString205[i]; 
						join205= splitString205[i+1]+" "+ splitString205[i]+" " + splitString205[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join205);
					}
					Assert.assertEquals(lastimageDate5, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate5+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate5+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate5);
			driver.switchTo().window(parent5);
		} catch (Exception e) {
			// TODO: handle exception	
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("6 Ads image");
			helper.Scrollintoview(date6);
			helper.highLightElement(driver, date6);
			String imageDate6=date6.getText();
			System.out.println("First Image Date is :"+imageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate6); 

			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6);

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);

			String linkText6 = ShowAnalytics6.getAttribute("href");
			String idString6 = null;
			String[] splitStringid6 = linkText6.split("/");
			for(int i=0;i<splitStringid6.length;i++) {
				String actualDate6=splitStringid6[splitStringid6.length-1]; 
				System.out.println("actualDate : " + actualDate6);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate6);
				break;
			}

			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent6=driver.getWindowHandle();
			Set<String>s6=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I6= s6.iterator();
			while(I6.hasNext())
			{
				String child_window=I6.next();
				if(!parent6.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join6=null;
					String[] splitString6 = imageDate11.split(" ");
					for(int i=0;i<splitString6.length-2;i++) {
						String actualDate6=splitString6[i]; 
						join6= splitString6[i+1]+" "+ splitString6[i]+" " + splitString6[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join6);
					}
					Assert.assertEquals(imageDate6, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);

					String join206=null;
					String[] splitString206 = imageDate21.split(" ");
					for(int i=0;i<splitString206.length-2;i++) {
						String actualDate206=splitString206[i]; 
						join206= splitString206[i+1]+" "+ splitString206[i]+" " + splitString206[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join206);
					}
					Assert.assertEquals(lastimageDate6, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate6+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate6+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate6);
			driver.switchTo().window(parent6);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("7 Ads image");
			helper.Scrollintoview(date7);
			helper.highLightElement(driver, date7);
			String imageDate7=date7.getText();
			System.out.println("First Image Date is :"+imageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate7); 

			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7);

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);

			String linkText7 = ShowAnalytics7.getAttribute("href");
			String idString7 = null;
			String[] splitStringid7 = linkText7.split("/");
			for(int i=0;i<splitStringid7.length;i++) {
				String actualDate7=splitStringid7[splitStringid7.length-1]; 
				System.out.println("actualDate : " + actualDate7);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate7);
				break;
			}
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent17=driver.getWindowHandle();
			Set<String>s17=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I17= s17.iterator();
			while(I17.hasNext())
			{
				String child_window=I17.next();
				if(!parent17.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join7=null;
					String[] splitString7 = imageDate11.split(" ");
					for(int i=0;i<splitString7.length-2;i++) {
						String actualDate7=splitString7[i]; 
						join7= splitString7[i+1]+" "+ splitString7[i]+" " + splitString7[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join7);
					}
					Assert.assertEquals(imageDate7, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);

					String join207=null;
					String[] splitString207 = imageDate21.split(" ");
					for(int i=0;i<splitString207.length-2;i++) {
						String actualDate207=splitString207[i]; 
						join207= splitString207[i+1]+" "+ splitString207[i]+" " + splitString207[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join207);
					}
					Assert.assertEquals(lastimageDate7, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate7+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate7+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate7);
			driver.switchTo().window(parent17);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -8 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("8 Ads image");
			helper.Scrollintoview(date8);
			helper.highLightElement(driver, date8);
			String imageDate8=date8.getText();
			System.out.println("First Image Date is :"+imageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate8); 

			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8);

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);

			String linkText8 = ShowAnalytics8.getAttribute("href");
			String idString8 = null;
			String[] splitStringid8 = linkText8.split("/");
			for(int i=0;i<splitStringid8.length;i++) {
				String actualDate8=splitStringid8[splitStringid8.length-1]; 
				System.out.println("actualDate : " + actualDate8);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate8);
				break;
			}

			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent8=driver.getWindowHandle();
			Set<String>s8=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I8= s8.iterator();
			while(I8.hasNext())
			{
				String child_window=I8.next();
				if(!parent8.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join8=null;
					String[] splitString8 = imageDate11.split(" ");
					for(int i=0;i<splitString8.length-2;i++) {
						String actualDate8=splitString8[i]; 
						join8= splitString8[i+1]+" "+ splitString8[i]+" " + splitString8[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join8);
					}
					Assert.assertEquals(imageDate8, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);

					String join208=null;
					String[] splitString208 = imageDate21.split(" ");
					for(int i=0;i<splitString208.length-2;i++) {
						String actualDate208=splitString208[i]; 
						join208= splitString208[i+1]+" "+ splitString208[i]+" " + splitString208[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join208);
					}
					Assert.assertEquals(lastimageDate8, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate8+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate8+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate8);
			driver.switchTo().window(parent8);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad- </font>  ");
			System.out.println(" ");
			System.out.println("9 Ads image");
			helper.Scrollintoview(date9);
			helper.highLightElement(driver, date9);
			String imageDate9=date9.getText();
			System.out.println("First Image Date is :"+imageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate9); 

			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9);

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);

			String linkText9 = ShowAnalytics9.getAttribute("href");
			String idString9 = null;
			String[] splitStringid9 = linkText9.split("/");
			for(int i=0;i<splitStringid9.length;i++) {
				String actualDate9=splitStringid9[splitStringid9.length-1]; 
				System.out.println("actualDate : " + actualDate9);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate9);
				break;
			}
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent9=driver.getWindowHandle();
			Set<String>s9=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I9=s9.iterator();
			while(I9.hasNext())
			{
				String child_window=I9.next();
				if(!parent9.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate19 = firstSeen.getText();

					System.out.println("Analytics Image First Seen Date: "+imageDate19);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join9=null;
					String[] splitString9 = imageDate19.split(" ");
					for(int i=0;i<splitString9.length-2;i++) {
						String actualDate9=splitString9[i]; 
						join9= splitString9[i+1]+" "+ splitString9[i]+" " + splitString9[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join9);
					}
					Assert.assertEquals(imageDate9, imageDate19);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);

					String join209=null;
					String[] splitString209 = imageDate21.split(" ");
					for(int i=0;i<splitString209.length-2;i++) {
						String actualDate209=splitString209[i]; 
						join209= splitString209[i+1]+" "+ splitString209[i]+" " + splitString209[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join209);
					}
					Assert.assertEquals(lastimageDate9, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate9+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate9+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate9);
			driver.switchTo().window(parent9);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -10 Ad</font>  ");
			System.out.println(" ");
			System.out.println("10 Ads image");

			helper.Scrollintoview(date10);
			helper.highLightElement(driver, date10);
			String imageDate10=date10.getText();
			System.out.println("First Image Date is :"+imageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate10); 

			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10);

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);

			String linkText10 = ShowAnalytics10.getAttribute("href");
			String idString10 = null;
			String[] splitStringid10 = linkText10.split("/");
			for(int i=0;i<splitStringid10.length;i++) {
				String actualDate10=splitStringid10[splitStringid10.length-1]; 
				System.out.println("actualDate : " + actualDate10);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate10);
				break;
			}
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent10=driver.getWindowHandle();
			Set<String>s10=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I10= s10.iterator();
			while(I10.hasNext())
			{
				String child_window=I10.next();
				if(!parent10.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join10=null;
					String[] splitString10 = imageDate11.split(" ");
					for(int i=0;i<splitString10.length-2;i++) {
						String actualDate10=splitString10[i]; 
						join10= splitString10[i+1]+" "+ splitString10[i]+" " + splitString10[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join10);
					}
					Assert.assertEquals(imageDate10, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);

					String join2010=null;
					String[] splitString2010 = imageDate21.split(" ");
					for(int i=0;i<splitString2010.length-2;i++) {
						String actualDate2010=splitString2010[i]; 
						join2010= splitString2010[i+1]+" "+ splitString2010[i]+" " + splitString2010[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2010);
					}
					Assert.assertEquals(lastimageDate10, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate10+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate10+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate10);
			driver.switchTo().window(parent10);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -11 Ad </font>  ");
			System.out.println(" ");
			System.out.println("11 Ads image");

			helper.Scrollintoview(date11);
			helper.highLightElement(driver, date11);
			String imageDate11=date11.getText();
			System.out.println("First Image Date is :"+imageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate11); 

			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11);

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);

			String linkText11 = ShowAnalytics11.getAttribute("href");
			String idString11 = null;
			String[] splitStringid11 = linkText11.split("/");
			for(int i=0;i<splitStringid11.length;i++) {
				String actualDate11=splitStringid11[splitStringid11.length-1]; 
				System.out.println("actualDate : " + actualDate11);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate11);
				break;
			}
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent11=driver.getWindowHandle();
			Set<String>s11=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I110= s11.iterator();
			while(I110.hasNext())
			{
				String child_window=I110.next();
				if(!parent11.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate101 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate101);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join11=null;
					String[] splitString11 = imageDate101.split(" ");
					for(int i=0;i<splitString11.length-2;i++) {
						String actualDate11=splitString11[i]; 
						join11= splitString11[i+1]+" "+ splitString11[i]+" " + splitString11[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join11);
					}
					Assert.assertEquals(imageDate11, imageDate101);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);

					String join2011=null;
					String[] splitString2011 = imageDate21.split(" ");
					for(int i=0;i<splitString2011.length-2;i++) {
						String actualDate2011=splitString2011[i]; 
						join2011= splitString2011[i+1]+" "+ splitString2011[i]+" " + splitString2011[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2011);
					}
					Assert.assertEquals(lastimageDate11, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate11+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate11+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate11);
			driver.switchTo().window(parent11);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -12 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("12 Ads image");

			helper.Scrollintoview(date12);
			helper.highLightElement(driver, date12);
			String imageDate12=date12.getText();
			System.out.println("First Image Date is :"+imageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate12); 

			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12);

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);

			String linkText12 = ShowAnalytics12.getAttribute("href");
			String idString12 = null;
			String[] splitStringid12 = linkText12.split("/");
			for(int i=0;i<splitStringid12.length;i++) {
				String actualDate12=splitStringid12[splitStringid12.length-1]; 
				System.out.println("actualDate : " + actualDate12);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate12);
				break;
			}

			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent12=driver.getWindowHandle();
			Set<String>s12=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I112= s12.iterator();
			while(I112.hasNext())
			{
				String child_window=I112.next();
				if(!parent12.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate112 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate112);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join12=null;
					String[] splitString12 = imageDate112.split(" ");
					for(int i=0;i<splitString12.length-2;i++) {
						String actualDate12=splitString12[i]; 
						join12= splitString12[i+1]+" "+ splitString12[i]+" " + splitString12[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join12);
					}
					Assert.assertEquals(imageDate12, imageDate112);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate12+"="+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate12+"="+join12);

					String join2012=null;
					String[] splitString2012 = imageDate21.split(" ");
					for(int i=0;i<splitString2012.length-2;i++) {
						String actualDate2012=splitString2012[i]; 
						join2012= splitString2012[i+1]+" "+ splitString2012[i]+" " + splitString2012[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2012);
					}
					Assert.assertEquals(lastimageDate12, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate12+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate12+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate12);
			driver.switchTo().window(parent12);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("13 Ads image");

			helper.Scrollintoview(date13);
			helper.highLightElement(driver, date13);
			String imageDate13=date13.getText();
			System.out.println("First Image Date is :"+imageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate13); 

			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13);

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);

			String linkText13 = ShowAnalytics13.getAttribute("href");
			String idString13 = null;
			String[] splitStringid13 = linkText13.split("/");
			for(int i=0;i<splitStringid13.length;i++) {
				String actualDate13=splitStringid13[splitStringid13.length-1]; 
				System.out.println("actualDate : " + actualDate13);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate13);
				break;
			}

			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent13=driver.getWindowHandle();
			Set<String>s13=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I13= s13.iterator();
			while(I13.hasNext())
			{
				String child_window=I13.next();
				if(!parent13.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate113 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate113);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join13=null;
					String[] splitString13 = imageDate113.split(" ");
					for(int i=0;i<splitString13.length-2;i++) {
						String actualDate13=splitString13[i]; 
						join13= splitString13[i+1]+" "+ splitString13[i]+" " + splitString13[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join13);
					}
					Assert.assertEquals(imageDate13, imageDate113);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);

					String join2013=null;
					String[] splitString2013 = imageDate21.split(" ");
					for(int i=0;i<splitString2013.length-2;i++) {
						String actualDate2013=splitString2013[i]; 
						join2013= splitString2013[i+1]+" "+ splitString2013[i]+" " + splitString2013[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2013);
					}
					Assert.assertEquals(lastimageDate13, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate13+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate13+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate13);
			driver.switchTo().window(parent13);
		} catch (Exception e) {

			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("14 Ads image");

			helper.Scrollintoview(date14);
			helper.highLightElement(driver, date14);
			String imageDate14=date14.getText();
			System.out.println("First Image Date is :"+imageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate14); 

			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14);

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);

			String linkText14 = ShowAnalytics14.getAttribute("href");
			String idString14 = null;
			String[] splitStringid14 = linkText14.split("/");
			for(int i=0;i<splitStringid14.length;i++) {
				String actualDate14=splitStringid14[splitStringid14.length-1]; 
				System.out.println("actualDate : " + actualDate14);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate14);
				break;
			}

			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent14=driver.getWindowHandle();
			Set<String>s14=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I14= s14.iterator();
			while(I14.hasNext())
			{
				String child_window=I14.next();
				if(!parent14.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate114 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate114);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join14=null;
					String[] splitString14 = imageDate114.split(" ");
					for(int i=0;i<splitString14.length-2;i++) {
						String actualDate14=splitString14[i]; 
						join14= splitString14[i+1]+" "+ splitString14[i]+" " + splitString14[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join14);
					}
					Assert.assertEquals(imageDate14, imageDate114);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);

					String join2014=null;
					String[] splitString2014 = imageDate21.split(" ");
					for(int i=0;i<splitString2014.length-2;i++) {
						String actualDate2014=splitString2014[i]; 
						join2014= splitString2014[i+1]+" "+ splitString2014[i]+" " + splitString2014[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2014);
					}
					Assert.assertEquals(lastimageDate14, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate14+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate14+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate14);
			driver.switchTo().window(parent14);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("Second Ads image");

			helper.Scrollintoview(date15);
			helper.highLightElement(driver, date15);
			String imageDate15=date15.getText();
			System.out.println("First Image Date is :"+imageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate15); 

			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15);

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);

			String linkText15 = ShowAnalytics15.getAttribute("href");
			String idString15 = null;
			String[] splitStringid15 = linkText15.split("/");
			for(int i=0;i<splitStringid15.length;i++) {
				String actualDate15=splitStringid15[splitStringid15.length-1]; 
				System.out.println("actualDate : " + actualDate15);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate15);
				break;
			}
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent15=driver.getWindowHandle();
			Set<String>s15=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I15= s15.iterator();
			while(I15.hasNext())
			{
				String child_window=I15.next();
				if(!parent15.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate115 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate115);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join15=null;
					String[] splitString15 = imageDate115.split(" ");
					for(int i=0;i<splitString15.length-2;i++) {
						String actualDate15=splitString15[i]; 
						join15= splitString15[i+1]+" "+ splitString15[i]+" " + splitString15[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join15);
					}
					Assert.assertEquals(imageDate15, imageDate115);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);

					String join2015=null;
					String[] splitString2015 = imageDate21.split(" ");
					for(int i=0;i<splitString2015.length-2;i++) {
						String actualDate2015=splitString2015[i]; 
						join2015= splitString2015[i+1]+" "+ splitString2015[i]+" " + splitString2015[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2015);
					}
					Assert.assertEquals(lastimageDate15, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate15+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate15+"="+imageDate21);

					driver.close();
				}
			}

			System.out.println("Current Image Date: "+imageDate15);
			driver.switchTo().window(parent15);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		helper.waitFor(Clear_Filters);
		helper.Scrollintoview(Clear_Filters);
		Clear_Filters.click();

	}

	public void AdSeenBetween_CustomRange() throws InterruptedException
	{
		System.out.println();
		Reporter.log("      ");
		System.out.println("-SortBy Newest -Ad Seen Between Custom Range: ");

		helper.waitForPageToLoad();

		Reporter.log("<B><font color = 'green'>  -ShortBy Newest -Ad Seen Between Custom Range Step will Start from here </font> ");
		helper.waitFor(adSeenbetweenfilter);
		helper.highLightElement(driver, adSeenbetweenfilter);
		helper.jsScrollintoview(adSeenbetweenfilter);
		adSeenbetweenfilter.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Ad Seen between filter Icon");

		helper.waitFor(adSeenBetween_customrange);
		helper.highLightElement(driver,adSeenBetween_customrange);
		helper.jsScrollintoview(adSeenBetween_customrange);
		adSeenBetween_customrange.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On Ad Seen Between Custom Range Icon");

		helper.waitFor(leftmonthselect);
		helper.highLightElement(driver,leftmonthselect);
		helper.jsScrollintoview(leftmonthselect);
		helper.Scrollintoview(leftmonthselect);
		helper.SelectDropdownValue(leftmonthselect,ReadConfig.getProperty("Leftmonthselect1"));
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Selected Month: "+ReadConfig.getProperty("Leftmonthselect1"));
		System.out.println("Selected Month: "+ReadConfig.getProperty("Leftmonthselect1"));

		helper.waitFor(leftyearselect);
		helper.highLightElement(driver,leftyearselect);
		helper.jsScrollintoview(leftyearselect);
		helper.SelectDropdownValue(leftyearselect,ReadConfig.getProperty("Leftyearselect1"));
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Selected Year: "+ReadConfig.getProperty("Leftyearselect1"));
		System.out.println("Selected Year: "+ReadConfig.getProperty("Leftyearselect1"));

		helper.waitFor(rightmonthselect);
		helper.highLightElement(driver,rightmonthselect);
		helper.jsScrollintoview(rightmonthselect);
		helper.SelectDropdownValue(rightmonthselect,ReadConfig.getProperty("Rightmonthselect2"));
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Selected Month: "+ReadConfig.getProperty("Rightmonthselect2"));
		System.out.println("Selected Month: "+ReadConfig.getProperty("Rightmonthselect2"));

		helper.waitFor(rightyearselect);
		helper.highLightElement(driver,rightyearselect);
		helper.jsScrollintoview(rightyearselect);
		helper.SelectDropdownValue(rightyearselect,ReadConfig.getProperty("Rightyearselect2"));
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Selected Year: "+ReadConfig.getProperty("Rightyearselect2"));
		System.out.println("Selected Year "+ReadConfig.getProperty("Rightyearselect2"));


		/*	helper.waitFor(Custom_Range_Next_Line);
		helper.highLightElement(driver, Custom_Range_Next_Line);
		helper.Scrollintoview(Custom_Range_Next_Line);
		Custom_Range_Next_Line.click();
		Custom_Range_Next_Line.click();*/


		helper.waitFor(adSeenBetween_Start_range1);
		helper.highLightElement(driver,adSeenBetween_Start_range1);
		helper.jsScrollintoview(adSeenBetween_Start_range1);
		adSeenBetween_Start_range1.click();
		Reporter.log("<B><font color = 'orange'> Step7 -</font> Clicked On Ad Seen Between Start Custom Range Icon");

		helper.waitFor(adSeenBetween_end_range2);
		helper.highLightElement(driver,adSeenBetween_end_range2);
		helper.jsScrollintoview(adSeenBetween_end_range2);
		helper.Scrollintoview(adSeenBetween_end_range2);
		adSeenBetween_end_range2.click();
		Reporter.log("<B><font color = 'orange'> Step8 -</font> Clicked On Ad Seen Between End Custom Range Icon:");


		helper.waitFor(AdseenCustomRangeApplyButton);
		helper.highLightElement(driver, AdseenCustomRangeApplyButton);
		helper.jsScrollintoview(AdseenCustomRangeApplyButton);
		AdseenCustomRangeApplyButton.click();
		Reporter.log("<B><font color = 'orange'> Step9 -</font> Clicked On Apply Button Icon");
		helper.waitForPageToLoad();


		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step10 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step11 -</font>  Total Ad Count is :"+ totaladscount);


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -1 Ad- -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			helper.Scrollintoview(date1);
			helper.highLightElement(driver, date1);
			String imageDate=date1.getText();
			System.out.println("First Image Date is :"+imageDate);
			System.out.println("Current Image Date: "+imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate); 

			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);

			String linkText1 = ShowAnalytics1.getAttribute("href");
			String idString1 = null;
			String[] splitStringid1 = linkText1.split("/");
			for(int i=0;i<splitStringid1.length;i++) {
				String actualDate1=splitStringid1[splitStringid1.length-1]; 
				System.out.println("actualDate : " + actualDate1);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate1);
				break;
			}

			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1= s.iterator();
			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					Thread.sleep(2000);
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate1 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1);
					helper.Scrollintoview(lastSeen);
					String imageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate2);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join=null;
					String[] splitString = imageDate1.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						join= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join);
					}
					Assert.assertEquals(imageDate, imageDate1);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate+"="+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching First Seen  Date Assert Pass :"+imageDate+"="+imageDate1);


					String join201=null;
					String[] splitString201 = imageDate2.split(" ");
					for(int i=0;i<splitString201.length-2;i++) {
						String actualDate201=splitString201[i]; 
						join201= splitString201[i+1]+" "+ splitString201[i]+" " + splitString201[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join201);
					}
					Assert.assertEquals(lastimageDate1, imageDate2);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate1+"="+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate1+"="+imageDate2);

					driver.close();
				}
			}

			driver.switchTo().window(parent);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -2 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("2 Ads image");

			helper.Scrollintoview(date2);
			helper.highLightElement(driver, date2);
			String imageDate2=date2.getText();
			System.out.println("First Image Date is :"+imageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate2); 

			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2);

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);

			String linkText2 = ShowAnalytics2.getAttribute("href");
			String idString2 = null;
			String[] splitStringid2 = linkText2.split("/");
			for(int i=0;i<splitStringid2.length;i++) {
				String actualDate2=splitStringid2[splitStringid2.length-1]; 
				System.out.println("actualDate : " + actualDate2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate2);
				break;
			}
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent1=driver.getWindowHandle();
			Set<String>s1=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I11= s1.iterator();
			while(I11.hasNext())
			{
				String child_window=I11.next();
				if(!parent1.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					Thread.sleep(2000);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join2=null;
					String[] splitString2 = imageDate11.split(" ");
					for(int i=0;i<splitString2.length-2;i++) {
						String actualDate2=splitString2[i]; 
						join2= splitString2[i+1]+" "+ splitString2[i]+" " + splitString2[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2);
					}
					Assert.assertEquals(imageDate2, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate11);

					String join202=null;
					String[] splitString202 = imageDate21.split(" ");
					for(int i=0;i<splitString202.length-2;i++) {
						String actualDate202=splitString202[i]; 
						join202= splitString202[i+1]+" "+ splitString202[i]+" " + splitString202[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join202);
					}
					Assert.assertEquals(lastimageDate2, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate2+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate2+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate2);
			driver.switchTo().window(parent1);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -3 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("3 Ads image");

			helper.Scrollintoview(date3);
			helper.highLightElement(driver, date3);
			String imageDate3=date3.getText();
			System.out.println("First Image Date is :"+imageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate3); 

			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3);

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);

			String linkText3 = ShowAnalytics3.getAttribute("href");
			String idString3 = null;
			String[] splitStringid3 = linkText3.split("/");
			for(int i=0;i<splitStringid3.length;i++) {
				String actualDate3=splitStringid3[splitStringid3.length-1]; 
				System.out.println("actualDate : " + actualDate3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate3);
				break;
			}
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent121=driver.getWindowHandle();
			Set<String>s121=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I111= s121.iterator();
			while(I111.hasNext())
			{
				String child_window=I111.next();
				if(!parent121.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join3=null;
					String[] splitString3 = imageDate111.split(" ");
					for(int i=0;i<splitString3.length-2;i++) {
						String actualDate3=splitString3[i]; 
						join3= splitString3[i+1]+" "+ splitString3[i]+" " + splitString3[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join3);
					}

					Assert.assertEquals(imageDate3,imageDate111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate3+"="+imageDate111);

					String join203=null;
					String[] splitString203 = imageDate21.split(" ");
					for(int i=0;i<splitString203.length-2;i++) {
						String actualDate203=splitString203[i]; 
						join203= splitString203[i+1]+" "+ splitString203[i]+" " + splitString203[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join203);
					}
					Assert.assertEquals(lastimageDate3, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate3+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate3+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate3);
			driver.switchTo().window(parent121);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}	


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -4 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("4 Ads image");
			helper.Scrollintoview(date4);
			helper.highLightElement(driver, date4);
			String imageDate4=date4.getText();
			System.out.println("First Image Date is :"+imageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate4); 

			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4);

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);

			String linkText4 = ShowAnalytics4.getAttribute("href");
			String idString4 = null;
			String[] splitStringid4 = linkText4.split("/");
			for(int i=0;i<splitStringid4.length;i++) {
				String actualDate4=splitStringid4[splitStringid4.length-1]; 
				System.out.println("actualDate : " + actualDate4);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate4);
				break;
			}

			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent111=driver.getWindowHandle();
			Set<String>s111=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1111= s111.iterator();
			while(I1111.hasNext())
			{
				String child_window=I1111.next();
				if(!parent111.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate1111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join4=null;
					String[] splitString4 = imageDate1111.split(" ");
					for(int i=0;i<splitString4.length-2;i++) {
						String actualDate4=splitString4[i]; 
						join4= splitString4[i+1]+" "+ splitString4[i]+" " + splitString4[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join4);
					}
					Assert.assertEquals(imageDate4, imageDate1111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);

					String join204=null;
					String[] splitString204 = imageDate21.split(" ");
					for(int i=0;i<splitString204.length-2;i++) {
						String actualDate204=splitString204[i]; 
						join204= splitString204[i+1]+" "+ splitString204[i]+" " + splitString204[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join204);
					}
					Assert.assertEquals(lastimageDate4, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate4+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate4+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate4);
			driver.switchTo().window(parent111);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -5 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("5 Ads image");
			helper.Scrollintoview(date5);
			helper.highLightElement(driver, date5);
			String imageDate5=date5.getText();
			System.out.println("First Image Date is :"+imageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate5); 

			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5);

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);

			String linkText5 = ShowAnalytics5.getAttribute("href");
			String idString5 = null;
			String[] splitStringid5 = linkText5.split("/");
			for(int i=0;i<splitStringid5.length;i++) {
				String actualDate5=splitStringid5[splitStringid5.length-1]; 
				System.out.println("actualDate : " + actualDate5);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate5);
				break;
			}

			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent5=driver.getWindowHandle();
			Set<String>s5=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I5= s5.iterator();
			while(I5.hasNext())
			{
				String child_window=I5.next();
				if(!parent5.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate6 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate6);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join5=null;
					String[] splitString5 = imageDate6.split(" ");
					for(int i=0;i<splitString5.length-2;i++) {
						String actualDate5=splitString5[i]; 
						join5= splitString5[i+1]+" "+ splitString5[i]+" " + splitString5[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join5);
					}
					Assert.assertEquals(imageDate5, imageDate6);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate6);

					String join205=null;
					String[] splitString205 = imageDate21.split(" ");
					for(int i=0;i<splitString205.length-2;i++) {
						String actualDate205=splitString205[i]; 
						join205= splitString205[i+1]+" "+ splitString205[i]+" " + splitString205[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join205);
					}
					Assert.assertEquals(lastimageDate5, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate5+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate5+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate5);
			driver.switchTo().window(parent5);
		} catch (Exception e) {
			// TODO: handle exception	
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("6 Ads image");
			helper.Scrollintoview(date6);
			helper.highLightElement(driver, date6);
			String imageDate6=date6.getText();
			System.out.println("First Image Date is :"+imageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate6); 

			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6);

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);

			String linkText6 = ShowAnalytics6.getAttribute("href");
			String idString6 = null;
			String[] splitStringid6 = linkText6.split("/");
			for(int i=0;i<splitStringid6.length;i++) {
				String actualDate6=splitStringid6[splitStringid6.length-1]; 
				System.out.println("actualDate : " + actualDate6);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate6);
				break;
			}

			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent6=driver.getWindowHandle();
			Set<String>s6=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I6= s6.iterator();
			while(I6.hasNext())
			{
				String child_window=I6.next();
				if(!parent6.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join6=null;
					String[] splitString6 = imageDate11.split(" ");
					for(int i=0;i<splitString6.length-2;i++) {
						String actualDate6=splitString6[i]; 
						join6= splitString6[i+1]+" "+ splitString6[i]+" " + splitString6[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join6);
					}
					Assert.assertEquals(imageDate6, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate11);

					String join206=null;
					String[] splitString206 = imageDate21.split(" ");
					for(int i=0;i<splitString206.length-2;i++) {
						String actualDate206=splitString206[i]; 
						join206= splitString206[i+1]+" "+ splitString206[i]+" " + splitString206[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join206);
					}
					Assert.assertEquals(lastimageDate6, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate6+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate6+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate6);
			driver.switchTo().window(parent6);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("7 Ads image");
			helper.Scrollintoview(date7);
			helper.highLightElement(driver, date7);
			String imageDate7=date7.getText();
			System.out.println("First Image Date is :"+imageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate7); 

			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7);

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);

			String linkText7 = ShowAnalytics7.getAttribute("href");
			String idString7 = null;
			String[] splitStringid7 = linkText7.split("/");
			for(int i=0;i<splitStringid7.length;i++) {
				String actualDate7=splitStringid7[splitStringid7.length-1]; 
				System.out.println("actualDate : " + actualDate7);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate7);
				break;
			}
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent17=driver.getWindowHandle();
			Set<String>s17=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I17= s17.iterator();
			while(I17.hasNext())
			{
				String child_window=I17.next();
				if(!parent17.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join7=null;
					String[] splitString7 = imageDate11.split(" ");
					for(int i=0;i<splitString7.length-2;i++) {
						String actualDate7=splitString7[i]; 
						join7= splitString7[i+1]+" "+ splitString7[i]+" " + splitString7[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join7);
					}
					Assert.assertEquals(imageDate7, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate11);

					String join207=null;
					String[] splitString207 = imageDate21.split(" ");
					for(int i=0;i<splitString207.length-2;i++) {
						String actualDate207=splitString207[i]; 
						join207= splitString207[i+1]+" "+ splitString207[i]+" " + splitString207[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join207);
					}
					Assert.assertEquals(lastimageDate7, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate7+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate7+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate7);
			driver.switchTo().window(parent17);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -8 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("8 Ads image");
			helper.Scrollintoview(date8);
			helper.highLightElement(driver, date8);
			String imageDate8=date8.getText();
			System.out.println("First Image Date is :"+imageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate8); 

			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8);

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);

			String linkText8 = ShowAnalytics8.getAttribute("href");
			String idString8 = null;
			String[] splitStringid8 = linkText8.split("/");
			for(int i=0;i<splitStringid8.length;i++) {
				String actualDate8=splitStringid8[splitStringid8.length-1]; 
				System.out.println("actualDate : " + actualDate8);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate8);
				break;
			}

			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent8=driver.getWindowHandle();
			Set<String>s8=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I8= s8.iterator();
			while(I8.hasNext())
			{
				String child_window=I8.next();
				if(!parent8.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join8=null;
					String[] splitString8 = imageDate11.split(" ");
					for(int i=0;i<splitString8.length-2;i++) {
						String actualDate8=splitString8[i]; 
						join8= splitString8[i+1]+" "+ splitString8[i]+" " + splitString8[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join8);
					}
					Assert.assertEquals(imageDate8, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate11);

					String join208=null;
					String[] splitString208 = imageDate21.split(" ");
					for(int i=0;i<splitString208.length-2;i++) {
						String actualDate208=splitString208[i]; 
						join208= splitString208[i+1]+" "+ splitString208[i]+" " + splitString208[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join208);
					}
					Assert.assertEquals(lastimageDate8, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate8+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate8+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate8);
			driver.switchTo().window(parent8);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad- </font>  ");
			System.out.println(" ");
			System.out.println("9 Ads image");
			helper.Scrollintoview(date9);
			helper.highLightElement(driver, date9);
			String imageDate9=date9.getText();
			System.out.println("First Image Date is :"+imageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate9); 

			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9);

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);

			String linkText9 = ShowAnalytics9.getAttribute("href");
			String idString9 = null;
			String[] splitStringid9 = linkText9.split("/");
			for(int i=0;i<splitStringid9.length;i++) {
				String actualDate9=splitStringid9[splitStringid9.length-1]; 
				System.out.println("actualDate : " + actualDate9);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate9);
				break;
			}
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent9=driver.getWindowHandle();
			Set<String>s9=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I9=s9.iterator();
			while(I9.hasNext())
			{
				String child_window=I9.next();
				if(!parent9.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate19 = firstSeen.getText();

					System.out.println("Analytics Image First Seen Date: "+imageDate19);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join9=null;
					String[] splitString9 = imageDate19.split(" ");
					for(int i=0;i<splitString9.length-2;i++) {
						String actualDate9=splitString9[i]; 
						join9= splitString9[i+1]+" "+ splitString9[i]+" " + splitString9[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join9);
					}
					Assert.assertEquals(imageDate9, imageDate19);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate19);

					String join209=null;
					String[] splitString209 = imageDate21.split(" ");
					for(int i=0;i<splitString209.length-2;i++) {
						String actualDate209=splitString209[i]; 
						join209= splitString209[i+1]+" "+ splitString209[i]+" " + splitString209[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join209);
					}
					Assert.assertEquals(lastimageDate9, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate9+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate9+"="+imageDate21);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate9);
			driver.switchTo().window(parent9);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -10 Ad</font>  ");
			System.out.println(" ");
			System.out.println("10 Ads image");

			helper.Scrollintoview(date10);
			helper.highLightElement(driver, date10);
			String imageDate10=date10.getText();
			System.out.println("First Image Date is :"+imageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate10); 

			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10);

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);

			String linkText10 = ShowAnalytics10.getAttribute("href");
			String idString10 = null;
			String[] splitStringid10 = linkText10.split("/");
			for(int i=0;i<splitStringid10.length;i++) {
				String actualDate10=splitStringid10[splitStringid10.length-1]; 
				System.out.println("actualDate : " + actualDate10);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate10);
				break;
			}
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent10=driver.getWindowHandle();
			Set<String>s10=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I10= s10.iterator();
			while(I10.hasNext())
			{
				String child_window=I10.next();
				if(!parent10.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join10=null;
					String[] splitString10 = imageDate11.split(" ");
					for(int i=0;i<splitString10.length-2;i++) {
						String actualDate10=splitString10[i]; 
						join10= splitString10[i+1]+" "+ splitString10[i]+" " + splitString10[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join10);
					}
					Assert.assertEquals(imageDate10, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);

					String join2010=null;
					String[] splitString2010 = imageDate21.split(" ");
					for(int i=0;i<splitString2010.length-2;i++) {
						String actualDate2010=splitString2010[i]; 
						join2010= splitString2010[i+1]+" "+ splitString2010[i]+" " + splitString2010[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2010);
					}
					Assert.assertEquals(lastimageDate10, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate10+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate10+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate10);
			driver.switchTo().window(parent10);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -11 Ad </font>  ");
			System.out.println(" ");
			System.out.println("11 Ads image");

			helper.Scrollintoview(date11);
			helper.highLightElement(driver, date11);
			String imageDate11=date11.getText();
			System.out.println("First Image Date is :"+imageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate11); 

			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11);

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);

			String linkText11 = ShowAnalytics11.getAttribute("href");
			String idString11 = null;
			String[] splitStringid11 = linkText11.split("/");
			for(int i=0;i<splitStringid11.length;i++) {
				String actualDate11=splitStringid11[splitStringid11.length-1]; 
				System.out.println("actualDate : " + actualDate11);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate11);
				break;
			}
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent11=driver.getWindowHandle();
			Set<String>s11=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I110= s11.iterator();
			while(I110.hasNext())
			{
				String child_window=I110.next();
				if(!parent11.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate101 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate101);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join11=null;
					String[] splitString11 = imageDate101.split(" ");
					for(int i=0;i<splitString11.length-2;i++) {
						String actualDate11=splitString11[i]; 
						join11= splitString11[i+1]+" "+ splitString11[i]+" " + splitString11[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join11);
					}
					Assert.assertEquals(imageDate11, imageDate101);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);

					String join2011=null;
					String[] splitString2011 = imageDate21.split(" ");
					for(int i=0;i<splitString2011.length-2;i++) {
						String actualDate2011=splitString2011[i]; 
						join2011= splitString2011[i+1]+" "+ splitString2011[i]+" " + splitString2011[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2011);
					}
					Assert.assertEquals(lastimageDate11, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate11+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate11+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate11);
			driver.switchTo().window(parent11);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -12 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("12 Ads image");

			helper.Scrollintoview(date12);
			helper.highLightElement(driver, date12);
			String imageDate12=date12.getText();
			System.out.println("First Image Date is :"+imageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate12); 

			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12);

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);

			String linkText12 = ShowAnalytics12.getAttribute("href");
			String idString12 = null;
			String[] splitStringid12 = linkText12.split("/");
			for(int i=0;i<splitStringid12.length;i++) {
				String actualDate12=splitStringid12[splitStringid12.length-1]; 
				System.out.println("actualDate : " + actualDate12);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate12);
				break;
			}

			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent12=driver.getWindowHandle();
			Set<String>s12=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I112= s12.iterator();
			while(I112.hasNext())
			{
				String child_window=I112.next();
				if(!parent12.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate112 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate112);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join12=null;
					String[] splitString12 = imageDate112.split(" ");
					for(int i=0;i<splitString12.length-2;i++) {
						String actualDate12=splitString12[i]; 
						join12= splitString12[i+1]+" "+ splitString12[i]+" " + splitString12[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join12);
					}
					Assert.assertEquals(imageDate12, imageDate112);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate12+"="+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate12+"="+join12);

					String join2012=null;
					String[] splitString2012 = imageDate21.split(" ");
					for(int i=0;i<splitString2012.length-2;i++) {
						String actualDate2012=splitString2012[i]; 
						join2012= splitString2012[i+1]+" "+ splitString2012[i]+" " + splitString2012[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2012);
					}
					Assert.assertEquals(lastimageDate12, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate12+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate12+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate12);
			driver.switchTo().window(parent12);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("13 Ads image");

			helper.Scrollintoview(date13);
			helper.highLightElement(driver, date13);
			String imageDate13=date13.getText();
			System.out.println("First Image Date is :"+imageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate13); 

			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13);

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);

			String linkText13 = ShowAnalytics13.getAttribute("href");
			String idString13 = null;
			String[] splitStringid13 = linkText13.split("/");
			for(int i=0;i<splitStringid13.length;i++) {
				String actualDate13=splitStringid13[splitStringid13.length-1]; 
				System.out.println("actualDate : " + actualDate13);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate13);
				break;
			}

			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent13=driver.getWindowHandle();
			Set<String>s13=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I13= s13.iterator();
			while(I13.hasNext())
			{
				String child_window=I13.next();
				if(!parent13.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate113 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate113);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join13=null;
					String[] splitString13 = imageDate113.split(" ");
					for(int i=0;i<splitString13.length-2;i++) {
						String actualDate13=splitString13[i]; 
						join13= splitString13[i+1]+" "+ splitString13[i]+" " + splitString13[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join13);
					}
					Assert.assertEquals(imageDate13, imageDate113);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate113);

					String join2013=null;
					String[] splitString2013 = imageDate21.split(" ");
					for(int i=0;i<splitString2013.length-2;i++) {
						String actualDate2013=splitString2013[i]; 
						join2013= splitString2013[i+1]+" "+ splitString2013[i]+" " + splitString2013[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2013);
					}
					Assert.assertEquals(lastimageDate13, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate13+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate13+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate13);
			driver.switchTo().window(parent13);
		} catch (Exception e) {

			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("14 Ads image");

			helper.Scrollintoview(date14);
			helper.highLightElement(driver, date14);
			String imageDate14=date14.getText();
			System.out.println("First Image Date is :"+imageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate14); 

			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14);

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);

			String linkText14 = ShowAnalytics14.getAttribute("href");
			String idString14 = null;
			String[] splitStringid14 = linkText14.split("/");
			for(int i=0;i<splitStringid14.length;i++) {
				String actualDate14=splitStringid14[splitStringid14.length-1]; 
				System.out.println("actualDate : " + actualDate14);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate14);
				break;
			}

			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent14=driver.getWindowHandle();
			Set<String>s14=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I14= s14.iterator();
			while(I14.hasNext())
			{
				String child_window=I14.next();
				if(!parent14.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate114 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate114);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join14=null;
					String[] splitString14 = imageDate114.split(" ");
					for(int i=0;i<splitString14.length-2;i++) {
						String actualDate14=splitString14[i]; 
						join14= splitString14[i+1]+" "+ splitString14[i]+" " + splitString14[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join14);
					}
					Assert.assertEquals(imageDate14, imageDate114);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate114);

					String join2014=null;
					String[] splitString2014 = imageDate21.split(" ");
					for(int i=0;i<splitString2014.length-2;i++) {
						String actualDate2014=splitString2014[i]; 
						join2014= splitString2014[i+1]+" "+ splitString2014[i]+" " + splitString2014[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2014);
					}
					Assert.assertEquals(lastimageDate14, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate14+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate14+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate14);
			driver.switchTo().window(parent14);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("Second Ads image");

			helper.Scrollintoview(date15);
			helper.highLightElement(driver, date15);
			String imageDate15=date15.getText();
			System.out.println("First Image Date is :"+imageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate15); 

			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15);

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);

			String linkText15 = ShowAnalytics15.getAttribute("href");
			String idString15 = null;
			String[] splitStringid15 = linkText15.split("/");
			for(int i=0;i<splitStringid15.length;i++) {
				String actualDate15=splitStringid15[splitStringid15.length-1]; 
				System.out.println("actualDate : " + actualDate15);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate15);
				break;
			}
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent15=driver.getWindowHandle();
			Set<String>s15=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I15= s15.iterator();
			while(I15.hasNext())
			{
				String child_window=I15.next();
				if(!parent15.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate115 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate115);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join15=null;
					String[] splitString15 = imageDate115.split(" ");
					for(int i=0;i<splitString15.length-2;i++) {
						String actualDate15=splitString15[i]; 
						join15= splitString15[i+1]+" "+ splitString15[i]+" " + splitString15[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join15);
					}
					Assert.assertEquals(imageDate15, imageDate115);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);

					String join2015=null;
					String[] splitString2015 = imageDate21.split(" ");
					for(int i=0;i<splitString2015.length-2;i++) {
						String actualDate2015=splitString2015[i]; 
						join2015= splitString2015[i+1]+" "+ splitString2015[i]+" " + splitString2015[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2015);
					}
					Assert.assertEquals(lastimageDate15, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate15+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate15+"="+imageDate21);

					driver.close();
				}
			}

			System.out.println("Current Image Date: "+imageDate15);
			driver.switchTo().window(parent15);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsScrollintoview(Clear_Filters);
		Clear_Filters.click();
		//	Reporter.log("<B><font color = 'orange'> Step9 -</font> Clicked On Clear Filters Icon");
		helper.waitForPageToLoad();
		System.out.println(" ");
		Reporter.log(" ");
	}


	public void GdnPagePost_Date_Between_Page() throws Exception
	{
		Reporter.log("<B><font color = 'purple'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();


		//		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'purple'> Step2 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(gdn);
		helper.highLightElement(driver, gdn);
		gdn.click();

		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'purple'> Step3 -</font> I am on the page :" + Page_titel);

		Assert.assertTrue(gdn.isDisplayed(), "PowerAdSpy | GDN Dashboard");

		Reporter.log("<B><font color = 'purple'> Step4 -</font> Clicked On GDN  Icon");
		//		helper.waitForPageToLoad();


		System.out.println();
		System.out.println("ShortBy Newest:");
		Reporter.log("    ");
		Reporter.log("<B><font color = 'green'>  - ShortBy Newest Step will Start from here </font>  ");
		helper.waitFor(sortBy);
		helper.highLightElement(driver, sortBy);
		sortBy.click();
		Reporter.log("");
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On sortBy Icon");

		helper.waitFor(SortBy_Newest);
		helper.highLightElement(driver, SortBy_Newest);
		SortBy_Newest.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On SortBy Newest Icon");


		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

	}

	public void PostDateBetween_All() throws InterruptedException
	{

		System.out.println();
		System.out.println("-ShortBy Newest -Ad Post Date Between:");
		Reporter.log("<B><font color = 'green'>  -ShortBy Newest -Post Date Between All Step will Start from here  </font> ");
		helper.waitFor(post_date_between_dropdown);
		helper.highLightElement(driver, post_date_between_dropdown);
		post_date_between_dropdown.click();
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Post Date Between filter Icon");

		helper.waitFor(post_date_between_all);
		helper.highLightElement(driver, post_date_between_all);
		post_date_between_all.click();
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On  Post Between All Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step7 -</font>  Total Ad Count is :" +totaladscount);

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -1 Ad- -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			helper.Scrollintoview(date1);
			helper.highLightElement(driver, date1);
			String imageDate=date1.getText();
			System.out.println("First Image Date is :"+imageDate);
			System.out.println("Current Image Date: "+imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate); 

			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);

			String linkText1 = ShowAnalytics1.getAttribute("href");
			String idString1 = null;
			String[] splitStringid1 = linkText1.split("/");
			for(int i=0;i<splitStringid1.length;i++) {
				String actualDate1=splitStringid1[splitStringid1.length-1]; 
				System.out.println("actualDate : " + actualDate1);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate1);
				break;
			}

			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1= s.iterator();
			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					Thread.sleep(2000);
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.Scrollintoview(firstSeen);
					String imageDate1 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(lastSeen);
					String imageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate2);
					helper.waitFor(postDate);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join=null;
					String[] splitString = imageDate1.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						join= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join);
					}
					Assert.assertEquals(imageDate, imageDate2);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate+"="+imageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching First Seen  Date Assert Pass :"+imageDate+"="+imageDate2);


					String join201=null;
					String[] splitString201 = imageDate2.split(" ");
					for(int i=0;i<splitString201.length-2;i++) {
						String actualDate201=splitString201[i]; 
						join201= splitString201[i+1]+" "+ splitString201[i]+" " + splitString201[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join201);
					}
					Assert.assertEquals(lastimageDate1, imageDate1);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate1+"="+imageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate1+"="+imageDate1);

					driver.close();
				}
			}

			driver.switchTo().window(parent);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -2 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("2 Ads image");

			helper.Scrollintoview(date2);
			helper.highLightElement(driver, date2);
			String imageDate2=date2.getText();
			System.out.println("First Image Date is :"+imageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate2); 

			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2);

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);

			String linkText2 = ShowAnalytics2.getAttribute("href");
			String idString2 = null;
			String[] splitStringid2 = linkText2.split("/");
			for(int i=0;i<splitStringid2.length;i++) {
				String actualDate2=splitStringid2[splitStringid2.length-1]; 
				System.out.println("actualDate : " + actualDate2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate2);
				break;
			}
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent1=driver.getWindowHandle();
			Set<String>s1=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I11= s1.iterator();
			while(I11.hasNext())
			{
				String child_window=I11.next();
				if(!parent1.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					Thread.sleep(2000);
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate3 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate3);

					String join2=null;
					String[] splitString2 = imageDate11.split(" ");
					for(int i=0;i<splitString2.length-2;i++) {
						String actualDate2=splitString2[i]; 
						join2= splitString2[i+1]+" "+ splitString2[i]+" " + splitString2[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2);
					}
					Assert.assertEquals(imageDate2, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate2+"="+imageDate21);

					String join202=null;
					String[] splitString202 = imageDate21.split(" ");
					for(int i=0;i<splitString202.length-2;i++) {
						String actualDate202=splitString202[i]; 
						join202= splitString202[i+1]+" "+ splitString202[i]+" " + splitString202[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join202);
					}
					Assert.assertEquals(lastimageDate2, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate2+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate2+"="+imageDate11);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate2);
			driver.switchTo().window(parent1);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -3 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("3 Ads image");

			helper.Scrollintoview(date3);
			helper.highLightElement(driver, date3);
			String imageDate3=date3.getText();
			System.out.println("First Image Date is :"+imageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate3); 
			helper.waitFor(firstSeen);
			helper.waitFor(lastSeen);
			helper.waitFor(postDate);
			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3);

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);

			String linkText3 = ShowAnalytics3.getAttribute("href");
			String idString3 = null;
			String[] splitStringid3 = linkText3.split("/");
			for(int i=0;i<splitStringid3.length;i++) {
				String actualDate3=splitStringid3[splitStringid3.length-1]; 
				System.out.println("actualDate : " + actualDate3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate3);
				break;
			}
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent121=driver.getWindowHandle();
			Set<String>s121=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I111= s121.iterator();
			while(I111.hasNext())
			{
				String child_window=I111.next();
				if(!parent121.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join3=null;
					String[] splitString3 = imageDate111.split(" ");
					for(int i=0;i<splitString3.length-2;i++) {
						String actualDate3=splitString3[i]; 
						join3= splitString3[i+1]+" "+ splitString3[i]+" " + splitString3[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join3);
					}

					Assert.assertEquals(lastimageDate3,imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate3+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+lastimageDate3+"="+imageDate21);

					String join203=null;
					String[] splitString203 = imageDate21.split(" ");
					for(int i=0;i<splitString203.length-2;i++) {
						String actualDate203=splitString203[i]; 
						join203= splitString203[i+1]+" "+ splitString203[i]+" " + splitString203[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join203);
					}
					Assert.assertEquals(lastimageDate3, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate3+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate3+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate3);
			driver.switchTo().window(parent121);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}	


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -4 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("4 Ads image");
			helper.Scrollintoview(date4);
			helper.highLightElement(driver, date4);
			String imageDate4=date4.getText();
			System.out.println("First Image Date is :"+imageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate4); 

			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4);

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);

			String linkText4 = ShowAnalytics4.getAttribute("href");
			String idString4 = null;
			String[] splitStringid4 = linkText4.split("/");
			for(int i=0;i<splitStringid4.length;i++) {
				String actualDate4=splitStringid4[splitStringid4.length-1]; 
				System.out.println("actualDate : " + actualDate4);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate4);
				break;
			}

			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent111=driver.getWindowHandle();
			Set<String>s111=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I1111= s111.iterator();
			while(I1111.hasNext())
			{
				String child_window=I1111.next();
				if(!parent111.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate1111 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate1111);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join4=null;
					String[] splitString4 = imageDate1111.split(" ");
					for(int i=0;i<splitString4.length-2;i++) {
						String actualDate4=splitString4[i]; 
						join4= splitString4[i+1]+" "+ splitString4[i]+" " + splitString4[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join4);
					}
					Assert.assertEquals(imageDate4, imageDate1111);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate4+"="+imageDate1111);

					String join204=null;
					String[] splitString204 = imageDate21.split(" ");
					for(int i=0;i<splitString204.length-2;i++) {
						String actualDate204=splitString204[i]; 
						join204= splitString204[i+1]+" "+ splitString204[i]+" " + splitString204[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join204);
					}
					Assert.assertEquals(lastimageDate4, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate4+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate4+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate4);
			driver.switchTo().window(parent111);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -5 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("5 Ads image");
			helper.Scrollintoview(date5);
			helper.highLightElement(driver, date5);
			String imageDate5=date5.getText();
			System.out.println("First Image Date is :"+imageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate5); 

			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5);

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);

			String linkText5 = ShowAnalytics5.getAttribute("href");
			String idString5 = null;
			String[] splitStringid5 = linkText5.split("/");
			for(int i=0;i<splitStringid5.length;i++) {
				String actualDate5=splitStringid5[splitStringid5.length-1]; 
				System.out.println("actualDate : " + actualDate5);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate5);
				break;
			}

			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent5=driver.getWindowHandle();
			Set<String>s5=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I5= s5.iterator();
			while(I5.hasNext())
			{
				String child_window=I5.next();
				if(!parent5.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate6 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate6);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join5=null;
					String[] splitString5 = imageDate6.split(" ");
					for(int i=0;i<splitString5.length-2;i++) {
						String actualDate5=splitString5[i]; 
						join5= splitString5[i+1]+" "+ splitString5[i]+" " + splitString5[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join5);
					}
					Assert.assertEquals(imageDate5, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate5+"="+imageDate21);

					String join205=null;
					String[] splitString205 = imageDate21.split(" ");
					for(int i=0;i<splitString205.length-2;i++) {
						String actualDate205=splitString205[i]; 
						join205= splitString205[i+1]+" "+ splitString205[i]+" " + splitString205[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join205);
					}
					Assert.assertEquals(lastimageDate5, imageDate6);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate5+"="+imageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate5+"="+imageDate6);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate5);
			driver.switchTo().window(parent5);
		} catch (Exception e) {
			// TODO: handle exception	
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("6 Ads image");
			helper.Scrollintoview(date6);
			helper.highLightElement(driver, date6);
			String imageDate6=date6.getText();
			System.out.println("First Image Date is :"+imageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate6); 

			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6);

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);

			String linkText6 = ShowAnalytics6.getAttribute("href");
			String idString6 = null;
			String[] splitStringid6 = linkText6.split("/");
			for(int i=0;i<splitStringid6.length;i++) {
				String actualDate6=splitStringid6[splitStringid6.length-1]; 
				System.out.println("actualDate : " + actualDate6);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate6);
				break;
			}

			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent6=driver.getWindowHandle();
			Set<String>s6=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I6= s6.iterator();
			while(I6.hasNext())
			{
				String child_window=I6.next();
				if(!parent6.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join6=null;
					String[] splitString6 = imageDate11.split(" ");
					for(int i=0;i<splitString6.length-2;i++) {
						String actualDate6=splitString6[i]; 
						join6= splitString6[i+1]+" "+ splitString6[i]+" " + splitString6[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join6);
					}
					Assert.assertEquals(imageDate6, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate6+"="+imageDate21);

					String join206=null;
					String[] splitString206 = imageDate21.split(" ");
					for(int i=0;i<splitString206.length-2;i++) {
						String actualDate206=splitString206[i]; 
						join206= splitString206[i+1]+" "+ splitString206[i]+" " + splitString206[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join206);
					}
					Assert.assertEquals(lastimageDate6, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+lastimageDate6+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate6+"="+imageDate11);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate6);
			driver.switchTo().window(parent6);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}

		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad- -</font>  ");
			System.out.println(" ");
			System.out.println("7 Ads image");
			helper.Scrollintoview(date7);
			helper.highLightElement(driver, date7);
			String imageDate7=date7.getText();
			System.out.println("First Image Date is :"+imageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate7); 

			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7);

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);

			String linkText7 = ShowAnalytics7.getAttribute("href");
			String idString7 = null;
			String[] splitStringid7 = linkText7.split("/");
			for(int i=0;i<splitStringid7.length;i++) {
				String actualDate7=splitStringid7[splitStringid7.length-1]; 
				System.out.println("actualDate : " + actualDate7);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate7);
				break;
			}
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent17=driver.getWindowHandle();
			Set<String>s17=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I17= s17.iterator();
			while(I17.hasNext())
			{
				String child_window=I17.next();
				if(!parent17.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join7=null;
					String[] splitString7 = imageDate11.split(" ");
					for(int i=0;i<splitString7.length-2;i++) {
						String actualDate7=splitString7[i]; 
						join7= splitString7[i+1]+" "+ splitString7[i]+" " + splitString7[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join7);
					}
					Assert.assertEquals(imageDate7, imageDate31);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate7+"="+imageDate31);

					String join207=null;
					String[] splitString207 = imageDate21.split(" ");
					for(int i=0;i<splitString207.length-2;i++) {
						String actualDate207=splitString207[i]; 
						join207= splitString207[i+1]+" "+ splitString207[i]+" " + splitString207[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join207);
					}
					Assert.assertEquals(lastimageDate7, imageDate11);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate7+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate7+"="+imageDate11);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate7);
			driver.switchTo().window(parent17);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -8 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("8 Ads image");
			helper.Scrollintoview(date8);
			helper.highLightElement(driver, date8);
			String imageDate8=date8.getText();
			System.out.println("First Image Date is :"+imageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate8); 

			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8);

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);

			String linkText8 = ShowAnalytics8.getAttribute("href");
			String idString8 = null;
			String[] splitStringid8 = linkText8.split("/");
			for(int i=0;i<splitStringid8.length;i++) {
				String actualDate8=splitStringid8[splitStringid8.length-1]; 
				System.out.println("actualDate : " + actualDate8);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate8);
				break;
			}

			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent8=driver.getWindowHandle();
			Set<String>s8=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I8= s8.iterator();
			while(I8.hasNext())
			{
				String child_window=I8.next();
				if(!parent8.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join8=null;
					String[] splitString8 = imageDate11.split(" ");
					for(int i=0;i<splitString8.length-2;i++) {
						String actualDate8=splitString8[i]; 
						join8= splitString8[i+1]+" "+ splitString8[i]+" " + splitString8[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join8);
					}
					Assert.assertEquals(imageDate8, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font>Both Matching Date First Seen Assert Pass :"+imageDate8+"="+imageDate21);

					String join208=null;
					String[] splitString208 = imageDate21.split(" ");
					for(int i=0;i<splitString208.length-2;i++) {
						String actualDate208=splitString208[i]; 
						join208= splitString208[i+1]+" "+ splitString208[i]+" " + splitString208[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join208);
					}
					Assert.assertEquals(lastimageDate8, imageDate11);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate8+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate8+"="+imageDate11);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate8);
			driver.switchTo().window(parent8);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad- </font>  ");
			System.out.println(" ");
			System.out.println("9 Ads image");
			helper.Scrollintoview(date9);
			helper.highLightElement(driver, date9);
			String imageDate9=date9.getText();
			System.out.println("First Image Date is :"+imageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate9); 

			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9);

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);

			String linkText9 = ShowAnalytics9.getAttribute("href");
			String idString9 = null;
			String[] splitStringid9 = linkText9.split("/");
			for(int i=0;i<splitStringid9.length;i++) {
				String actualDate9=splitStringid9[splitStringid9.length-1]; 
				System.out.println("actualDate : " + actualDate9);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate9);
				break;
			}
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent9=driver.getWindowHandle();
			Set<String>s9=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I9=s9.iterator();
			while(I9.hasNext())
			{
				String child_window=I9.next();
				if(!parent9.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate19 = firstSeen.getText();

					System.out.println("Analytics Image First Seen Date: "+imageDate19);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join9=null;
					String[] splitString9 = imageDate19.split(" ");
					for(int i=0;i<splitString9.length-2;i++) {
						String actualDate9=splitString9[i]; 
						join9= splitString9[i+1]+" "+ splitString9[i]+" " + splitString9[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join9);
					}
					Assert.assertEquals(imageDate9, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate9+"="+imageDate21);

					String join209=null;
					String[] splitString209 = imageDate21.split(" ");
					for(int i=0;i<splitString209.length-2;i++) {
						String actualDate209=splitString209[i]; 
						join209= splitString209[i+1]+" "+ splitString209[i]+" " + splitString209[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join209);
					}
					Assert.assertEquals(lastimageDate9, imageDate19);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate9+"="+imageDate19);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate9+"="+imageDate19);


					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate9);
			driver.switchTo().window(parent9);
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -10 Ad</font>  ");
			System.out.println(" ");
			System.out.println("10 Ads image");

			helper.Scrollintoview(date10);
			helper.highLightElement(driver, date10);
			String imageDate10=date10.getText();
			System.out.println("First Image Date is :"+imageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate10); 

			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10);

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);

			String linkText10 = ShowAnalytics10.getAttribute("href");
			String idString10 = null;
			String[] splitStringid10 = linkText10.split("/");
			for(int i=0;i<splitStringid10.length;i++) {
				String actualDate10=splitStringid10[splitStringid10.length-1]; 
				System.out.println("actualDate : " + actualDate10);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate10);
				break;
			}
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent10=driver.getWindowHandle();
			Set<String>s10=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I10= s10.iterator();
			while(I10.hasNext())
			{
				String child_window=I10.next();
				if(!parent10.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate11 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate11);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join10=null;
					String[] splitString10 = imageDate11.split(" ");
					for(int i=0;i<splitString10.length-2;i++) {
						String actualDate10=splitString10[i]; 
						join10= splitString10[i+1]+" "+ splitString10[i]+" " + splitString10[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join10);
					}
					Assert.assertEquals(imageDate10, imageDate11);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate10+"="+imageDate11);

					String join2010=null;
					String[] splitString2010 = imageDate21.split(" ");
					for(int i=0;i<splitString2010.length-2;i++) {
						String actualDate2010=splitString2010[i]; 
						join2010= splitString2010[i+1]+" "+ splitString2010[i]+" " + splitString2010[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2010);
					}
					Assert.assertEquals(lastimageDate10, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate10+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate10+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate10);
			driver.switchTo().window(parent10);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -11 Ad </font>  ");
			System.out.println(" ");
			System.out.println("11 Ads image");

			helper.Scrollintoview(date11);
			helper.highLightElement(driver, date11);
			String imageDate11=date11.getText();
			System.out.println("First Image Date is :"+imageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate11); 

			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11);

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);

			String linkText11 = ShowAnalytics11.getAttribute("href");
			String idString11 = null;
			String[] splitStringid11 = linkText11.split("/");
			for(int i=0;i<splitStringid11.length;i++) {
				String actualDate11=splitStringid11[splitStringid11.length-1]; 
				System.out.println("actualDate : " + actualDate11);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate11);
				break;
			}
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent11=driver.getWindowHandle();
			Set<String>s11=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I110= s11.iterator();
			while(I110.hasNext())
			{
				String child_window=I110.next();
				if(!parent11.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate101 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate101);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join11=null;
					String[] splitString11 = imageDate101.split(" ");
					for(int i=0;i<splitString11.length-2;i++) {
						String actualDate11=splitString11[i]; 
						join11= splitString11[i+1]+" "+ splitString11[i]+" " + splitString11[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join11);
					}
					Assert.assertEquals(imageDate11, imageDate101);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate11+"="+imageDate101);

					String join2011=null;
					String[] splitString2011 = imageDate21.split(" ");
					for(int i=0;i<splitString2011.length-2;i++) {
						String actualDate2011=splitString2011[i]; 
						join2011= splitString2011[i+1]+" "+ splitString2011[i]+" " + splitString2011[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2011);
					}
					Assert.assertEquals(lastimageDate11, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate11+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate11+"="+imageDate21);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate11);
			driver.switchTo().window(parent11);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -12 Ad  -</font>  ");
			System.out.println(" ");
			System.out.println("12 Ads image");

			helper.Scrollintoview(date12);
			helper.highLightElement(driver, date12);
			String imageDate12=date12.getText();
			System.out.println("First Image Date is :"+imageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate12); 

			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12);

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);

			String linkText12 = ShowAnalytics12.getAttribute("href");
			String idString12 = null;
			String[] splitStringid12 = linkText12.split("/");
			for(int i=0;i<splitStringid12.length;i++) {
				String actualDate12=splitStringid12[splitStringid12.length-1]; 
				System.out.println("actualDate : " + actualDate12);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate12);
				break;
			}

			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent12=driver.getWindowHandle();
			Set<String>s12=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I112= s12.iterator();
			while(I112.hasNext())
			{
				String child_window=I112.next();
				if(!parent12.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate112 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate112);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join12=null;
					String[] splitString12 = imageDate112.split(" ");
					for(int i=0;i<splitString12.length-2;i++) {
						String actualDate12=splitString12[i]; 
						join12= splitString12[i+1]+" "+ splitString12[i]+" " + splitString12[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join12);
					}
					Assert.assertEquals(imageDate12, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate12+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate12+"="+imageDate21);

					String join2012=null;
					String[] splitString2012 = imageDate21.split(" ");
					for(int i=0;i<splitString2012.length-2;i++) {
						String actualDate2012=splitString2012[i]; 
						join2012= splitString2012[i+1]+" "+ splitString2012[i]+" " + splitString2012[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2012);
					}
					Assert.assertEquals(lastimageDate12, imageDate112);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate12+"="+imageDate112);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate12+"="+imageDate112);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate12);
			driver.switchTo().window(parent12);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("13 Ads image");

			helper.Scrollintoview(date13);
			helper.highLightElement(driver, date13);
			String imageDate13=date13.getText();
			System.out.println("First Image Date is :"+imageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate13); 

			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13);

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);

			String linkText13 = ShowAnalytics13.getAttribute("href");
			String idString13 = null;
			String[] splitStringid13 = linkText13.split("/");
			for(int i=0;i<splitStringid13.length;i++) {
				String actualDate13=splitStringid13[splitStringid13.length-1]; 
				System.out.println("actualDate : " + actualDate13);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate13);
				break;
			}

			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent13=driver.getWindowHandle();
			Set<String>s13=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I13= s13.iterator();
			while(I13.hasNext())
			{
				String child_window=I13.next();
				if(!parent13.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate113 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate113);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join13=null;
					String[] splitString13 = imageDate113.split(" ");
					for(int i=0;i<splitString13.length-2;i++) {
						String actualDate13=splitString13[i]; 
						join13= splitString13[i+1]+" "+ splitString13[i]+" " + splitString13[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join13);
					}
					Assert.assertEquals(imageDate13, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate13+"="+imageDate21);

					String join2013=null;
					String[] splitString2013 = imageDate21.split(" ");
					for(int i=0;i<splitString2013.length-2;i++) {
						String actualDate2013=splitString2013[i]; 
						join2013= splitString2013[i+1]+" "+ splitString2013[i]+" " + splitString2013[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2013);
					}
					Assert.assertEquals(lastimageDate13, imageDate113);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate13+"="+imageDate113);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate13+"="+imageDate113);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate13);
			driver.switchTo().window(parent13);
		} catch (Exception e) {

			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			// TODO: handle exception
		}


		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("14 Ads image");

			helper.Scrollintoview(date14);
			helper.highLightElement(driver, date14);
			String imageDate14=date14.getText();
			System.out.println("First Image Date is :"+imageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate14); 

			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14);

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);

			String linkText14 = ShowAnalytics14.getAttribute("href");
			String idString14 = null;
			String[] splitStringid14 = linkText14.split("/");
			for(int i=0;i<splitStringid14.length;i++) {
				String actualDate14=splitStringid14[splitStringid14.length-1]; 
				System.out.println("actualDate : " + actualDate14);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate14);
				break;
			}

			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent14=driver.getWindowHandle();
			Set<String>s14=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I14= s14.iterator();
			while(I14.hasNext())
			{
				String child_window=I14.next();
				if(!parent14.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(firstSeen);
					helper.waitFor(lastSeen);
					helper.waitFor(postDate);
					helper.Scrollintoview(firstSeen);
					String imageDate114 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate114);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join14=null;
					String[] splitString14 = imageDate114.split(" ");
					for(int i=0;i<splitString14.length-2;i++) {
						String actualDate14=splitString14[i]; 
						join14= splitString14[i+1]+" "+ splitString14[i]+" " + splitString14[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join14);
					}
					Assert.assertEquals(imageDate14, imageDate21);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate14+"="+imageDate21);

					String join2014=null;
					String[] splitString2014 = imageDate21.split(" ");
					for(int i=0;i<splitString2014.length-2;i++) {
						String actualDate2014=splitString2014[i]; 
						join2014= splitString2014[i+1]+" "+ splitString2014[i]+" " + splitString2014[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2014);
					}
					Assert.assertEquals(lastimageDate14, imageDate114);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate14+"="+imageDate114);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate14+"="+imageDate114);

					driver.close();
				}
			}
			System.out.println("Current Image Date: "+imageDate14);
			driver.switchTo().window(parent14);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try {
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
			System.out.println(" ");
			System.out.println("Second Ads image");

			helper.Scrollintoview(date15);
			helper.highLightElement(driver, date15);
			String imageDate15=date15.getText();
			System.out.println("First Image Date is :"+imageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> First Image Date is :"+imageDate15); 

			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15);

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);

			String linkText15 = ShowAnalytics15.getAttribute("href");
			String idString15 = null;
			String[] splitStringid15 = linkText15.split("/");
			for(int i=0;i<splitStringid15.length;i++) {
				String actualDate15=splitStringid15[splitStringid15.length-1]; 
				System.out.println("actualDate : " + actualDate15);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the  Ad = " + actualDate15);
				break;
			}
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			String parent15=driver.getWindowHandle();
			Set<String>s15=driver.getWindowHandles();
			// Now iterate using Iterator
			Iterator<String> I15= s15.iterator();
			while(I15.hasNext())
			{
				String child_window=I15.next();
				if(!parent15.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(firstSeen);
					String imageDate115 = firstSeen.getText();
					System.out.println("Analytics Image First Seen Date: "+imageDate115);
					helper.Scrollintoview(lastSeen);
					String imageDate21 = lastSeen.getText();
					System.out.println("Analytics Image Last Seen Date: "+imageDate21);
					helper.Scrollintoview(postDate);
					String imageDate31 = postDate.getText();
					System.out.println("Analytics Image Post Seen Date: "+imageDate31);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of First Seen is :"+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post Seen is :"+imageDate31);

					String join15=null;
					String[] splitString15 = imageDate115.split(" ");
					for(int i=0;i<splitString15.length-2;i++) {
						String actualDate15=splitString15[i]; 
						join15= splitString15[i+1]+" "+ splitString15[i]+" " + splitString15[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join15);
					}
					Assert.assertEquals(imageDate15, imageDate115);
					System.out.println("Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching Date First Seen Assert Pass :"+imageDate15+"="+imageDate115);

					String join2015=null;
					String[] splitString2015 = imageDate21.split(" ");
					for(int i=0;i<splitString2015.length-2;i++) {
						String actualDate2015=splitString2015[i]; 
						join2015= splitString2015[i+1]+" "+ splitString2015[i]+" " + splitString2015[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("lastseen Date: " + join2015);
					}
					Assert.assertEquals(lastimageDate15, imageDate21);
					System.out.println("Both Matching Date last Seen Assert Pass :"+lastimageDate15+"="+imageDate21);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both Matching last Seen  Date Assert Pass :"+lastimageDate15+"="+imageDate21);

					driver.close();
				}
			}

			System.out.println("Current Image Date: "+imageDate15);
			driver.switchTo().window(parent15);
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



	}



	public void PostDateBetween_Today() throws InterruptedException
	{


		Reporter.log("       " );
		helper.waitForPageToLoad();
		System.out.println();
		System.out.println("-ShortBy Newest -Ad Post Date Between:");
		Reporter.log("<B><font color = 'green'>  -ShortBy Newest -Post Date Between Today Step will Start from here  </font> ");
		helper.waitFor(post_date_between_dropdown);
		helper.highLightElement(driver, post_date_between_dropdown);
		helper.jsScrollintoview(post_date_between_dropdown);
		post_date_between_dropdown.click();
		Reporter.log("<B><font color = 'orange'> Step4> -</font> Clicked On Post Date Between filter Icon");

		helper.waitFor(post_date_between_today);
		helper.highLightElement(driver, post_date_between_today);
		helper.jsScrollintoview(post_date_between_today);
		post_date_between_today.click();
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On  Post Between Today Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step7 -</font>  Total Ad Count is :" +totaladscount);


		try {
			String lastimageDate1=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date1);
			String imageDate1=date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
			System.out.println("Current Image Date: "+imageDate1);

			lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate1=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate1 = lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate1);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate1);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate1, imageDate1);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			String lastimageDate2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date2);
			String imageDate2=date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
			System.out.println("Current Image Date: "+imageDate2);

			lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate2=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate2);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate2);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate2, imageDate2);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate3=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.waitFor(date3);
			helper.Scrollintoview(date3);
			helper.waitFor(date3);
			String imageDate3=date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
			System.out.println("Current Image Date: "+imageDate3);
			helper.waitFor(lastdate3);
			helper.Scrollintoview(lastdate3);
			helper.waitFor(lastdate3);
			lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			helper.waitFor(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.Scrollintoview(postdate);
					helper.waitFor(postdate);
					
					String postdate3=postdate.getText();
					helper.waitFor(lastSeen);
					helper.Scrollintoview(lastSeen);
					helper.waitFor(lastSeen);
					lastimageDate3= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate3);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate3);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate3, imageDate3);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate4=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.waitFor(date4);
			helper.Scrollintoview(date4);
			helper.waitFor(date4);
			String imageDate4=date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
			System.out.println("Current Image Date: "+imageDate4);
			helper.waitFor(lastdate4);
			helper.Scrollintoview(lastdate4);
			helper.waitFor(lastdate4);
			lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 
			helper.waitFor(ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			helper.waitFor(ShowAnalytics4);
			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.Scrollintoview(postdate);
					helper.waitFor(postdate);
					String postdate4=postdate.getText();
					helper.waitFor(lastSeen);
					helper.Scrollintoview(lastSeen);
					helper.waitFor(lastSeen);
					lastimageDate4= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate4);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate4);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate4);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate4);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate4, imageDate4);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate5=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date5);
			String imageDate5=date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
			System.out.println("Current Image Date: "+imageDate5);

			lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate5=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate5= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate5);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate5);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate5);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate5);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate5, imageDate5);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate6=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date6);
			String imageDate6=date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
			System.out.println("Current Image Date: "+imageDate6);

			lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate6=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate6= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate6);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate6);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate6, imageDate6);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			String lastimageDate7=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date7);
			String imageDate7=date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
			System.out.println("Current Image Date: "+imageDate7);

			lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate7=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate7= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate7);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate7);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate7);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate7);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate7, imageDate7);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate8=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date8);
			String imageDate8=date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
			System.out.println("Current Image Date: "+imageDate8);

			lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate8=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate8= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate8);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate8);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate8);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate8);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate8, imageDate8);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate9=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date9);
			String imageDate9=date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
			System.out.println("Current Image Date: "+imageDate9);

			lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate9=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate9= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate9);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate9);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate9);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate9);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate9, imageDate9);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	



		try {
			String lastimageDate10=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date10);
			String imageDate10=date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
			System.out.println("Current Image Date: "+imageDate10);

			lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate10=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate10= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate10);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate10);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate10);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate10);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate10, imageDate10);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate11=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date11);
			String imageDate11=date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
			System.out.println("Current Image Date: "+imageDate11);

			lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate11=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate11= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate11);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate11);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate11, imageDate11);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate12=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font>  ");
			System.out.println("");
			System.out.println("12 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date12);
			String imageDate12=date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
			System.out.println("Current Image Date: "+imageDate12);

			lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate12=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate12= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate12);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate12);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate12);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate12);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate12, imageDate12);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate13=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font>  ");
			System.out.println("");
			System.out.println("13 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date13);
			String imageDate13=date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
			System.out.println("Current Image Date: "+imageDate13);

			lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate13=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate13= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate13);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate13);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate13);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate13);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate13, imageDate13);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate14=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font>  ");
			System.out.println("");
			System.out.println("14 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date14);
			String imageDate14=date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
			System.out.println("Current Image Date: "+imageDate14);

			lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate14=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate14= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate14);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate14);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate14);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate14);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate14, imageDate14);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate15=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font>  ");
			System.out.println("");
			System.out.println("15 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date15);
			String imageDate15=date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
			System.out.println("Current Image Date: "+imageDate15);

			lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate15=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate15= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate15);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate15);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate15);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate15);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate15, imageDate15);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


	}

	public void PostDateBetween_Yesterday() throws InterruptedException
	{	

		Reporter.log("       " );
		helper.waitForPageToLoad();

		System.out.println();
		System.out.println("-ShortBy Newest -Ad Post Date Between:");
		Reporter.log("<B><font color = 'green'>  -ShortBy Newest -Post Date Between Yesterday Step will Start from here  </font> ");
		helper.waitFor(post_date_between_dropdown);
		helper.highLightElement(driver, post_date_between_dropdown);
		helper.jsScrollintoview(post_date_between_dropdown);
		post_date_between_dropdown.click();
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Post Date Between filter Icon");

		helper.waitFor(post_date_between_Yesterday);
		helper.highLightElement(driver, post_date_between_Yesterday);
		helper.jsScrollintoview(post_date_between_Yesterday);
		post_date_between_Yesterday.click();
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On  Post Between Yesterday Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step7 -</font>  Total Ad Count is :" +totaladscount);


		try {
			String lastimageDate1=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date1);
			String imageDate1=date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
			System.out.println("Current Image Date: "+imageDate1);

			lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate1=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate1 = lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate1);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate1);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate1, imageDate1);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			String lastimageDate2=null;
			String postdate2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date2);
			String imageDate2=date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
			System.out.println("Current Image Date: "+imageDate2);

			lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					postdate2=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate2);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate2);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(postdate2, imageDate2);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate3=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date3);
			String imageDate3=date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
			System.out.println("Current Image Date: "+imageDate3);

			lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate3=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate3= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate3);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate3);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate3, imageDate3);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate4=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date4);
			String imageDate4=date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
			System.out.println("Current Image Date: "+imageDate4);

			lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate4=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate4= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate4);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate4);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate4);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate4);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate4, imageDate4);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate5=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date5);
			String imageDate5=date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
			System.out.println("Current Image Date: "+imageDate5);

			lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate5=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate5= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate5);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate5);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate5);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate5);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate5, imageDate5);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate6=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date6);
			String imageDate6=date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
			System.out.println("Current Image Date: "+imageDate6);

			lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate6=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate6= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate6);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate6);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate6, imageDate6);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			String lastimageDate7=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date7);
			String imageDate7=date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
			System.out.println("Current Image Date: "+imageDate7);

			lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate7=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate7= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate7);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate7);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate7);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate7);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate7, imageDate7);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate8=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date8);
			String imageDate8=date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
			System.out.println("Current Image Date: "+imageDate8);

			lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate8=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate8= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate8);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate8);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate8);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate8);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate8, imageDate8);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate9=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date9);
			String imageDate9=date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
			System.out.println("Current Image Date: "+imageDate9);

			lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate9=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate9= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate9);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate9);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate9);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate9);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate9, imageDate9);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	



		try {
			String lastimageDate10=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date10);
			String imageDate10=date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
			System.out.println("Current Image Date: "+imageDate10);

			lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate10=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate10= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate10);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate10);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate10);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate10);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate10, imageDate10);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate11=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date11);
			String imageDate11=date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
			System.out.println("Current Image Date: "+imageDate11);

			lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate11=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate11= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate11);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate11);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate11, imageDate11);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate12=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font>  ");
			System.out.println("");
			System.out.println("12 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date12);
			String imageDate12=date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
			System.out.println("Current Image Date: "+imageDate12);

			lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate12=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate12= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate12);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate12);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate12);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate12);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate12, imageDate12);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate13=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font>  ");
			System.out.println("");
			System.out.println("13 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date13);
			String imageDate13=date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
			System.out.println("Current Image Date: "+imageDate13);

			lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate13=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate13= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate13);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate13);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate13);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate13);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate13, imageDate13);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate14=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font>  ");
			System.out.println("");
			System.out.println("14 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date14);
			String imageDate14=date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
			System.out.println("Current Image Date: "+imageDate14);

			lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate14=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate14= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate14);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate14);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate14);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate14);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate14, imageDate14);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate15=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font>  ");
			System.out.println("");
			System.out.println("15 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date15);
			String imageDate15=date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
			System.out.println("Current Image Date: "+imageDate15);

			lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate15=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate15= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate15);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate15);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate15);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate15);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate15, imageDate15);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	
	}

	public void PostDateBetween_Last_Seven_Days() throws InterruptedException
	{	


		Reporter.log("       " );
		helper.waitForPageToLoad();

		System.out.println();
		System.out.println("-ShortBy Newest -Ad Post Date Between:");
		Reporter.log("<B><font color = 'green'>  -ShortBy Newest -Post Date Between Last Seven Days Step will Start from here  </font> ");
		helper.waitFor(post_date_between_dropdown);
		helper.highLightElement(driver, post_date_between_dropdown);
		helper.jsScrollintoview(post_date_between_dropdown);
		post_date_between_dropdown.click();
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Post Date Between filter Icon");

		helper.waitFor(post_date_between_Last_Seven_Days);
		helper.highLightElement(driver, post_date_between_Last_Seven_Days);
		helper.jsScrollintoview(post_date_between_Last_Seven_Days);
		post_date_between_Last_Seven_Days.click();
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On  Post Between Last Seven Days Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step7 -</font>  Total Ad Count is :" +totaladscount);

		try {
			String lastimageDate1=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date1);
			String imageDate1=date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
			System.out.println("Current Image Date: "+imageDate1);
			helper.Scrollintoview(lastdate1);
			lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate1=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate1 = lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate1);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate1);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate1, imageDate1);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			String lastimageDate2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date2);
			String imageDate2=date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
			System.out.println("Current Image Date: "+imageDate2);

			lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate2=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate2);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate2);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate2, imageDate2);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate3=null;
			String postdate3=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date3);
			String imageDate3=date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
			System.out.println("Current Image Date: "+imageDate3);

			lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					postdate3=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate3= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate3);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate3);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(imageDate3, postdate3);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date4);
			String imageDate4=date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
			System.out.println("Current Image Date: "+imageDate4);

			String	lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate4=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate2= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate4);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate4);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate2);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate4, lastimageDate2);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate5=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date5);
			String imageDate5=date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
			System.out.println("Current Image Date: "+imageDate5);

			lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate5=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate5= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate5);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate5);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate5);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate5);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate5, imageDate5);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate6=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date6);
			String imageDate6=date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
			System.out.println("Current Image Date: "+imageDate6);

			lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate6=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate6= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate6);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate6);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate6, imageDate6);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			String lastimageDate7=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date7);
			String imageDate7=date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
			System.out.println("Current Image Date: "+imageDate7);

			lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate7=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate7= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate7);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate7);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate7);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate7);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate7, imageDate7);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate8=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date8);
			String imageDate8=date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
			System.out.println("Current Image Date: "+imageDate8);

			lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate8=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate8= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate8);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate8);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate8);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate8);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate8, imageDate8);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate9=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date9);
			String imageDate9=date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
			System.out.println("Current Image Date: "+imageDate9);

			lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate9=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate9= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate9);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate9);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate9);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate9);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate9, imageDate9);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	



		try {
			String lastimageDate10=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date10);
			String imageDate10=date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
			System.out.println("Current Image Date: "+imageDate10);

			lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate10=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate10= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate10);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate10);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate10);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate10);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate10, imageDate10);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate11=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date11);
			String imageDate11=date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
			System.out.println("Current Image Date: "+imageDate11);

			lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate11=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate11= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate11);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate11);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate11, imageDate11);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate12=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font>  ");
			System.out.println("");
			System.out.println("12 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date12);
			String imageDate12=date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
			System.out.println("Current Image Date: "+imageDate12);

			lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate12=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate12= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate12);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate12);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate12);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate12);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate12, imageDate12);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate13=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font>  ");
			System.out.println("");
			System.out.println("13 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date13);
			String imageDate13=date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
			System.out.println("Current Image Date: "+imageDate13);

			lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate13=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate13= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate13);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate13);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate13);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate13);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate13, imageDate13);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate14=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font>  ");
			System.out.println("");
			System.out.println("14 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date14);
			String imageDate14=date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
			System.out.println("Current Image Date: "+imageDate14);

			lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate14=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate14= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate14);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate14);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate14);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate14);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate14, imageDate14);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate15=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font>  ");
			System.out.println("");
			System.out.println("15 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date15);
			String imageDate15=date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
			System.out.println("Current Image Date: "+imageDate15);

			lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate15=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate15= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate15);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate15);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate15);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate15);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate15, imageDate15);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

	}

	public void PostDateBetween_Last_Thirty_Days() throws InterruptedException
	{
		{	
			Reporter.log("       " );
			System.out.println();
			System.out.println("-ShortBy Newest -Ad Post Date Between:");
			Reporter.log("<B><font color = 'green'>  -ShortBy Newest -Post Date Between Last Thirty Days Step will Start from here  </font> ");
			helper.waitFor(post_date_between_dropdown);
			helper.highLightElement(driver, post_date_between_dropdown);
			helper.jsScrollintoview(post_date_between_dropdown);
			post_date_between_dropdown.click();
			Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Post Date Between filter Icon");

			helper.waitFor(post_date_between_Last_Thirty_Days);
			helper.highLightElement(driver, post_date_between_Last_Thirty_Days);
			helper.jsScrollintoview(post_date_between_Last_Thirty_Days);
			post_date_between_Last_Thirty_Days.click();
			Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On Post Between Last Thirty Days Icon");

			helper.waitFor(searchButton);
			helper.highLightElement(driver, searchButton);
			helper.jsScrollintoview(searchButton);
			searchButton.click();
			Reporter.log("<B><font color = 'orange'> Step6 -</font> Clicked On Search Button Icon");
			helper.waitForPageToLoad();

			String totaladscount=totaladscount_ad.getText();
			System.out.println("Totaladscount: "+totaladscount);
			Reporter.log("<B><font color = 'orange'> Step7 -</font>  Total Ad Count is :" +totaladscount);


			try {
				String lastimageDate1=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
				System.out.println("");
				System.out.println("1 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date1);
				String imageDate1=date1.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
				System.out.println("Current Image Date: "+imageDate1);

				lastimageDate1=lastdate1.getText();
				System.out.println("Last Image Date is :"+lastimageDate1);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

				helper.waitFor(ShowAnalytics1);
				helper.highLightElement(driver, ShowAnalytics1);
				helper.Scrollintoview(ShowAnalytics1);
				String linkText1 = ShowAnalytics1.getAttribute("href");
				helper.getAdID(linkText1);
				ShowAnalytics1.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.waitFor(postdate);
						helper.waitFor(lastSeen);
						helper.Scrollintoview(postdate);
						String postdate1=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate1 = lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate1);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate1);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate1);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate1);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(lastimageDate1, imageDate1);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}

			try {
				String lastimageDate2=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
				System.out.println("");
				System.out.println("2 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date2);
				String imageDate2=date2.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
				System.out.println("Current Image Date: "+imageDate2);

				lastimageDate2=lastdate2.getText();
				System.out.println("Last Image Date is :"+lastimageDate2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

				helper.waitFor(ShowAnalytics2);
				helper.highLightElement(driver, ShowAnalytics2);
				helper.Scrollintoview(ShowAnalytics2);
				String linkText2 = ShowAnalytics2.getAttribute("href");
				helper.getAdID(linkText2);
				ShowAnalytics2.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.Scrollintoview(postdate);
						String postdate2=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate2 = lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate2);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate2);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate2);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate2);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(lastimageDate2, imageDate2);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}	


			try {
				String lastimageDate3=null;
				String postdate3=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
				System.out.println("");
				System.out.println("3 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date3);
				String imageDate3=date3.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
				System.out.println("Current Image Date: "+imageDate3);

				lastimageDate3=lastdate3.getText();
				System.out.println("Last Image Date is :"+lastimageDate3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

				helper.waitFor(ShowAnalytics3);
				helper.highLightElement(driver, ShowAnalytics3);
				helper.Scrollintoview(ShowAnalytics3);
				String linkText3 = ShowAnalytics3.getAttribute("href");
				helper.getAdID(linkText3);
				ShowAnalytics3.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.Scrollintoview(postdate);
						postdate3=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate3= lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate3);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate3);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate3);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate3);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(postdate3, imageDate3);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}	


			try {
				String lastimageDate4=null;
				String postdate4=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
				System.out.println("");
				System.out.println("4 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date4);
				String imageDate4=date4.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
				System.out.println("Current Image Date: "+imageDate4);

				lastimageDate4=lastdate4.getText();
				System.out.println("Last Image Date is :"+lastimageDate4);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 

				helper.waitFor(ShowAnalytics4);
				helper.highLightElement(driver, ShowAnalytics4);
				helper.Scrollintoview(ShowAnalytics4);
				String linkText4 = ShowAnalytics4.getAttribute("href");
				helper.getAdID(linkText4);
				ShowAnalytics4.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.Scrollintoview(postdate);
						postdate4=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate4= lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate4);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate4);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate4);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate4);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(postdate4, imageDate4);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}	


			try {
				String lastimageDate5=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
				System.out.println("");
				System.out.println("5 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date5);
				String imageDate5=date5.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
				System.out.println("Current Image Date: "+imageDate5);

				lastimageDate5=lastdate5.getText();
				System.out.println("Last Image Date is :"+lastimageDate5);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

				helper.waitFor(ShowAnalytics5);
				helper.highLightElement(driver, ShowAnalytics5);
				helper.Scrollintoview(ShowAnalytics5);
				String linkText5 = ShowAnalytics5.getAttribute("href");
				helper.getAdID(linkText5);
				ShowAnalytics5.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.Scrollintoview(postdate);
						String postdate5=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate5= lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate5);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate5);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate5);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate5);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(lastimageDate5, imageDate5);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}	

			try {
				String lastimageDate6=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
				System.out.println("");
				System.out.println("6 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date6);
				String imageDate6=date6.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
				System.out.println("Current Image Date: "+imageDate6);

				lastimageDate6=lastdate6.getText();
				System.out.println("Last Image Date is :"+lastimageDate6);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

				helper.waitFor(ShowAnalytics6);
				helper.highLightElement(driver, ShowAnalytics6);
				helper.Scrollintoview(ShowAnalytics6);
				String linkText6 = ShowAnalytics6.getAttribute("href");
				helper.getAdID(linkText6);
				ShowAnalytics6.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.Scrollintoview(postdate);
						String postdate6=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate6= lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate6);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate6);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate6);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate6);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(lastimageDate6, imageDate6);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}

			try {
				String lastimageDate7=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
				System.out.println("");
				System.out.println("7 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date7);
				String imageDate7=date7.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
				System.out.println("Current Image Date: "+imageDate7);

				lastimageDate7=lastdate7.getText();
				System.out.println("Last Image Date is :"+lastimageDate7);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

				helper.waitFor(ShowAnalytics7);
				helper.highLightElement(driver, ShowAnalytics7);
				helper.Scrollintoview(ShowAnalytics7);
				String linkText7 = ShowAnalytics7.getAttribute("href");
				helper.getAdID(linkText7);
				ShowAnalytics7.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.Scrollintoview(postdate);
						String postdate7=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate7= lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate7);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate7);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate7);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate7);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(lastimageDate7, imageDate7);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}	

			try {
				String lastimageDate8=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
				System.out.println("");
				System.out.println("8 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date8);
				String imageDate8=date8.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
				System.out.println("Current Image Date: "+imageDate8);

				lastimageDate8=lastdate8.getText();
				System.out.println("Last Image Date is :"+lastimageDate8);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

				helper.waitFor(ShowAnalytics8);
				helper.highLightElement(driver, ShowAnalytics8);
				helper.Scrollintoview(ShowAnalytics8);
				String linkText8 = ShowAnalytics8.getAttribute("href");
				helper.getAdID(linkText8);
				ShowAnalytics8.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.waitFor(postdate);
						helper.waitFor(lastSeen);
						helper.Scrollintoview(postdate);
						String postdate8=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate8= lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate8);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate8);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate8);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate8);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(lastimageDate8, imageDate8);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}	

			try {
				String lastimageDate9=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
				System.out.println("");
				System.out.println("9 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date9);
				String imageDate9=date9.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
				System.out.println("Current Image Date: "+imageDate9);

				lastimageDate9=lastdate9.getText();
				System.out.println("Last Image Date is :"+lastimageDate9);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

				helper.waitFor(ShowAnalytics9);
				helper.highLightElement(driver, ShowAnalytics9);
				helper.Scrollintoview(ShowAnalytics9);
				String linkText9 = ShowAnalytics9.getAttribute("href");
				helper.getAdID(linkText9);
				ShowAnalytics9.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.waitFor(postdate);
						helper.waitFor(lastSeen);
						helper.Scrollintoview(postdate);
						String postdate9=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate9= lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate9);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate9);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate9);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate9);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(lastimageDate9, imageDate9);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}	



			try {
				String lastimageDate10=null;
				String postdate10=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
				System.out.println("");
				System.out.println("10 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date10);
				String imageDate10=date10.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
				System.out.println("Current Image Date: "+imageDate10);

				lastimageDate10=lastdate10.getText();
				System.out.println("Last Image Date is :"+lastimageDate10);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

				helper.waitFor(ShowAnalytics10);
				helper.highLightElement(driver, ShowAnalytics10);
				helper.Scrollintoview(ShowAnalytics10);
				String linkText10 = ShowAnalytics10.getAttribute("href");
				helper.getAdID(linkText10);
				ShowAnalytics10.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.waitFor(postdate);
						helper.waitFor(lastSeen);
						helper.Scrollintoview(postdate);
						postdate10=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate10= lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate10);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate10);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate10);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate10);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(postdate10, imageDate10);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}	

			try {
				String lastimageDate11=null;
				String postdate11=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
				System.out.println("");
				System.out.println("11 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date11);
				String imageDate11=date11.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
				System.out.println("Current Image Date: "+imageDate11);

				lastimageDate11=lastdate11.getText();
				System.out.println("Last Image Date is :"+lastimageDate11);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

				helper.waitFor(ShowAnalytics11);
				helper.highLightElement(driver, ShowAnalytics11);
				helper.Scrollintoview(ShowAnalytics11);
				String linkText11 = ShowAnalytics11.getAttribute("href");
				helper.getAdID(linkText11);
				ShowAnalytics11.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.waitFor(postdate);
						helper.waitFor(lastSeen);
						helper.Scrollintoview(postdate);
						postdate11=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate11= lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate11);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate11);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate11);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate11);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(postdate11, imageDate11);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}	

			try {
				String lastimageDate12=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 12 Ad -</font>  ");
				System.out.println("");
				System.out.println("12 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date12);
				String imageDate12=date12.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
				System.out.println("Current Image Date: "+imageDate12);

				lastimageDate12=lastdate12.getText();
				System.out.println("Last Image Date is :"+lastimageDate12);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

				helper.waitFor(ShowAnalytics12);
				helper.highLightElement(driver, ShowAnalytics12);
				helper.Scrollintoview(ShowAnalytics12);
				String linkText12 = ShowAnalytics12.getAttribute("href");
				helper.getAdID(linkText12);
				ShowAnalytics12.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.waitFor(postdate);
						helper.waitFor(lastSeen);
						helper.Scrollintoview(postdate);
						String postdate12=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate12= lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate12);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate12);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate12);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate12);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(lastimageDate12, imageDate12);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}	

			try {
				String lastimageDate13=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 13 Ad -</font>  ");
				System.out.println("");
				System.out.println("13 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date13);
				String imageDate13=date13.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
				System.out.println("Current Image Date: "+imageDate13);

				lastimageDate13=lastdate13.getText();
				System.out.println("Last Image Date is :"+lastimageDate13);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 

				helper.waitFor(ShowAnalytics13);
				helper.highLightElement(driver, ShowAnalytics13);
				helper.Scrollintoview(ShowAnalytics13);
				String linkText13 = ShowAnalytics13.getAttribute("href");
				helper.getAdID(linkText13);
				ShowAnalytics13.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.waitFor(postdate);
						helper.waitFor(lastSeen);
						helper.Scrollintoview(postdate);
						String postdate13=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate13= lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate13);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate13);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate13);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate13);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(lastimageDate13, imageDate13);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}	

			try {
				String lastimageDate14=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 14 Ad -</font>  ");
				System.out.println("");
				System.out.println("14 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date14);
				String imageDate14=date14.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
				System.out.println("Current Image Date: "+imageDate14);

				lastimageDate14=lastdate14.getText();
				System.out.println("Last Image Date is :"+lastimageDate14);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

				helper.waitFor(ShowAnalytics14);
				helper.highLightElement(driver, ShowAnalytics14);
				helper.Scrollintoview(ShowAnalytics14);
				String linkText14 = ShowAnalytics14.getAttribute("href");
				helper.getAdID(linkText14);
				ShowAnalytics14.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.waitFor(postdate);
						helper.waitFor(lastSeen);
						helper.Scrollintoview(postdate);
						String postdate14=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate14= lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate14);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate14);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate14);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate14);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(lastimageDate14, imageDate14);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}	

			try {
				String lastimageDate15=null;
				Reporter.log(" ");
				Reporter.log("<B><font color ='red'> 15 Ad -</font>  ");
				System.out.println("");
				System.out.println("15 Ads");

				Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
				helper.Scrollintoview(date15);
				String imageDate15=date15.getText();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
				System.out.println("Current Image Date: "+imageDate15);

				lastimageDate15=lastdate15.getText();
				System.out.println("Last Image Date is :"+lastimageDate15);
				Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

				helper.waitFor(ShowAnalytics15);
				helper.highLightElement(driver, ShowAnalytics15);
				helper.Scrollintoview(ShowAnalytics15);
				String linkText15 = ShowAnalytics15.getAttribute("href");
				helper.getAdID(linkText15);
				ShowAnalytics15.click();
				Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

				String parent=driver.getWindowHandle();
				Set<String>s=driver.getWindowHandles();
				Iterator<String> I1= s.iterator();

				while(I1.hasNext())
				{
					String child_window=I1.next();
					if(!parent.equals(child_window))
					{
						driver.switchTo().window(child_window);
						helper.waitForPageToLoad();
						System.out.println(driver.switchTo().window(child_window).getTitle());
						helper.waitFor(postdate);
						helper.waitFor(lastSeen);
						helper.Scrollintoview(postdate);
						String postdate15=postdate.getText();
						helper.Scrollintoview(lastSeen);
						lastimageDate15= lastSeen.getText();
						System.out.println("Analytics Image Post Date: "+postdate15);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate15);
						System.out.println("Analytics Image Last Seen Date: "+lastimageDate15);
						Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate15);
						driver.close();
					}
				}

				driver.switchTo().window(parent);
				helper.getLastseenDate(lastimageDate15, imageDate15);
			}
			catch (Exception e)
			{
				// TODO: handle exception
				System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

				Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			}	
		}
	}
	public void PostDateBetween_This_Month()  throws InterruptedException
	{


		Reporter.log("       " );
		System.out.println();
		System.out.println("-ShortBy Newest -Ad Post Date Between:");
		Reporter.log("<B><font color = 'green'>  -ShortBy Newest -Post Date Between This Month Step will Start from here  </font> ");
		helper.waitFor(post_date_between_dropdown);
		helper.highLightElement(driver, post_date_between_dropdown);
		helper.jsScrollintoview(post_date_between_dropdown);
		post_date_between_dropdown.click();
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Post Date Between filter Icon");

		helper.waitFor(post_date_between_This_Month);
		helper.highLightElement(driver, post_date_between_This_Month);
		helper.jsScrollintoview(post_date_between_This_Month);
		post_date_between_This_Month.click();
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On Post Between This Month Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step7 -</font>  Total Ad Count is :" +totaladscount);


		try {
			String lastimageDate1=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date1);
			String imageDate1=date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
			System.out.println("Current Image Date: "+imageDate1);

			lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					String postdate1=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate1 = lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate1);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate1);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate1, imageDate1);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			String lastimageDate2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date2);
			String imageDate2=date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
			System.out.println("Current Image Date: "+imageDate2);

			lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate2=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate2);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate2);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate2, imageDate2);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate3=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date3);
			String imageDate3=date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
			System.out.println("Current Image Date: "+imageDate3);

			lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate3=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate3= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate3);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate3);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate3, imageDate3);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate4=null;
			String postdate4=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date4);
			String imageDate4=date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
			System.out.println("Current Image Date: "+imageDate4);

			lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate4=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate4= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate4);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate4);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate4);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate4);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(postdate4, imageDate4);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate5=null;
			String postdate5=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date5);
			String imageDate5=date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
			System.out.println("Current Image Date: "+imageDate5);

			lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate5=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate5= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate5);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate5);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate5);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate5);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(postdate5, imageDate5);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate6=null;
			String postdate6=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date6);
			String imageDate6=date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
			System.out.println("Current Image Date: "+imageDate6);

			lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate6=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate6= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate6);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate6);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(postdate6, imageDate6);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			String lastimageDate7=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date7);
			String imageDate7=date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
			System.out.println("Current Image Date: "+imageDate7);

			lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate7=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate7= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate7);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate7);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate7);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate7);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate7, imageDate7);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate8=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date8);
			String imageDate8=date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
			System.out.println("Current Image Date: "+imageDate8);

			lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate8=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate8= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate8);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate8);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate8);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate8);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate8, imageDate8);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate9=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date9);
			String imageDate9=date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
			System.out.println("Current Image Date: "+imageDate9);

			lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate9=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate9= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate9);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate9);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate9);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate9);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate9, imageDate9);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	



		try {
			String lastimageDate10=null;
			String postdate10=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date10);
			String imageDate10=date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
			System.out.println("Current Image Date: "+imageDate10);

			lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate10=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate10= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate10);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate10);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate10);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate10);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(postdate10, imageDate10);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate11=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date11);
			String imageDate11=date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
			System.out.println("Current Image Date: "+imageDate11);

			lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate11=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate11= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate11);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate11);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate11, imageDate11);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate12=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font>  ");
			System.out.println("");
			System.out.println("12 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date12);
			String imageDate12=date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
			System.out.println("Current Image Date: "+imageDate12);

			lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate12=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate12= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate12);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate12);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate12);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate12);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate12, imageDate12);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate13=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font>  ");
			System.out.println("");
			System.out.println("13 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date13);
			String imageDate13=date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
			System.out.println("Current Image Date: "+imageDate13);

			lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate13=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate13= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate13);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate13);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate13);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate13);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate13, imageDate13);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate14=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font>  ");
			System.out.println("");
			System.out.println("14 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date14);
			String imageDate14=date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
			System.out.println("Current Image Date: "+imageDate14);

			lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate14=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate14= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate14);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate14);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate14);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate14);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate14, imageDate14);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate15=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font>  ");
			System.out.println("");
			System.out.println("15 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date15);
			String imageDate15=date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
			System.out.println("Current Image Date: "+imageDate15);

			lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate15=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate15= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate15);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate15);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate15);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate15);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate15, imageDate15);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	
	}


	public void PostDateBetween_Last_Month() throws Exception
	{

		helper.waitForPageToLoad();

		Reporter.log("       " );
		System.out.println();
		System.out.println("-ShortBy Newest -Ad Post Date Between:");
		Reporter.log("<B><font color = 'green'>  -ShortBy Newest -Post Date Between Last month Step will Start from here  </font> ");
		helper.waitFor(post_date_between_dropdown);
		helper.highLightElement(driver, post_date_between_dropdown);
		helper.jsScrollintoview(post_date_between_dropdown);
		post_date_between_dropdown.click();
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Post Date Between filter Icon");

		helper.waitFor(post_date_between_last_Month);
		helper.highLightElement(driver, post_date_between_last_Month);
		helper.jsScrollintoview(post_date_between_last_Month);
		post_date_between_last_Month.click();
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On Post Between Last Month Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step7 -</font>  Total Ad Count is :" +totaladscount);

		try {
			String lastimageDate1=null;
			String postdate1=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date1);
			String imageDate1=date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
			System.out.println("Current Image Date: "+imageDate1);

			lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate1=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate1 = lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate1);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate1);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(postdate1, imageDate1);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			String lastimageDate2=null;
			String postdate2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date2);
			String imageDate2=date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
			System.out.println("Current Image Date: "+imageDate2);

			lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate2=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate2);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate2);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(postdate2, imageDate2);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate3=null;
			String postdate3=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date3);
			String imageDate3=date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
			System.out.println("Current Image Date: "+imageDate3);

			lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate3=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate3= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate3);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate3);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate( postdate3, imageDate3);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate4=null;
			String postdate4=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date4);
			String imageDate4=date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
			System.out.println("Current Image Date: "+imageDate4);

			lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate4=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate4= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate4);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate4);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate4);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate4);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate( postdate4, imageDate4);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate5=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date5);
			String imageDate5=date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
			System.out.println("Current Image Date: "+imageDate5);

			lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					String postdate5=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate5= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate5);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate5);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate5);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate5);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(lastimageDate5, imageDate5);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String postdate6=null;
			String lastimageDate6=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date6);
			String imageDate6=date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
			System.out.println("Current Image Date: "+imageDate6);

			lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate6=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate6= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate6);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate6);
					driver.close();

				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(postdate6 , imageDate6);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			String postdate7=null;
			String lastimageDate7=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date7);
			String imageDate7=date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
			System.out.println("Current Image Date: "+imageDate7);

			lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate7=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate7= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate7);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate7);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate7);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate7);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(postdate7, imageDate7);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate8=null;
			String postdate8=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date8);
			String imageDate8=date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
			System.out.println("Current Image Date: "+imageDate8);

			lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);

					helper.Scrollintoview(postdate);
					postdate8=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate8= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate8);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate8);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate8);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate8);
					driver.close();

					/*	String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate8.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate8, postdate8);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate8+ " == " +postdate8);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate8+ " == " +postdate8);
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate9=null;
			String postdate9=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date9);
			String imageDate9=date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
			System.out.println("Current Image Date: "+imageDate9);

			lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate9=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate9= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate9);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate9);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate9);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate9);
					driver.close();

					/*	String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate9.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);*
					}*/
					Assert.assertEquals(imageDate9, postdate9);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate9+ " == " +postdate9);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate9+ " == " +postdate9);
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	



		try {
			String lastimageDate10=null;
			String postdate10=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date10);
			String imageDate10=date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
			System.out.println("Current Image Date: "+imageDate10);

			lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate10=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate10= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate10);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate10);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate10);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate10);
					driver.close();


					/*	String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate10.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate10, postdate10);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate10+ " == " +postdate10);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate10+ " == " +postdate10);
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate11=null;
			String postdate11=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date11);
			String imageDate11=date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
			System.out.println("Current Image Date: "+imageDate11);

			lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate11=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate11= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate11);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate11);
					driver.close();


					/*				String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate11.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate11, postdate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate11+ " == " +postdate11);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate11+ " == " +postdate11);
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate12=null;
			String postdate12=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font>  ");
			System.out.println("");
			System.out.println("12 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date12);
			String imageDate12=date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
			System.out.println("Current Image Date: "+imageDate12);

			lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate12=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate12= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate12);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate12);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate12);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate12);
					driver.close();

					/*	String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate12.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate12, postdate12);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate12+ " == " +postdate12);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate12+ " == " +postdate12);
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate13=null;
			String postdate13=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font>  ");
			System.out.println("");
			System.out.println("13 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date13);
			String imageDate13=date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
			System.out.println("Current Image Date: "+imageDate13);

			lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate13=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate13= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate13);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate13);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate13);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate13);

					/*	String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate13.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate13, postdate13);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate13+ " == " +postdate13);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate13+ " == " +postdate13);

					driver.close();
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate14=null;
			String postdate14=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font>  ");
			System.out.println("");
			System.out.println("14 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date14);
			String imageDate14=date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
			System.out.println("Current Image Date: "+imageDate14);

			lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate14=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate14= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate14);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate14);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate14);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate14);
					driver.close();

					/*	String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate14.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate14, postdate14);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate14+ " == " +postdate14);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate14+ " == " +postdate14);
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate15=null;
			String postdate15=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font>  ");
			System.out.println("");
			System.out.println("15 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date15);
			String imageDate15=date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
			System.out.println("Current Image Date: "+imageDate15);

			lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate15=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate15= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate15);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate15);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate15);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate15);
					driver.close();

					/*	String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate15.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate15, postdate15);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate15+ " == " +postdate15);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate15+ " == " +postdate15);
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	
	}

	public void PostDateBetween_CustomRange() throws Exception
	{

		System.out.println();
		Reporter.log("      ");
		System.out.println("-SortBy Newest -Post Date  Between Custom Range: ");
		helper.waitForPageToLoad();
		Reporter.log("<B><font color = 'green'>  -ShortBy Newest -Post Date Between Custom Range Step will Start from here </font> ");
		helper.waitFor(postdatebetweenfilter);
		helper.highLightElement(driver, postdatebetweenfilter);
		helper.jsScrollintoview(postdatebetweenfilter);
		postdatebetweenfilter.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Post Date Between Custom Range filter Icon");

		helper.waitFor(postdateBetween_customrange);
		helper.highLightElement(driver,postdateBetween_customrange);
		helper.jsScrollintoview(postdateBetween_customrange);
		postdateBetween_customrange.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On Post Date Between Custom Range Icon");

		helper.waitFor(leftmonthselect);
		helper.highLightElement(driver,leftmonthselect);
		helper.jsScrollintoview(leftmonthselect);
		helper.SelectDropdownValue(leftmonthselect,ReadConfig.getProperty("Leftmonthselect1"));
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Selected Month: "+ReadConfig.getProperty("Leftmonthselect1"));
		System.out.println("Selected Month: "+ReadConfig.getProperty("Leftmonthselect1"));

		helper.waitFor(leftyearselect);
		helper.highLightElement(driver,leftyearselect);
		helper.jsScrollintoview(leftyearselect);
		helper.SelectDropdownValue(leftyearselect,ReadConfig.getProperty("Leftyearselect1"));
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Selected Year: "+ReadConfig.getProperty("Leftyearselect1"));
		System.out.println("Selected Year: "+ReadConfig.getProperty("Leftyearselect1"));

		helper.waitFor(rightmonthselect);
		helper.highLightElement(driver,rightmonthselect);
		helper.jsScrollintoview(rightmonthselect);
		helper.SelectDropdownValue(rightmonthselect,ReadConfig.getProperty("Rightmonthselect2"));
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Selected Month: "+ReadConfig.getProperty("Rightmonthselect2"));
		System.out.println("Selected Month: "+ReadConfig.getProperty("Rightmonthselect2"));

		helper.waitFor(rightyearselect);
		helper.highLightElement(driver,rightyearselect);
		helper.jsScrollintoview(rightyearselect);
		helper.SelectDropdownValue(rightyearselect,ReadConfig.getProperty("Rightyearselect2"));
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Selected Year: "+ReadConfig.getProperty("Rightyearselect2"));
		System.out.println("Selected Year "+ReadConfig.getProperty("Rightyearselect2"));


		/*	helper.waitFor(Custom_Range_Next_Line);
		helper.highLightElement(driver, Custom_Range_Next_Line);
		helper.Scrollintoview(Custom_Range_Next_Line);
		Custom_Range_Next_Line.click();
		Custom_Range_Next_Line.click();*/


		helper.waitFor(adSeenBetween_Start_range1);
		helper.highLightElement(driver,adSeenBetween_Start_range1);
		helper.jsScrollintoview(adSeenBetween_Start_range1);
		adSeenBetween_Start_range1.click();
		Reporter.log("<B><font color = 'orange'> Step7 -</font> Clicked On Ad Seen Between Start Custom Range Icon");

		helper.waitFor(adSeenBetween_end_range2);
		helper.highLightElement(driver,adSeenBetween_end_range2);
		helper.jsScrollintoview(adSeenBetween_end_range2);
		helper.Scrollintoview(adSeenBetween_end_range2);
		adSeenBetween_end_range2.click();
		Reporter.log("<B><font color = 'orange'> Step8 -</font> Clicked On Ad Seen Between End Custom Range Icon:");

		helper.waitFor(PostCustomRangeApplyButton);
		helper.highLightElement(driver, PostCustomRangeApplyButton);
		helper.jsScrollintoview(PostCustomRangeApplyButton);
		PostCustomRangeApplyButton.click();
		Reporter.log("<B><font color = 'orange'> Step9 -</font> Clicked On Apply Button Icon");
		helper.waitForPageToLoad();


		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step10 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step11 -</font>  Total Ad Count is :"+ totaladscount);

		try {
			String lastimageDate1=null;
			String postdate1=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date1);
			String imageDate1=date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
			System.out.println("Current Image Date: "+imageDate1);

			lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					postdate1=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate1 = lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate1);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate1);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate1);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(postdate1, imageDate1);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			String lastimageDate2=null;
			String postdate2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date2);
			String imageDate2=date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
			System.out.println("Current Image Date: "+imageDate2);

			lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					postdate2=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate2 = lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate2);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate2);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate2);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(postdate2, imageDate2);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate3=null;
			String postdate3=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date3);
			String imageDate3=date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
			System.out.println("Current Image Date: "+imageDate3);

			lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					postdate3=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate3= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate3);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate3);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate3);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(postdate3, imageDate3);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate4=null;
			String postdate4=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date4);
			String imageDate4=date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
			System.out.println("Current Image Date: "+imageDate4);

			lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					postdate4=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate4= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate4);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate4);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate4);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate4);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate( postdate4, imageDate4);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		try {
			String lastimageDate5=null;
			String postdate5=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date5);
			String imageDate5=date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
			System.out.println("Current Image Date: "+imageDate5);

			lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					postdate5=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate5= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate5);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate5);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate5);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate5);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate( postdate5, imageDate5);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String postdate6=null;
			String lastimageDate6=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date6);
			String imageDate6=date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
			System.out.println("Current Image Date: "+imageDate6);

			lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					postdate6=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate6= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate6);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate6);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate6);
					driver.close();

				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate( postdate6 , imageDate6);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try {
			String postdate7=null;
			String lastimageDate7=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date7);
			String imageDate7=date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
			System.out.println("Current Image Date: "+imageDate7);

			lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.Scrollintoview(postdate);
					postdate7=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate7= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate7);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate7);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate7);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate7);
					driver.close();
				}
			}

			driver.switchTo().window(parent);
			helper.getLastseenDate(postdate7, imageDate7);
		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate8=null;
			String postdate8=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date8);
			String imageDate8=date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
			System.out.println("Current Image Date: "+imageDate8);

			lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);

					helper.Scrollintoview(postdate);
					postdate8=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate8= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate8);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate8);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate8);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate8);
					driver.close();

					/*String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate8.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate8,  postdate8);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate8+ " == " +postdate8);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate8+ " == " +postdate8);
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate9=null;
			String postdate9=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date9);
			String imageDate9=date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
			System.out.println("Current Image Date: "+imageDate9);

			lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate9=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate9= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate9);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate9);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate9);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate9);
					driver.close();

					String joinString = null;
					//  String[] actualDate = null;

					/*	String[] splitString = postdate9.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate9, postdate9);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate9+ " == " + postdate9);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate9+ " == " +postdate9);
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	



		try {
			String lastimageDate10=null;
			String postdate10=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date10);
			String imageDate10=date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
			System.out.println("Current Image Date: "+imageDate10);

			lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate10=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate10= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate10);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate10);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate10);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate10);
					driver.close();


					/*String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate10.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate10,  postdate10);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate10+ " == " +postdate10);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate10+ " == " + postdate10);
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate11=null;
			String postdate11=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date11);
			String imageDate11=date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
			System.out.println("Current Image Date: "+imageDate11);

			lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate11=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate11= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate11);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate11);
					driver.close();


					/*	String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate11.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate11, postdate11);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate11+ " == " +postdate11);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate11+ " == " +postdate11);
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate12=null;
			String postdate12=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font>  ");
			System.out.println("");
			System.out.println("12 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date12);
			String imageDate12=date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
			System.out.println("Current Image Date: "+imageDate12);

			lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate12=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate12= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate12);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate12);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate12);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate12);
					driver.close();

					/*	String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate12.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate12, postdate12);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate12+ " == " +postdate12);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate12+ " == " + postdate12);
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate13=null;
			String postdate13=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font>  ");
			System.out.println("");
			System.out.println("13 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date13);
			String imageDate13=date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
			System.out.println("Current Image Date: "+imageDate13);

			lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate13=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate13= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate13);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate13);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate13);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate13);

					/*	String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate13.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate13,  postdate13);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate13+ " == " + postdate13);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate13+ " == " +postdate13);

					driver.close();
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate14=null;
			String postdate14=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font>  ");
			System.out.println("");
			System.out.println("14 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date14);
			String imageDate14=date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
			System.out.println("Current Image Date: "+imageDate14);

			lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate14=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate14= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate14);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate14);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate14);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate14);
					driver.close();

					/*	String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate14.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate14, postdate14);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate14+ " == " +postdate14);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate14+ " == " + postdate14);
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

		try {
			String lastimageDate15=null;
			String postdate15=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font>  ");
			System.out.println("");
			System.out.println("15 Ads");

			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			helper.Scrollintoview(date15);
			String imageDate15=date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
			System.out.println("Current Image Date: "+imageDate15);

			lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");

			String parent=driver.getWindowHandle();
			Set<String>s=driver.getWindowHandles();
			Iterator<String> I1= s.iterator();

			while(I1.hasNext())
			{
				String child_window=I1.next();
				if(!parent.equals(child_window))
				{
					driver.switchTo().window(child_window);
					helper.waitForPageToLoad();
					System.out.println(driver.switchTo().window(child_window).getTitle());
					helper.waitFor(postdate);
					helper.waitFor(lastSeen);
					helper.Scrollintoview(postdate);
					postdate15=postdate.getText();
					helper.Scrollintoview(lastSeen);
					lastimageDate15= lastSeen.getText();
					System.out.println("Analytics Image Post Date: "+postdate15);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Post date is :"+postdate15);
					System.out.println("Analytics Image Last Seen Date: "+lastimageDate15);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date of Last Seen is :"+lastimageDate15);
					driver.close();

					/*		String joinString = null;
					//  String[] actualDate = null;

					String[] splitString = postdate15.split(" ");
					for(int i=0;i<splitString.length-2;i++) {
						String actualDate=splitString[i]; 
						joinString= splitString[i+1]+" "+ splitString[i]+" " + splitString[i+2];
						//  System.out.println("splitString : " + splitString[i]);
						System.out.println("Convert Date into Assert Format : " + joinString);
					}*/
					Assert.assertEquals(imageDate15, postdate15);
					Reporter.log("<B><font color = 'blue'> ==> -</font> Both  Date are Matching in Assert Pass :"+imageDate15+ " == " +postdate15);
					System.out.println("Both  Date are Matching in Assert Pass :"+imageDate15+ " == " +postdate15);
				}
			}

			driver.switchTo().window(parent);

		}
		catch (Exception e)
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsScrollintoview(Clear_Filters);
		Clear_Filters.click();
		//	Reporter.log("<B><font color = 'orange'> Step9 -</font> Clicked On Clear Filters Icon");
		helper.waitForPageToLoad();
		System.out.println(" ");
		Reporter.log(" ");
	}

	public void GdnPageDomain_Registration_Date()
	{
		Reporter.log("<B><font color = 'purple'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();


		//		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'purple'> Step2 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(gdn);
		helper.highLightElement(driver, gdn);
		gdn.click();

		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'purple'> Step3 -</font> I am on the page :" + Page_titel);

		Assert.assertTrue(gdn.isDisplayed(), "PowerAdSpy | GDN Dashboard");

		Reporter.log("<B><font color = 'purple'> Step4 -</font> Clicked On GDN  Icon");
		//		helper.waitForPageToLoad();


		System.out.println();
		System.out.println("ShortBy Newest:");
		Reporter.log("    ");
		Reporter.log("<B><font color = 'green'>  - ShortBy Newest Step will Start from here </font>  ");
		helper.waitFor(sortBy);
		helper.highLightElement(driver, sortBy);
		sortBy.click();
		Reporter.log("");
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On sortBy Icon");

		helper.waitFor(SortBy_Newest);
		helper.highLightElement(driver, SortBy_Newest);
		SortBy_Newest.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On SortBy Newest Icon");


		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();
	}

	public void DomainRegistrationDate_All() throws InterruptedException
	{

		System.out.println();
		System.out.println("-ShortBy Newest -Ad Domain Registration Date -All:");
		helper.waitForPageToLoad();
		Reporter.log("   ");
		Reporter.log("<B><font color = 'green'> -ShortBy Newest -Ad Domain Registration Date All Step will Start from here </font> ");
		helper.waitFor(domainRegistrationfilter);
		helper.highLightElement(driver, domainRegistrationfilter);
		helper.jsScrollintoview(domainRegistrationfilter);
		domainRegistrationfilter.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Ad Domain Registration Date filter Icon");

		helper.waitFor(All);
		helper.highLightElement(driver, All);
		helper.jsScrollintoview(All);
		All.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On Domain Registration Date All Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step4 -</font>  Total Ad Count is :"+ totaladscount);

		try
		{
			String lastSeenDate_today1=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			helper.waitFor(date1);
			helper.Scrollintoview(date1);
			String  imageDate1= date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
			System.out.println("Current Date: "+imageDate1);
			helper.waitFor(lastdate1);
			helper.Scrollintoview(lastdate1);
			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it1=S1.iterator();
			String parent1=it1.next();
			String child1=it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.waitForPageToLoad();
			helper.waitFor(Domain_Rgsd_Date);
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today1 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate1=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate1);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today1);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate1);   
			driver.close();
			driver.switchTo().window(parent1);
			//	helper.getLastseenDate(lastSeenDate_today1, imageDate1);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate2= date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
			System.out.println("Current Date: "+imageDate2);
			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S2=driver.getWindowHandles();
			Iterator<String>it2=S2.iterator();
			String parent2=it2.next();
			String child2=it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today2 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate2=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate2);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today2);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate2);   
			driver.close();
			driver.switchTo().window(parent2);
			//	helper.getLastseenDate(lastSeenDate_today2, imageDate2);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today3=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate3= date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
			System.out.println("Current Date: "+imageDate3);
			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S3=driver.getWindowHandles();
			Iterator<String>it3=S3.iterator();
			String parent3=it3.next();
			String child3=it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today3 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate3=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate3);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today3);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate3);   
			driver.close();
			driver.switchTo().window(parent3);
			//	helper.getLastseenDate(lastSeenDate_today3, imageDate3);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today4=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate4= date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
			System.out.println("Current Date: "+imageDate4);
			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S4=driver.getWindowHandles();
			Iterator<String>it4=S4.iterator();
			String parent4=it4.next();
			String child4=it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today4 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate4=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate4);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today4);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate4);   
			driver.close();
			driver.switchTo().window(parent4);
			//		helper.getLastseenDate(lastSeenDate_today4, imageDate4);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today5=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate5= date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
			System.out.println("Current Date: "+imageDate5);
			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S5=driver.getWindowHandles();
			Iterator<String>it5=S5.iterator();
			String parent5=it5.next();
			String child5=it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today5 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate5=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate5);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today5);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate5);   
			driver.close();
			driver.switchTo().window(parent5);
			//		helper.getLastseenDate(lastSeenDate_today5, imageDate5);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today6=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate6= date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
			System.out.println("Current Date: "+imageDate6);
			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S6=driver.getWindowHandles();
			Iterator<String>it6=S6.iterator();
			String parent6=it6.next();
			String child6=it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today6 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate6=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate6);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today6);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate6);   
			driver.close();
			driver.switchTo().window(parent6);
			//		helper.getLastseenDate(lastSeenDate_today6, imageDate6);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today7=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate7= date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
			System.out.println("Current Date: "+imageDate7);
			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S7=driver.getWindowHandles();
			Iterator<String>it7=S7.iterator();
			String parent7=it7.next();
			String child7=it7.next();

			driver.switchTo().window(child7);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today7 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate7=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate7);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today7);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate7);   
			driver.close();
			driver.switchTo().window(parent7);
			//		helper.getLastseenDate(lastSeenDate_today7, imageDate7);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today8=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate8= date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
			System.out.println("Current Date: "+imageDate8);
			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S8=driver.getWindowHandles();
			Iterator<String>it8=S8.iterator();
			String parent8=it8.next();
			String child8=it8.next();

			driver.switchTo().window(child8);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today8 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate8=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate8);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today8);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate8);   
			driver.close();
			driver.switchTo().window(parent8);
			//		helper.getLastseenDate(lastSeenDate_today8, imageDate8);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today9=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate9= date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
			System.out.println("Current Date: "+imageDate9);
			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S9=driver.getWindowHandles();
			Iterator<String>it9=S9.iterator();
			String parent9=it9.next();
			String child9=it9.next();

			driver.switchTo().window(child9);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today9 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate9=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate9);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today9);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate9);   
			driver.close();
			driver.switchTo().window(parent9);
			//		helper.getLastseenDate(lastSeenDate_today9, imageDate9);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today10=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate10= date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
			System.out.println("Current Date: "+imageDate10);
			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S10=driver.getWindowHandles();
			Iterator<String>it10=S10.iterator();
			String parent10=it10.next();
			String child10=it10.next();

			driver.switchTo().window(child10);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today10 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate10=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate10);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today10);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate10);   
			driver.close();
			driver.switchTo().window(parent10);
			//			helper.getLastseenDate(lastSeenDate_today10, imageDate10);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today11=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate11= date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
			System.out.println("Current Date: "+imageDate11);
			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S11=driver.getWindowHandles();
			Iterator<String>it11=S11.iterator();
			String parent11=it11.next();
			String child11=it11.next();

			driver.switchTo().window(child11);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today11 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate11=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate11);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today11);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate11);   
			driver.close();
			driver.switchTo().window(parent11);
			//		helper.getLastseenDate(lastSeenDate_today11, imageDate11);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today12=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font> ");
			System.out.println("");
			System.out.println("12 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate12= date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
			System.out.println("Current Date: "+imageDate12);
			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S12=driver.getWindowHandles();
			Iterator<String>it12=S12.iterator();
			String parent12=it12.next();
			String child12=it12.next();

			driver.switchTo().window(child12);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today12 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate12=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate12);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today12);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate12);   
			driver.close();
			driver.switchTo().window(parent12);
			//			helper.getLastseenDate(lastSeenDate_today12, imageDate12);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today13=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font> ");
			System.out.println("");
			System.out.println("13 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate13= date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
			System.out.println("Current Date: "+imageDate13);
			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 
			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S13=driver.getWindowHandles();
			Iterator<String>it13=S13.iterator();
			String parent13=it13.next();
			String child13=it13.next();

			driver.switchTo().window(child13);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today13 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate13=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate13);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today13);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate13);   
			driver.close();
			driver.switchTo().window(parent13);
			//			helper.getLastseenDate(lastSeenDate_today13, imageDate13);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today14=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font> ");
			System.out.println("");
			System.out.println("14 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate14= date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
			System.out.println("Current Date: "+imageDate14);
			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S14=driver.getWindowHandles();
			Iterator<String>it14=S14.iterator();
			String parent14=it14.next();
			String child14=it14.next();

			driver.switchTo().window(child14);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today14 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate14=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate14);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today14);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate14);   
			driver.close();
			driver.switchTo().window(parent14);
			//			helper.getLastseenDate(lastSeenDate_today14, imageDate14);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today15=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font> ");
			System.out.println("");
			System.out.println("15 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate15= date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
			System.out.println("Current Date: "+imageDate15);
			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S15=driver.getWindowHandles();
			Iterator<String>it15=S15.iterator();
			String parent15=it15.next();
			String child15=it15.next();

			driver.switchTo().window(child15);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today15 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate15=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate15);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today15);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate15);   
			driver.close();
			driver.switchTo().window(parent15);
			//			helper.getLastseenDate(lastSeenDate_today15, imageDate15);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}		


	}
	public void DomainRegistrationDate_Today()	throws InterruptedException
	{
		Reporter.log("    ");
		System.out.println();
		helper.waitForPageToLoad();
		Reporter.log("<B><font color = 'green'> -ShortBy Newest -Ad Domain Registration Date Today Step will Start from here </font> ");
		helper.waitFor(domainRegistrationfilter);
		helper.highLightElement(driver, domainRegistrationfilter);
		helper.jsScrollintoview(domainRegistrationfilter);
		domainRegistrationfilter.click();
		Reporter.log("<B><font color = 'orange'> Step1-</font> Clicked On Ad Domain Registration Date filter Icon");

		helper.waitFor(Today);
		helper.highLightElement(driver, Today);
		helper.jsScrollintoview(Today);
		Today.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On Domain Registration Date Today Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step4 -</font>  Total Ad Count is :"+ totaladscount);

		try
		{
			String lastSeenDate_today1=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate1= date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
			System.out.println("Current Date: "+imageDate1);
			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it1=S1.iterator();
			String parent1=it1.next();
			String child1=it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today1 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate1=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate1);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today1);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate1);   
			driver.close();
			driver.switchTo().window(parent1);
			//			helper.getLastseenDate(lastSeenDate_today1, imageDate1);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate2= date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
			System.out.println("Current Date: "+imageDate2);
			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S2=driver.getWindowHandles();
			Iterator<String>it2=S2.iterator();
			String parent2=it2.next();
			String child2=it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today2 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate2=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate2);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today2);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate2);   
			driver.close();
			driver.switchTo().window(parent2);
			//			helper.getLastseenDate(lastSeenDate_today2, imageDate2);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today3=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate3= date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
			System.out.println("Current Date: "+imageDate3);
			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S3=driver.getWindowHandles();
			Iterator<String>it3=S3.iterator();
			String parent3=it3.next();
			String child3=it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today3 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate3=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate3);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today3);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate3);   
			driver.close();
			driver.switchTo().window(parent3);
			//			helper.getLastseenDate(lastSeenDate_today3, imageDate3);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today4=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate4= date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
			System.out.println("Current Date: "+imageDate4);
			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S4=driver.getWindowHandles();
			Iterator<String>it4=S4.iterator();
			String parent4=it4.next();
			String child4=it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today4 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate4=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate4);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today4);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate4);   
			driver.close();
			driver.switchTo().window(parent4);
			//			helper.getLastseenDate(lastSeenDate_today4, imageDate4);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today5=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate5= date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
			System.out.println("Current Date: "+imageDate5);
			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S5=driver.getWindowHandles();
			Iterator<String>it5=S5.iterator();
			String parent5=it5.next();
			String child5=it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today5 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate5=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate5);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today5);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate5);   
			driver.close();
			driver.switchTo().window(parent5);
			//			helper.getLastseenDate(lastSeenDate_today5, imageDate5);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today6=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate6= date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
			System.out.println("Current Date: "+imageDate6);
			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S6=driver.getWindowHandles();
			Iterator<String>it6=S6.iterator();
			String parent6=it6.next();
			String child6=it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today6 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate6=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate6);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today6);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate6);   
			driver.close();
			driver.switchTo().window(parent6);
			//			helper.getLastseenDate(lastSeenDate_today6, imageDate6);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today7=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate7= date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
			System.out.println("Current Date: "+imageDate7);
			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S7=driver.getWindowHandles();
			Iterator<String>it7=S7.iterator();
			String parent7=it7.next();
			String child7=it7.next();

			driver.switchTo().window(child7);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today7 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate7=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate7);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today7);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate7);   
			driver.close();
			driver.switchTo().window(parent7);
			//			helper.getLastseenDate(lastSeenDate_today7, imageDate7);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today8=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate8= date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
			System.out.println("Current Date: "+imageDate8);
			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S8=driver.getWindowHandles();
			Iterator<String>it8=S8.iterator();
			String parent8=it8.next();
			String child8=it8.next();

			driver.switchTo().window(child8);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today8 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate8=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate8);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today8);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate8);   
			driver.close();
			driver.switchTo().window(parent8);
			//			helper.getLastseenDate(lastSeenDate_today8, imageDate8);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today9=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate9= date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
			System.out.println("Current Date: "+imageDate9);
			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S9=driver.getWindowHandles();
			Iterator<String>it9=S9.iterator();
			String parent9=it9.next();
			String child9=it9.next();

			driver.switchTo().window(child9);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today9 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate9=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate9);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today9);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate9);   
			driver.close();
			driver.switchTo().window(parent9);
			//			helper.getLastseenDate(lastSeenDate_today9, imageDate9);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today10=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate10= date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
			System.out.println("Current Date: "+imageDate10);
			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S10=driver.getWindowHandles();
			Iterator<String>it10=S10.iterator();
			String parent10=it10.next();
			String child10=it10.next();

			driver.switchTo().window(child10);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today10 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate10=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate10);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today10);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate10);   
			driver.close();
			driver.switchTo().window(parent10);
			//			helper.getLastseenDate(lastSeenDate_today10, imageDate10);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today11=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate11= date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
			System.out.println("Current Date: "+imageDate11);
			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S11=driver.getWindowHandles();
			Iterator<String>it11=S11.iterator();
			String parent11=it11.next();
			String child11=it11.next();

			driver.switchTo().window(child11);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today11 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate11=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate11);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today11);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate11);   
			driver.close();
			driver.switchTo().window(parent11);
			//			helper.getLastseenDate(lastSeenDate_today11, imageDate11);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today12=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font> ");
			System.out.println("");
			System.out.println("12 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate12= date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
			System.out.println("Current Date: "+imageDate12);
			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S12=driver.getWindowHandles();
			Iterator<String>it12=S12.iterator();
			String parent12=it12.next();
			String child12=it12.next();

			driver.switchTo().window(child12);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today12 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate12=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate12);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today12);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate12);   
			driver.close();
			driver.switchTo().window(parent12);
			//			helper.getLastseenDate(lastSeenDate_today12, imageDate12);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today13=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font> ");
			System.out.println("");
			System.out.println("13 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate13= date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
			System.out.println("Current Date: "+imageDate13);
			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 
			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S13=driver.getWindowHandles();
			Iterator<String>it13=S13.iterator();
			String parent13=it13.next();
			String child13=it13.next();

			driver.switchTo().window(child13);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today13 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate13=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate13);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today13);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate13);   
			driver.close();
			driver.switchTo().window(parent13);
			//			helper.getLastseenDate(lastSeenDate_today13, imageDate13);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today14=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font> ");
			System.out.println("");
			System.out.println("14 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate14= date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
			System.out.println("Current Date: "+imageDate14);
			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S14=driver.getWindowHandles();
			Iterator<String>it14=S14.iterator();
			String parent14=it14.next();
			String child14=it14.next();

			driver.switchTo().window(child14);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today14 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate14=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate14);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today14);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate14);   
			driver.close();
			driver.switchTo().window(parent14);
			//			helper.getLastseenDate(lastSeenDate_today14, imageDate14);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today15=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font> ");
			System.out.println("");
			System.out.println("15 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate15= date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
			System.out.println("Current Date: "+imageDate15);
			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S15=driver.getWindowHandles();
			Iterator<String>it15=S15.iterator();
			String parent15=it15.next();
			String child15=it15.next();

			driver.switchTo().window(child15);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today15 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate15=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate15);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today15);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate15);   
			driver.close();
			driver.switchTo().window(parent15);
			//		helper.getLastseenDate(lastSeenDate_today15, imageDate15);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	

	}

	public void DomainRegistrationDate_yesterday() throws InterruptedException
	{
		Reporter.log("   ");
		System.out.println();
		System.out.println("-ShortBy Newest -Ad Domain Registration Date -Yesterday:");
		helper.waitForPageToLoad();
		Reporter.log("<B><font color = 'green'> -ShortBy Newest -Ad Domain Registration Date Yesterday Step will Start from here </font> ");
		helper.waitFor(domainRegistrationfilter);
		helper.highLightElement(driver, domainRegistrationfilter);
		helper.jsScrollintoview(domainRegistrationfilter);
		domainRegistrationfilter.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Ad Domain Registration Date filter Icon");

		helper.waitFor(yesterday);
		helper.highLightElement(driver, yesterday);
		helper.jsScrollintoview(yesterday);
		yesterday.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On Domain Registration Date Yesterday Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.jsScrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step4 -</font>  Total Ad Count is :"+ totaladscount);

		try
		{
			String lastSeenDate_today1=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate1= date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
			System.out.println("Current Date: "+imageDate1);
			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it1=S1.iterator();
			String parent1=it1.next();
			String child1=it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today1 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate1=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate1);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today1);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate1);   
			driver.close();
			driver.switchTo().window(parent1);
			//			helper.getLastseenDate(lastSeenDate_today1, imageDate1);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate2= date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
			System.out.println("Current Date: "+imageDate2);
			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S2=driver.getWindowHandles();
			Iterator<String>it2=S2.iterator();
			String parent2=it2.next();
			String child2=it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today2 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate2=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate2);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today2);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate2);   
			driver.close();
			driver.switchTo().window(parent2);
			//			helper.getLastseenDate(lastSeenDate_today2, imageDate2);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today3=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate3= date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
			System.out.println("Current Date: "+imageDate3);
			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S3=driver.getWindowHandles();
			Iterator<String>it3=S3.iterator();
			String parent3=it3.next();
			String child3=it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today3 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate3=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate3);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today3);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate3);   
			driver.close();
			driver.switchTo().window(parent3);
			//			helper.getLastseenDate(lastSeenDate_today3, imageDate3);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today4=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate4= date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
			System.out.println("Current Date: "+imageDate4);
			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S4=driver.getWindowHandles();
			Iterator<String>it4=S4.iterator();
			String parent4=it4.next();
			String child4=it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today4 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate4=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate4);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today4);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate4);   
			driver.close();
			driver.switchTo().window(parent4);
			//		helper.getLastseenDate(lastSeenDate_today4, imageDate4);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today5=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate5= date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
			System.out.println("Current Date: "+imageDate5);
			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S5=driver.getWindowHandles();
			Iterator<String>it5=S5.iterator();
			String parent5=it5.next();
			String child5=it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today5 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate5=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate5);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today5);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate5);   
			driver.close();
			driver.switchTo().window(parent5);
			//		helper.getLastseenDate(lastSeenDate_today5, imageDate5);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today6=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate6= date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
			System.out.println("Current Date: "+imageDate6);
			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S6=driver.getWindowHandles();
			Iterator<String>it6=S6.iterator();
			String parent6=it6.next();
			String child6=it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today6 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate6=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate6);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today6);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate6);   
			driver.close();
			driver.switchTo().window(parent6);
			//		helper.getLastseenDate(lastSeenDate_today6, imageDate6);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today7=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate7= date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
			System.out.println("Current Date: "+imageDate7);
			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S7=driver.getWindowHandles();
			Iterator<String>it7=S7.iterator();
			String parent7=it7.next();
			String child7=it7.next();

			driver.switchTo().window(child7);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today7 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate7=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate7);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today7);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate7);   
			driver.close();
			driver.switchTo().window(parent7);
			//			helper.getLastseenDate(lastSeenDate_today7, imageDate7);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today8=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate8= date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
			System.out.println("Current Date: "+imageDate8);
			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S8=driver.getWindowHandles();
			Iterator<String>it8=S8.iterator();
			String parent8=it8.next();
			String child8=it8.next();

			driver.switchTo().window(child8);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today8 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate8=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate8);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today8);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate8);   
			driver.close();
			driver.switchTo().window(parent8);
			//			helper.getLastseenDate(lastSeenDate_today8, imageDate8);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today9=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate9= date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
			System.out.println("Current Date: "+imageDate9);
			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S9=driver.getWindowHandles();
			Iterator<String>it9=S9.iterator();
			String parent9=it9.next();
			String child9=it9.next();

			driver.switchTo().window(child9);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today9 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate9=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate9);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today9);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate9);   
			driver.close();
			driver.switchTo().window(parent9);
			//			helper.getLastseenDate(lastSeenDate_today9, imageDate9);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today10=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate10= date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
			System.out.println("Current Date: "+imageDate10);
			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S10=driver.getWindowHandles();
			Iterator<String>it10=S10.iterator();
			String parent10=it10.next();
			String child10=it10.next();

			driver.switchTo().window(child10);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today10 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate10=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate10);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today10);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate10);   
			driver.close();
			driver.switchTo().window(parent10);
			//		helper.getLastseenDate(lastSeenDate_today10, imageDate10);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today11=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate11= date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
			System.out.println("Current Date: "+imageDate11);
			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S11=driver.getWindowHandles();
			Iterator<String>it11=S11.iterator();
			String parent11=it11.next();
			String child11=it11.next();

			driver.switchTo().window(child11);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today11 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate11=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate11);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today11);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate11);   
			driver.close();
			driver.switchTo().window(parent11);
			//			helper.getLastseenDate(lastSeenDate_today11, imageDate11);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today12=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font> ");
			System.out.println("");
			System.out.println("12 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate12= date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
			System.out.println("Current Date: "+imageDate12);
			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S12=driver.getWindowHandles();
			Iterator<String>it12=S12.iterator();
			String parent12=it12.next();
			String child12=it12.next();

			driver.switchTo().window(child12);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today12 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate12=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate12);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today12);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate12);   
			driver.close();
			driver.switchTo().window(parent12);
			//			helper.getLastseenDate(lastSeenDate_today12, imageDate12);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today13=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font> ");
			System.out.println("");
			System.out.println("13 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate13= date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
			System.out.println("Current Date: "+imageDate13);
			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 
			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S13=driver.getWindowHandles();
			Iterator<String>it13=S13.iterator();
			String parent13=it13.next();
			String child13=it13.next();

			driver.switchTo().window(child13);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today13 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate13=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate13);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today13);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate13);   
			driver.close();
			driver.switchTo().window(parent13);
			//			helper.getLastseenDate(lastSeenDate_today13, imageDate13);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today14=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font> ");
			System.out.println("");
			System.out.println("14 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate14= date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
			System.out.println("Current Date: "+imageDate14);
			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S14=driver.getWindowHandles();
			Iterator<String>it14=S14.iterator();
			String parent14=it14.next();
			String child14=it14.next();

			driver.switchTo().window(child14);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today14 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate14=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate14);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today14);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate14);   
			driver.close();
			driver.switchTo().window(parent14);
			//			helper.getLastseenDate(lastSeenDate_today14, imageDate14);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today15=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font> ");
			System.out.println("");
			System.out.println("15 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate15= date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
			System.out.println("Current Date: "+imageDate15);
			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S15=driver.getWindowHandles();
			Iterator<String>it15=S15.iterator();
			String parent15=it15.next();
			String child15=it15.next();

			driver.switchTo().window(child15);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today15 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate15=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate15);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today15);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate15);   
			driver.close();
			driver.switchTo().window(parent15);
			//		helper.getLastseenDate(lastSeenDate_today15, imageDate15);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}	


	}

	public void DomainRegistrationDate_Last_7_Days() throws InterruptedException
	{
		System.out.println();
		System.out.println("-ShortBy Newest -Ad Domain Registration Date -Last 7 Days");
		Reporter.log("      ");
		helper.waitForPageToLoad();

		Reporter.log("<B><font color = 'green'> -ShortBy Newest -Ad Domain Registration Date Last 7 Days Step will Start from here </font> ");
		helper.waitFor(domainRegistrationfilter);
		helper.highLightElement(driver, domainRegistrationfilter);
		helper.jsScrollintoview(domainRegistrationfilter);
		domainRegistrationfilter.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Ad Domain Registration Date filter Icon");

		helper.waitFor(Last_7_Days);
		helper.highLightElement(driver, Last_7_Days);
		helper.jsScrollintoview(Last_7_Days);
		Last_7_Days.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On Domain Registration Date Last 7 Days Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step4 -</font>  Total Ad Count is :"+ totaladscount);

		try
		{
			String lastSeenDate_today1=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate1= date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
			System.out.println("Current Date: "+imageDate1);
			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it1=S1.iterator();
			String parent1=it1.next();
			String child1=it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today1 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate1=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate1);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today1);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate1);   
			driver.close();
			driver.switchTo().window(parent1);
			helper.getLastseenDate(lastSeenDate_today1, imageDate1);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate2= date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
			System.out.println("Current Date: "+imageDate2);
			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S2=driver.getWindowHandles();
			Iterator<String>it2=S2.iterator();
			String parent2=it2.next();
			String child2=it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today2 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate2=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate2);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today2);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate2);   
			driver.close();
			driver.switchTo().window(parent2);
			helper.getLastseenDate(lastSeenDate_today2, imageDate2);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today3=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate3= date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
			System.out.println("Current Date: "+imageDate3);
			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S3=driver.getWindowHandles();
			Iterator<String>it3=S3.iterator();
			String parent3=it3.next();
			String child3=it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today3 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate3=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate3);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today3);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate3);   
			driver.close();
			driver.switchTo().window(parent3);
			helper.getLastseenDate(lastSeenDate_today3, imageDate3);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today4=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate4= date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
			System.out.println("Current Date: "+imageDate4);
			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S4=driver.getWindowHandles();
			Iterator<String>it4=S4.iterator();
			String parent4=it4.next();
			String child4=it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today4 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate4=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate4);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today4);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate4);   
			driver.close();
			driver.switchTo().window(parent4);
			helper.getLastseenDate(lastSeenDate_today4, imageDate4);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today5=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate5= date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
			System.out.println("Current Date: "+imageDate5);
			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S5=driver.getWindowHandles();
			Iterator<String>it5=S5.iterator();
			String parent5=it5.next();
			String child5=it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today5 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate5=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate5);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today5);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate5);   
			driver.close();
			driver.switchTo().window(parent5);
			helper.getLastseenDate(lastSeenDate_today5, imageDate5);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today6=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate6= date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
			System.out.println("Current Date: "+imageDate6);
			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S6=driver.getWindowHandles();
			Iterator<String>it6=S6.iterator();
			String parent6=it6.next();
			String child6=it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today6 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate6=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate6);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today6);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate6);   
			driver.close();
			driver.switchTo().window(parent6);
			helper.getLastseenDate(lastSeenDate_today6, imageDate6);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today7=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate7= date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
			System.out.println("Current Date: "+imageDate7);
			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S7=driver.getWindowHandles();
			Iterator<String>it7=S7.iterator();
			String parent7=it7.next();
			String child7=it7.next();

			driver.switchTo().window(child7);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today7 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate7=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate7);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today7);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate7);   
			driver.close();
			driver.switchTo().window(parent7);
			helper.getLastseenDate(lastSeenDate_today7, imageDate7);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today8=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate8= date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
			System.out.println("Current Date: "+imageDate8);
			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S8=driver.getWindowHandles();
			Iterator<String>it8=S8.iterator();
			String parent8=it8.next();
			String child8=it8.next();

			driver.switchTo().window(child8);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today8 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate8=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate8);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today8);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate8);   
			driver.close();
			driver.switchTo().window(parent8);
			helper.getLastseenDate(lastSeenDate_today8, imageDate8);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today9=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate9= date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
			System.out.println("Current Date: "+imageDate9);
			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S9=driver.getWindowHandles();
			Iterator<String>it9=S9.iterator();
			String parent9=it9.next();
			String child9=it9.next();

			driver.switchTo().window(child9);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today9 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate9=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate9);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today9);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate9);   
			driver.close();
			driver.switchTo().window(parent9);
			helper.getLastseenDate(lastSeenDate_today9, imageDate9);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today10=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate10= date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
			System.out.println("Current Date: "+imageDate10);
			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S10=driver.getWindowHandles();
			Iterator<String>it10=S10.iterator();
			String parent10=it10.next();
			String child10=it10.next();

			driver.switchTo().window(child10);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today10 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate10=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate10);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today10);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate10);   
			driver.close();
			driver.switchTo().window(parent10);
			helper.getLastseenDate(lastSeenDate_today10, imageDate10);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today11=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate11= date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
			System.out.println("Current Date: "+imageDate11);
			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S11=driver.getWindowHandles();
			Iterator<String>it11=S11.iterator();
			String parent11=it11.next();
			String child11=it11.next();

			driver.switchTo().window(child11);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today11 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate11=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate11);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today11);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate11);   
			driver.close();
			driver.switchTo().window(parent11);
			helper.getLastseenDate(lastSeenDate_today11, imageDate11);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today12=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font> ");
			System.out.println("");
			System.out.println("12 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate12= date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
			System.out.println("Current Date: "+imageDate12);
			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S12=driver.getWindowHandles();
			Iterator<String>it12=S12.iterator();
			String parent12=it12.next();
			String child12=it12.next();

			driver.switchTo().window(child12);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today12 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate12=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate12);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today12);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate12);   
			driver.close();
			driver.switchTo().window(parent12);
			helper.getLastseenDate(lastSeenDate_today12, imageDate12);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today13=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font> ");
			System.out.println("");
			System.out.println("13 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate13= date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
			System.out.println("Current Date: "+imageDate13);
			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 
			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S13=driver.getWindowHandles();
			Iterator<String>it13=S13.iterator();
			String parent13=it13.next();
			String child13=it13.next();

			driver.switchTo().window(child13);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today13 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate13=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate13);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today13);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate13);   
			driver.close();
			driver.switchTo().window(parent13);
			helper.getLastseenDate(lastSeenDate_today13, imageDate13);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today14=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font> ");
			System.out.println("");
			System.out.println("14 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate14= date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
			System.out.println("Current Date: "+imageDate14);
			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S14=driver.getWindowHandles();
			Iterator<String>it14=S14.iterator();
			String parent14=it14.next();
			String child14=it14.next();

			driver.switchTo().window(child14);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today14 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate14=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate14);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today14);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate14);   
			driver.close();
			driver.switchTo().window(parent14);
			helper.getLastseenDate(lastSeenDate_today14, imageDate14);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today15=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font> ");
			System.out.println("");
			System.out.println("15 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate15= date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
			System.out.println("Current Date: "+imageDate15);
			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S15=driver.getWindowHandles();
			Iterator<String>it15=S15.iterator();
			String parent15=it15.next();
			String child15=it15.next();

			driver.switchTo().window(child15);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today15 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate15=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate15);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today15);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate15);   
			driver.close();
			driver.switchTo().window(parent15);
			helper.getLastseenDate(lastSeenDate_today15, imageDate15);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
	}	


	public void DomainRegistrationDate_Last_Thirty_Days() throws InterruptedException
	{
		helper.waitForPageToLoad();
		Reporter.log("      ");
		Reporter.log("<B><font color = 'green'> -ShortBy Newest -Ad Domain Registration Date Last 30 Days Step will Start from here </font> ");
		System.out.println();
		System.out.println("-ShortBy Newest -Ad Domain Registration Date -Last 30 Days");
		helper.waitFor(domainRegistrationfilter);
		helper.highLightElement(driver, domainRegistrationfilter);
		helper.jsScrollintoview(domainRegistrationfilter);
		domainRegistrationfilter.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Ad Domain Registration Date filter Icon");

		helper.waitFor(Last_30_Days);
		helper.highLightElement(driver, Last_30_Days);
		helper.jsScrollintoview(Last_30_Days);
		Last_30_Days.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On Domain Registration Date Last 30 Days Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step4 -</font>  Total Ad Count is :"+ totaladscount);

		try
		{
			String lastSeenDate_today1=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate1= date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
			System.out.println("Current Date: "+imageDate1);
			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it1=S1.iterator();
			String parent1=it1.next();
			String child1=it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today1 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate1=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate1);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today1);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate1);   
			driver.close();
			driver.switchTo().window(parent1);
			helper.getLastseenDate(lastSeenDate_today1, imageDate1);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate2= date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
			System.out.println("Current Date: "+imageDate2);
			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S2=driver.getWindowHandles();
			Iterator<String>it2=S2.iterator();
			String parent2=it2.next();
			String child2=it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today2 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate2=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate2);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today2);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate2);   
			driver.close();
			driver.switchTo().window(parent2);
			helper.getLastseenDate(lastSeenDate_today2, imageDate2);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today3=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate3= date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
			System.out.println("Current Date: "+imageDate3);
			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S3=driver.getWindowHandles();
			Iterator<String>it3=S3.iterator();
			String parent3=it3.next();
			String child3=it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today3 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate3=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate3);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today3);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate3);   
			driver.close();
			driver.switchTo().window(parent3);
			helper.getLastseenDate(lastSeenDate_today3, imageDate3);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today4=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate4= date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
			System.out.println("Current Date: "+imageDate4);
			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S4=driver.getWindowHandles();
			Iterator<String>it4=S4.iterator();
			String parent4=it4.next();
			String child4=it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today4 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate4=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate4);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today4);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate4);   
			driver.close();
			driver.switchTo().window(parent4);
			helper.getLastseenDate(lastSeenDate_today4, imageDate4);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today5=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate5= date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
			System.out.println("Current Date: "+imageDate5);
			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S5=driver.getWindowHandles();
			Iterator<String>it5=S5.iterator();
			String parent5=it5.next();
			String child5=it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today5 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate5=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate5);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today5);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate5);   
			driver.close();
			driver.switchTo().window(parent5);
			helper.getLastseenDate(lastSeenDate_today5, imageDate5);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today6=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate6= date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
			System.out.println("Current Date: "+imageDate6);
			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S6=driver.getWindowHandles();
			Iterator<String>it6=S6.iterator();
			String parent6=it6.next();
			String child6=it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today6 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate6=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate6);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today6);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate6);   
			driver.close();
			driver.switchTo().window(parent6);
			helper.getLastseenDate(lastSeenDate_today6, imageDate6);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today7=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate7= date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
			System.out.println("Current Date: "+imageDate7);
			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S7=driver.getWindowHandles();
			Iterator<String>it7=S7.iterator();
			String parent7=it7.next();
			String child7=it7.next();

			driver.switchTo().window(child7);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today7 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate7=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate7);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today7);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate7);   
			driver.close();
			driver.switchTo().window(parent7);
			helper.getLastseenDate(lastSeenDate_today7, imageDate7);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today8=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate8= date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
			System.out.println("Current Date: "+imageDate8);
			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S8=driver.getWindowHandles();
			Iterator<String>it8=S8.iterator();
			String parent8=it8.next();
			String child8=it8.next();

			driver.switchTo().window(child8);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today8 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate8=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate8);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today8);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate8);   
			driver.close();
			driver.switchTo().window(parent8);
			helper.getLastseenDate(lastSeenDate_today8, imageDate8);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today9=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate9= date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
			System.out.println("Current Date: "+imageDate9);
			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S9=driver.getWindowHandles();
			Iterator<String>it9=S9.iterator();
			String parent9=it9.next();
			String child9=it9.next();

			driver.switchTo().window(child9);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today9 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate9=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate9);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today9);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate9);   
			driver.close();
			driver.switchTo().window(parent9);
			helper.getLastseenDate(lastSeenDate_today9, imageDate9);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today10=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate10= date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
			System.out.println("Current Date: "+imageDate10);
			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S10=driver.getWindowHandles();
			Iterator<String>it10=S10.iterator();
			String parent10=it10.next();
			String child10=it10.next();

			driver.switchTo().window(child10);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today10 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate10=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate10);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today10);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate10);   
			driver.close();
			driver.switchTo().window(parent10);
			helper.getLastseenDate(lastSeenDate_today10, imageDate10);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today11=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate11= date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
			System.out.println("Current Date: "+imageDate11);
			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S11=driver.getWindowHandles();
			Iterator<String>it11=S11.iterator();
			String parent11=it11.next();
			String child11=it11.next();

			driver.switchTo().window(child11);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today11 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate11=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate11);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today11);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate11);   
			driver.close();
			driver.switchTo().window(parent11);
			helper.getLastseenDate(lastSeenDate_today11, imageDate11);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today12=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font> ");
			System.out.println("");
			System.out.println("12 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate12= date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
			System.out.println("Current Date: "+imageDate12);
			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S12=driver.getWindowHandles();
			Iterator<String>it12=S12.iterator();
			String parent12=it12.next();
			String child12=it12.next();

			driver.switchTo().window(child12);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today12 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate12=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate12);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today12);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate12);   
			driver.close();
			driver.switchTo().window(parent12);
			helper.getLastseenDate(lastSeenDate_today12, imageDate12);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today13=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font> ");
			System.out.println("");
			System.out.println("13 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate13= date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
			System.out.println("Current Date: "+imageDate13);
			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 
			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S13=driver.getWindowHandles();
			Iterator<String>it13=S13.iterator();
			String parent13=it13.next();
			String child13=it13.next();

			driver.switchTo().window(child13);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today13 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate13=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate13);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today13);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate13);   
			driver.close();
			driver.switchTo().window(parent13);
			helper.getLastseenDate(lastSeenDate_today13, imageDate13);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today14=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font> ");
			System.out.println("");
			System.out.println("14 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate14= date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
			System.out.println("Current Date: "+imageDate14);
			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S14=driver.getWindowHandles();
			Iterator<String>it14=S14.iterator();
			String parent14=it14.next();
			String child14=it14.next();

			driver.switchTo().window(child14);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today14 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate14=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate14);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today14);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate14);   
			driver.close();
			driver.switchTo().window(parent14);
			helper.getLastseenDate(lastSeenDate_today14, imageDate14);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today15=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font> ");
			System.out.println("");
			System.out.println("15 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate15= date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
			System.out.println("Current Date: "+imageDate15);
			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S15=driver.getWindowHandles();
			Iterator<String>it15=S15.iterator();
			String parent15=it15.next();
			String child15=it15.next();

			driver.switchTo().window(child15);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today15 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate15=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate15);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today15);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate15);   
			driver.close();
			driver.switchTo().window(parent15);
			helper.getLastseenDate(lastSeenDate_today15, imageDate15);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

	}


	public void DomainRegistrationDate_This_Month_Days() throws InterruptedException
	{
		helper.waitForPageToLoad();
		Reporter.log("      ");
		Reporter.log("<B><font color = 'green'> -ShortBy Newest -Ad Domain Registration Date This Month  Step will Start from here </font> ");
		System.out.println();
		System.out.println("-ShortBy Newest -Ad Domain Registration Date -This Month");
		helper.waitFor(domainRegistrationfilter);
		helper.highLightElement(driver, domainRegistrationfilter);
		helper.jsScrollintoview(domainRegistrationfilter);
		domainRegistrationfilter.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Ad Domain Registration Date filter Icon");

		helper.waitFor(This_Month);
		helper.highLightElement(driver, This_Month);
		helper.jsScrollintoview(This_Month);
		This_Month.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On Domain Registration Date This Month Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step4 -</font>  Total Ad Count is :"+ totaladscount);

		try
		{
			String lastSeenDate_today1=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate1= date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
			System.out.println("Current Date: "+imageDate1);
			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it1=S1.iterator();
			String parent1=it1.next();
			String child1=it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today1 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate1=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate1);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today1);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate1);   
			driver.close();
			driver.switchTo().window(parent1);
			helper.getLastseenDate(lastSeenDate_today1, imageDate1);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate2= date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
			System.out.println("Current Date: "+imageDate2);
			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S2=driver.getWindowHandles();
			Iterator<String>it2=S2.iterator();
			String parent2=it2.next();
			String child2=it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today2 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate2=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate2);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today2);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate2);   
			driver.close();
			driver.switchTo().window(parent2);
			helper.getLastseenDate(lastSeenDate_today2, imageDate2);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today3=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate3= date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
			System.out.println("Current Date: "+imageDate3);
			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S3=driver.getWindowHandles();
			Iterator<String>it3=S3.iterator();
			String parent3=it3.next();
			String child3=it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today3 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate3=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate3);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today3);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate3);   
			driver.close();
			driver.switchTo().window(parent3);
			helper.getLastseenDate(lastSeenDate_today3, imageDate3);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today4=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate4= date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
			System.out.println("Current Date: "+imageDate4);
			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S4=driver.getWindowHandles();
			Iterator<String>it4=S4.iterator();
			String parent4=it4.next();
			String child4=it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today4 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate4=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate4);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today4);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate4);   
			driver.close();
			driver.switchTo().window(parent4);
			helper.getLastseenDate(lastSeenDate_today4, imageDate4);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today5=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate5= date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
			System.out.println("Current Date: "+imageDate5);
			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S5=driver.getWindowHandles();
			Iterator<String>it5=S5.iterator();
			String parent5=it5.next();
			String child5=it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today5 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate5=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate5);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today5);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate5);   
			driver.close();
			driver.switchTo().window(parent5);
			helper.getLastseenDate(lastSeenDate_today5, imageDate5);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today6=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate6= date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
			System.out.println("Current Date: "+imageDate6);
			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S6=driver.getWindowHandles();
			Iterator<String>it6=S6.iterator();
			String parent6=it6.next();
			String child6=it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today6 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate6=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate6);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today6);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate6);   
			driver.close();
			driver.switchTo().window(parent6);
			helper.getLastseenDate(lastSeenDate_today6, imageDate6);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today7=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate7= date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
			System.out.println("Current Date: "+imageDate7);
			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S7=driver.getWindowHandles();
			Iterator<String>it7=S7.iterator();
			String parent7=it7.next();
			String child7=it7.next();

			driver.switchTo().window(child7);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today7 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate7=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate7);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today7);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate7);   
			driver.close();
			driver.switchTo().window(parent7);
			helper.getLastseenDate(lastSeenDate_today7, imageDate7);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today8=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate8= date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
			System.out.println("Current Date: "+imageDate8);
			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S8=driver.getWindowHandles();
			Iterator<String>it8=S8.iterator();
			String parent8=it8.next();
			String child8=it8.next();

			driver.switchTo().window(child8);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today8 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate8=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate8);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today8);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate8);   
			driver.close();
			driver.switchTo().window(parent8);
			helper.getLastseenDate(lastSeenDate_today8, imageDate8);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today9=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate9= date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
			System.out.println("Current Date: "+imageDate9);
			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S9=driver.getWindowHandles();
			Iterator<String>it9=S9.iterator();
			String parent9=it9.next();
			String child9=it9.next();

			driver.switchTo().window(child9);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today9 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate9=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate9);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today9);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate9);   
			driver.close();
			driver.switchTo().window(parent9);
			helper.getLastseenDate(lastSeenDate_today9, imageDate9);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today10=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate10= date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
			System.out.println("Current Date: "+imageDate10);
			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S10=driver.getWindowHandles();
			Iterator<String>it10=S10.iterator();
			String parent10=it10.next();
			String child10=it10.next();

			driver.switchTo().window(child10);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today10 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate10=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate10);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today10);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate10);   
			driver.close();
			driver.switchTo().window(parent10);
			helper.getLastseenDate(lastSeenDate_today10, imageDate10);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today11=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate11= date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
			System.out.println("Current Date: "+imageDate11);
			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S11=driver.getWindowHandles();
			Iterator<String>it11=S11.iterator();
			String parent11=it11.next();
			String child11=it11.next();

			driver.switchTo().window(child11);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today11 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate11=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate11);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today11);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate11);   
			driver.close();
			driver.switchTo().window(parent11);
			helper.getLastseenDate(lastSeenDate_today11, imageDate11);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today12=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font> ");
			System.out.println("");
			System.out.println("12 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate12= date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
			System.out.println("Current Date: "+imageDate12);
			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S12=driver.getWindowHandles();
			Iterator<String>it12=S12.iterator();
			String parent12=it12.next();
			String child12=it12.next();

			driver.switchTo().window(child12);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today12 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate12=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate12);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today12);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate12);   
			driver.close();
			driver.switchTo().window(parent12);
			helper.getLastseenDate(lastSeenDate_today12, imageDate12);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today13=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font> ");
			System.out.println("");
			System.out.println("13 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate13= date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
			System.out.println("Current Date: "+imageDate13);
			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 
			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S13=driver.getWindowHandles();
			Iterator<String>it13=S13.iterator();
			String parent13=it13.next();
			String child13=it13.next();

			driver.switchTo().window(child13);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today13 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate13=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate13);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today13);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate13);   
			driver.close();
			driver.switchTo().window(parent13);
			helper.getLastseenDate(lastSeenDate_today13, imageDate13);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today14=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font> ");
			System.out.println("");
			System.out.println("14 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate14= date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
			System.out.println("Current Date: "+imageDate14);
			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S14=driver.getWindowHandles();
			Iterator<String>it14=S14.iterator();
			String parent14=it14.next();
			String child14=it14.next();

			driver.switchTo().window(child14);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today14 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate14=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate14);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today14);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate14);   
			driver.close();
			driver.switchTo().window(parent14);
			helper.getLastseenDate(lastSeenDate_today14, imageDate14);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today15=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font> ");
			System.out.println("");
			System.out.println("15 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate15= date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
			System.out.println("Current Date: "+imageDate15);
			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S15=driver.getWindowHandles();
			Iterator<String>it15=S15.iterator();
			String parent15=it15.next();
			String child15=it15.next();

			driver.switchTo().window(child15);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today15 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate15=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate15);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today15);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate15);   
			driver.close();
			driver.switchTo().window(parent15);
			helper.getLastseenDate(lastSeenDate_today15, imageDate15);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

	}

	public void DomainRegistrationDate_Last_Month_Days() throws InterruptedException
	{
		helper.waitForPageToLoad();
		Reporter.log("      ");
		Reporter.log("<B><font color = 'green'> -ShortBy Newest -Ad Domain Registration Date Last Month  Step will Start from here </font> ");
		System.out.println();
		System.out.println("-ShortBy Newest -Ad Domain Registration Date -Last Month");
		helper.waitFor(domainRegistrationfilter);
		helper.highLightElement(driver, domainRegistrationfilter);
		helper.jsScrollintoview(domainRegistrationfilter);
		domainRegistrationfilter.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Ad Domain Registration Date filter Icon");

		helper.waitFor(Last_Month);
		helper.highLightElement(driver, Last_Month);
		helper.jsScrollintoview(Last_Month);
		Last_Month.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On Domain Registration Date  Last month Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step4 -</font>  Total Ad Count is :"+ totaladscount);

		try
		{
			String lastSeenDate_today1=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			helper.waitFor(date1);
			helper.Scrollintoview(date1);
			String  imageDate1= date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
			System.out.println("Current Date: "+imageDate1);
			helper.waitFor(lastdate1);
			helper.Scrollintoview(lastdate1);
			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it1=S1.iterator();
			String parent1=it1.next();
			String child1=it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today1 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate1=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate1);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today1);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate1);   
			driver.close();
			driver.switchTo().window(parent1);
			helper.getLastseenDate(lastSeenDate_today1, imageDate1);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			helper.waitFor(date2);
			helper.Scrollintoview(date2);
			helper.waitFor(lastdate2);
			helper.Scrollintoview(lastdate2);
			String  imageDate2= date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
			System.out.println("Current Date: "+imageDate2);
			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S2=driver.getWindowHandles();
			Iterator<String>it2=S2.iterator();
			String parent2=it2.next();
			String child2=it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today2 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate2=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate2);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today2);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate2);   
			driver.close();
			driver.switchTo().window(parent2);
			helper.getLastseenDate(lastSeenDate_today2, imageDate2);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today3=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate3= date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
			System.out.println("Current Date: "+imageDate3);
			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S3=driver.getWindowHandles();
			Iterator<String>it3=S3.iterator();
			String parent3=it3.next();
			String child3=it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today3 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate3=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate3);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today3);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate3);   
			driver.close();
			driver.switchTo().window(parent3);
			helper.getLastseenDate(lastSeenDate_today3, imageDate3);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today4=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate4= date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
			System.out.println("Current Date: "+imageDate4);
			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S4=driver.getWindowHandles();
			Iterator<String>it4=S4.iterator();
			String parent4=it4.next();
			String child4=it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today4 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate4=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate4);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today4);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate4);   
			driver.close();
			driver.switchTo().window(parent4);
			helper.getLastseenDate(lastSeenDate_today4, imageDate4);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today5=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate5= date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
			System.out.println("Current Date: "+imageDate5);
			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S5=driver.getWindowHandles();
			Iterator<String>it5=S5.iterator();
			String parent5=it5.next();
			String child5=it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today5 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate5=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate5);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today5);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate5);   
			driver.close();
			driver.switchTo().window(parent5);
			helper.getLastseenDate(lastSeenDate_today5, imageDate5);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today6=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate6= date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
			System.out.println("Current Date: "+imageDate6);
			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S6=driver.getWindowHandles();
			Iterator<String>it6=S6.iterator();
			String parent6=it6.next();
			String child6=it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today6 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate6=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate6);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today6);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate6);   
			driver.close();
			driver.switchTo().window(parent6);
			helper.getLastseenDate(lastSeenDate_today6, imageDate6);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today7=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate7= date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
			System.out.println("Current Date: "+imageDate7);
			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S7=driver.getWindowHandles();
			Iterator<String>it7=S7.iterator();
			String parent7=it7.next();
			String child7=it7.next();

			driver.switchTo().window(child7);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today7 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate7=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate7);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today7);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate7);   
			driver.close();
			driver.switchTo().window(parent7);
			helper.getLastseenDate(lastSeenDate_today7, imageDate7);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today8=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate8= date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
			System.out.println("Current Date: "+imageDate8);
			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S8=driver.getWindowHandles();
			Iterator<String>it8=S8.iterator();
			String parent8=it8.next();
			String child8=it8.next();

			driver.switchTo().window(child8);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today8 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate8=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate8);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today8);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate8);   
			driver.close();
			driver.switchTo().window(parent8);
			helper.getLastseenDate(lastSeenDate_today8, imageDate8);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today9=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate9= date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
			System.out.println("Current Date: "+imageDate9);
			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S9=driver.getWindowHandles();
			Iterator<String>it9=S9.iterator();
			String parent9=it9.next();
			String child9=it9.next();

			driver.switchTo().window(child9);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today9 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate9=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate9);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today9);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate9);   
			driver.close();
			driver.switchTo().window(parent9);
			helper.getLastseenDate(lastSeenDate_today9, imageDate9);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today10=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate10= date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
			System.out.println("Current Date: "+imageDate10);
			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S10=driver.getWindowHandles();
			Iterator<String>it10=S10.iterator();
			String parent10=it10.next();
			String child10=it10.next();

			driver.switchTo().window(child10);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today10 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate10=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate10);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today10);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate10);   
			driver.close();
			driver.switchTo().window(parent10);
			helper.getLastseenDate(lastSeenDate_today10, imageDate10);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today11=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate11= date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
			System.out.println("Current Date: "+imageDate11);
			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S11=driver.getWindowHandles();
			Iterator<String>it11=S11.iterator();
			String parent11=it11.next();
			String child11=it11.next();

			driver.switchTo().window(child11);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today11 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate11=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate11);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today11);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate11);   
			driver.close();
			driver.switchTo().window(parent11);
			helper.getLastseenDate(lastSeenDate_today11, imageDate11);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today12=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font> ");
			System.out.println("");
			System.out.println("12 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate12= date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
			System.out.println("Current Date: "+imageDate12);
			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S12=driver.getWindowHandles();
			Iterator<String>it12=S12.iterator();
			String parent12=it12.next();
			String child12=it12.next();

			driver.switchTo().window(child12);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today12 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate12=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate12);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today12);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate12);   
			driver.close();
			driver.switchTo().window(parent12);
			helper.getLastseenDate(lastSeenDate_today12, imageDate12);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today13=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font> ");
			System.out.println("");
			System.out.println("13 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate13= date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
			System.out.println("Current Date: "+imageDate13);
			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 
			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S13=driver.getWindowHandles();
			Iterator<String>it13=S13.iterator();
			String parent13=it13.next();
			String child13=it13.next();

			driver.switchTo().window(child13);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today13 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate13=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate13);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today13);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate13);   
			driver.close();
			driver.switchTo().window(parent13);
			helper.getLastseenDate(lastSeenDate_today13, imageDate13);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today14=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font> ");
			System.out.println("");
			System.out.println("14 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate14= date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
			System.out.println("Current Date: "+imageDate14);
			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S14=driver.getWindowHandles();
			Iterator<String>it14=S14.iterator();
			String parent14=it14.next();
			String child14=it14.next();

			driver.switchTo().window(child14);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today14 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate14=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate14);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today14);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate14);   
			driver.close();
			driver.switchTo().window(parent14);
			helper.getLastseenDate(lastSeenDate_today14, imageDate14);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today15=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font> ");
			System.out.println("");
			System.out.println("15 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate15= date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
			System.out.println("Current Date: "+imageDate15);
			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S15=driver.getWindowHandles();
			Iterator<String>it15=S15.iterator();
			String parent15=it15.next();
			String child15=it15.next();

			driver.switchTo().window(child15);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today15 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate15=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate15);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today15);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate15);   
			driver.close();
			driver.switchTo().window(parent15);
			helper.getLastseenDate(lastSeenDate_today15, imageDate15);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		helper.waitFor(Clear_Filters);
		helper.Scrollintoview(Clear_Filters);
		Clear_Filters.click();

	}


	public void DomainRegistrationDate_Custom_Range_Days() throws InterruptedException
	{
		helper.waitForPageToLoad();
		Reporter.log("      ");
		Reporter.log("<B><font color = 'green'> -ShortBy Newest -Ad Domain Registration Date Custom Range Step will Start from here </font> ");
		System.out.println();
		System.out.println("-ShortBy Newest -Ad Domain Registration Date -Custom Range");
		helper.waitFor(domainRegistrationfilter);
		helper.highLightElement(driver, domainRegistrationfilter);
		helper.jsScrollintoview(domainRegistrationfilter);
		domainRegistrationfilter.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Ad Domain Registration Date filter Icon");

		helper.waitFor(Custom_Range);
		helper.highLightElement(driver, Custom_Range);
		helper.Scrollintoview(Custom_Range);
		Custom_Range.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On Domain Registration Date Custom Range Icon");


		helper.waitFor(leftmonthselect);
		helper.highLightElement(driver,leftmonthselect);
		helper.jsScrollintoview(leftmonthselect);
		helper.Scrollintoview(leftmonthselect);
		helper.SelectDropdownValue(leftmonthselect,ReadConfig.getProperty("Leftmonthselect1"));
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Selected Month: "+ReadConfig.getProperty("Leftmonthselect1"));
		System.out.println("Selected Month: "+ReadConfig.getProperty("Leftmonthselect1"));

		helper.waitFor(leftyearselect);
		helper.highLightElement(driver,leftyearselect);
		helper.jsScrollintoview(leftyearselect);
		helper.SelectDropdownValue(leftyearselect,ReadConfig.getProperty("Leftyearselect1"));
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Selected Year: "+ReadConfig.getProperty("Leftyearselect1"));
		System.out.println("Selected Year: "+ReadConfig.getProperty("Leftyearselect1"));

		helper.waitFor(rightmonthselect);
		helper.highLightElement(driver,rightmonthselect);
		helper.jsScrollintoview(rightmonthselect);
		helper.SelectDropdownValue(rightmonthselect,ReadConfig.getProperty("Rightmonthselect2"));
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Selected Month: "+ReadConfig.getProperty("Rightmonthselect2"));
		System.out.println("Selected Month: "+ReadConfig.getProperty("Rightmonthselect2"));

		helper.waitFor(rightyearselect);
		helper.highLightElement(driver,rightyearselect);
		helper.jsScrollintoview(rightyearselect);
		helper.SelectDropdownValue(rightyearselect,ReadConfig.getProperty("Rightyearselect2"));
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Selected Year: "+ReadConfig.getProperty("Rightyearselect2"));
		System.out.println("Selected Year "+ReadConfig.getProperty("Rightyearselect2"));


		/*	helper.waitFor(Custom_Range_Next_Line);
		helper.highLightElement(driver, Custom_Range_Next_Line);
		helper.Scrollintoview(Custom_Range_Next_Line);
		Custom_Range_Next_Line.click();
		Custom_Range_Next_Line.click();*/


		helper.waitFor(adSeenBetween_Start_range1);
		helper.highLightElement(driver,adSeenBetween_Start_range1);
		helper.jsScrollintoview(adSeenBetween_Start_range1);
		adSeenBetween_Start_range1.click();
		Reporter.log("<B><font color = 'orange'> Step7 -</font> Clicked On Ad Seen Between Start Custom Range Icon");

		helper.waitFor(adSeenBetween_end_range2);
		helper.highLightElement(driver,adSeenBetween_end_range2);
		helper.jsScrollintoview(adSeenBetween_end_range2);
		helper.Scrollintoview(adSeenBetween_end_range2);
		adSeenBetween_end_range2.click();
		Reporter.log("<B><font color = 'orange'> Step8 -</font> Clicked On Ad Seen Between End Custom Range Icon:");



		helper.waitFor(DomainCustomRangeApplyButton);
		helper.highLightElement(driver, DomainCustomRangeApplyButton);
		helper.jsScrollintoview(DomainCustomRangeApplyButton);
		DomainCustomRangeApplyButton.click();
		Reporter.log("<B><font color = 'orange'> Step9 -</font> Clicked On Apply Button Icon");
		helper.waitForPageToLoad();



		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step10 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step11 -</font>  Total Ad Count is :"+ totaladscount);

		try
		{
			String lastSeenDate_today1=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			helper.waitFor(date1);
			helper.highLightElement(driver, date1);
			String  imageDate1= date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate1);
			System.out.println("Current Date: "+imageDate1);
			helper.waitFor(lastdate1);
			helper.highLightElement(driver, lastdate1);
			String lastimageDate1=lastdate1.getText();
			System.out.println("Last Image Date is :"+lastimageDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate1); 

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it1=S1.iterator();
			String parent1=it1.next();
			String child1=it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today1 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate1=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate1);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today1);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate1);   
			driver.close();
			driver.switchTo().window(parent1);
			//		helper.getLastseenDate(lastSeenDate_today1, imageDate1);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today2=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate2= date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate2);
			System.out.println("Current Date: "+imageDate2);
			String lastimageDate2=lastdate2.getText();
			System.out.println("Last Image Date is :"+lastimageDate2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate2); 

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S2=driver.getWindowHandles();
			Iterator<String>it2=S2.iterator();
			String parent2=it2.next();
			String child2=it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today2 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate2=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate2);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today2);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate2);   
			driver.close();
			driver.switchTo().window(parent2);
			//		helper.getLastseenDate(lastSeenDate_today2, imageDate2);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today3=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate3= date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate3);
			System.out.println("Current Date: "+imageDate3);
			String lastimageDate3=lastdate3.getText();
			System.out.println("Last Image Date is :"+lastimageDate3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate3); 

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S3=driver.getWindowHandles();
			Iterator<String>it3=S3.iterator();
			String parent3=it3.next();
			String child3=it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today3 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate3=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate3);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today3);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate3);   
			driver.close();
			driver.switchTo().window(parent3);
			//		helper.getLastseenDate(lastSeenDate_today3, imageDate3);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today4=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate4= date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate4);
			System.out.println("Current Date: "+imageDate4);
			String lastimageDate4=lastdate4.getText();
			System.out.println("Last Image Date is :"+lastimageDate4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate4); 

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S4=driver.getWindowHandles();
			Iterator<String>it4=S4.iterator();
			String parent4=it4.next();
			String child4=it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today4 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate4=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate4);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today4);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate4);   
			driver.close();
			driver.switchTo().window(parent4);
			//		helper.getLastseenDate(lastSeenDate_today4, imageDate4);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today5=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate5= date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate5);
			System.out.println("Current Date: "+imageDate5);
			String lastimageDate5=lastdate5.getText();
			System.out.println("Last Image Date is :"+lastimageDate5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate5); 

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S5=driver.getWindowHandles();
			Iterator<String>it5=S5.iterator();
			String parent5=it5.next();
			String child5=it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today5 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate5=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate5);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today5);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate5);   
			driver.close();
			driver.switchTo().window(parent5);
			//		helper.getLastseenDate(lastSeenDate_today5, imageDate5);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today6=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate6= date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate6);
			System.out.println("Current Date: "+imageDate6);
			String lastimageDate6=lastdate6.getText();
			System.out.println("Last Image Date is :"+lastimageDate6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate6); 

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S6=driver.getWindowHandles();
			Iterator<String>it6=S6.iterator();
			String parent6=it6.next();
			String child6=it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today6 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate6=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate6);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today6);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate6);   
			driver.close();
			driver.switchTo().window(parent6);
			//			helper.getLastseenDate(lastSeenDate_today6, imageDate6);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today7=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate7= date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate7);
			System.out.println("Current Date: "+imageDate7);
			String lastimageDate7=lastdate7.getText();
			System.out.println("Last Image Date is :"+lastimageDate7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate7); 

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S7=driver.getWindowHandles();
			Iterator<String>it7=S7.iterator();
			String parent7=it7.next();
			String child7=it7.next();

			driver.switchTo().window(child7);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today7 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate7=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate7);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today7);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate7);   
			driver.close();
			driver.switchTo().window(parent7);
			//			helper.getLastseenDate(lastSeenDate_today7, imageDate7);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today8=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate8= date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate8);
			System.out.println("Current Date: "+imageDate8);
			String lastimageDate8=lastdate8.getText();
			System.out.println("Last Image Date is :"+lastimageDate8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate8); 

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S8=driver.getWindowHandles();
			Iterator<String>it8=S8.iterator();
			String parent8=it8.next();
			String child8=it8.next();

			driver.switchTo().window(child8);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today8 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate8=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate8);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today8);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate8);   
			driver.close();
			driver.switchTo().window(parent8);
			//			helper.getLastseenDate(lastSeenDate_today8, imageDate8);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today9=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate9= date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate9);
			System.out.println("Current Date: "+imageDate9);
			String lastimageDate9=lastdate9.getText();
			System.out.println("Last Image Date is :"+lastimageDate9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate9); 

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S9=driver.getWindowHandles();
			Iterator<String>it9=S9.iterator();
			String parent9=it9.next();
			String child9=it9.next();

			driver.switchTo().window(child9);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today9 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate9=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate9);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today9);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate9);   
			driver.close();
			driver.switchTo().window(parent9);
			//			helper.getLastseenDate(lastSeenDate_today9, imageDate9);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today10=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate10= date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate10);
			System.out.println("Current Date: "+imageDate10);
			String lastimageDate10=lastdate10.getText();
			System.out.println("Last Image Date is :"+lastimageDate10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate10); 

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S10=driver.getWindowHandles();
			Iterator<String>it10=S10.iterator();
			String parent10=it10.next();
			String child10=it10.next();

			driver.switchTo().window(child10);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today10 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate10=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate10);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today10);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate10);   
			driver.close();
			driver.switchTo().window(parent10);
			//			helper.getLastseenDate(lastSeenDate_today10, imageDate10);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today11=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate11= date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate11);
			System.out.println("Current Date: "+imageDate11);
			String lastimageDate11=lastdate11.getText();
			System.out.println("Last Image Date is :"+lastimageDate11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate11); 

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S11=driver.getWindowHandles();
			Iterator<String>it11=S11.iterator();
			String parent11=it11.next();
			String child11=it11.next();

			driver.switchTo().window(child11);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today11 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate11=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate11);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today11);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate11);   
			driver.close();
			driver.switchTo().window(parent11);
			//			helper.getLastseenDate(lastSeenDate_today11, imageDate11);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today12=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font> ");
			System.out.println("");
			System.out.println("12 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate12= date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate12);
			System.out.println("Current Date: "+imageDate12);
			String lastimageDate12=lastdate12.getText();
			System.out.println("Last Image Date is :"+lastimageDate12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate12); 

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S12=driver.getWindowHandles();
			Iterator<String>it12=S12.iterator();
			String parent12=it12.next();
			String child12=it12.next();

			driver.switchTo().window(child12);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today12 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate12=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate12);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today12);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate12);   
			driver.close();
			driver.switchTo().window(parent12);
			//			helper.getLastseenDate(lastSeenDate_today12, imageDate12);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String lastSeenDate_today13=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font> ");
			System.out.println("");
			System.out.println("13 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate13= date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate13);
			System.out.println("Current Date: "+imageDate13);
			String lastimageDate13=lastdate13.getText();
			System.out.println("Last Image Date is :"+lastimageDate13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate13); 
			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S13=driver.getWindowHandles();
			Iterator<String>it13=S13.iterator();
			String parent13=it13.next();
			String child13=it13.next();

			driver.switchTo().window(child13);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today13 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate13=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate13);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today13);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate13);   
			driver.close();
			driver.switchTo().window(parent13);
			//			helper.getLastseenDate(lastSeenDate_today13, imageDate13);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today14=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font> ");
			System.out.println("");
			System.out.println("14 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate14= date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate14);
			System.out.println("Current Date: "+imageDate14);
			String lastimageDate14=lastdate14.getText();
			System.out.println("Last Image Date is :"+lastimageDate14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate14); 

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S14=driver.getWindowHandles();
			Iterator<String>it14=S14.iterator();
			String parent14=it14.next();
			String child14=it14.next();

			driver.switchTo().window(child14);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today14 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate14=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate14);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today14);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate14);   
			driver.close();
			driver.switchTo().window(parent14);
			//			helper.getLastseenDate(lastSeenDate_today14, imageDate14);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String lastSeenDate_today15=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font> ");
			System.out.println("");
			System.out.println("15 Ads");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Ads Caputure Image Date :");
			System.out.println("Ads Caputure Image Date");
			String  imageDate15= date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date is :"+imageDate15);
			System.out.println("Current Date: "+imageDate15);
			String lastimageDate15=lastdate15.getText();
			System.out.println("Last Image Date is :"+lastimageDate15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last Image Date is :"+lastimageDate15); 

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S15=driver.getWindowHandles();
			Iterator<String>it15=S15.iterator();
			String parent15=it15.next();
			String child15=it15.next();

			driver.switchTo().window(child15);

			helper.waitForPageToLoad();
			helper.waitFor(lastSeen);
			helper.highLightElement(driver, lastSeen);
			helper.Scrollintoview(lastSeen);
			lastSeenDate_today15 = lastSeen.getText();
			helper.Scrollintoview(Domain_Rgsd_Date);
			String DomainRgsdDate15=Domain_Rgsd_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_ AdDetails Page= " +  lastSeenDate_today15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Domain_Rgsd_Date AdDetails Page= " +  DomainRgsdDate15);
			System.out.println("lastSeenDate_today: "+lastSeenDate_today15);
			System.out.println("Domain Rgsd Date: "+DomainRgsdDate15);   
			driver.close();
			driver.switchTo().window(parent15);
			//			helper.getLastseenDate(lastSeenDate_today15, imageDate15);
		}
		catch(Exception e)
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsScrollintoview(Clear_Filters);
		Clear_Filters.click();
		//	Reporter.log("<B><font color = 'orange'> Step9 -</font> Clicked On Clear Filters Icon");
		helper.waitForPageToLoad();
		System.out.println(" ");
		Reporter.log(" ");
	}


	public void GdnPageFilters()
	{
		Reporter.log("<B><font color = 'purple'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();


		//		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'purple'> Step2 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(gdn);
		helper.highLightElement(driver, gdn);
		gdn.click();

		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'purple'> Step3 -</font> I am on the page :" + Page_titel);
		Assert.assertTrue(gdn.isDisplayed(), "PowerAdSpy | GDN Dashboard");
		Reporter.log("<B><font color = 'purple'> Step4 -</font> Clicked On GDN  Icon");
		//		helper.waitForPageToLoad();


		System.out.println();
		System.out.println("ShortBy Newest:");
		Reporter.log("    ");
		Reporter.log("<B><font color = 'green'>  - ShortBy Newest Step will Start from here </font>  ");
		helper.waitFor(sortBy);
		helper.highLightElement(driver, sortBy);
		sortBy.click();
		Reporter.log("");
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On sortBy Icon");

		helper.waitFor(SortBy_Newest);
		helper.highLightElement(driver, SortBy_Newest);
		SortBy_Newest.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On SortBy Newest Icon");


		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();


	}









	public void verify_language() throws InterruptedException
	{



		helper.waitFor(filterDropDown);
		helper.highLightElement(driver, filterDropDown);
		helper.Scrollintoview(filterDropDown);
		try {
			filterDropDown.click();
		} catch (Exception e) {
			// TODO: handle exception
			helper.jsCLick(filterDropDown);
		}




		Reporter.log(" ");
		Reporter.log("<B><font color = 'Green'>- Language </font>");
		Reporter.log("       ==> -" + ReadConfig.getProperty("Language"));
		helper.Scrollintoview(filterslangugage);
		helper.highLightElement(driver, filterslangugage);
		helper.SelectDropdownValue(filterslangugage, ReadConfig.getProperty("Language"));

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step2 -</font>  Total Ad Count is :" +totaladscount);


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -1 Ad -</font>  ");
		System.out.println("");
		System.out.println("1 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -2 Ad -</font>  ");
		System.out.println("");
		System.out.println("2 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);
			String linkText1 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -3 Ad -</font>  ");
		System.out.println("");
		System.out.println("3 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);
			String linkText1 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -4 Ad -</font>  ");
		System.out.println("");
		System.out.println("4 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);
			String linkText1 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -5 Ad -</font>  ");
		System.out.println("");
		System.out.println("5 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);
			String linkText1 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -6 Ad -</font>  ");
		System.out.println("");
		System.out.println("6 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);
			String linkText1 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -7 Ad -</font>  ");
		System.out.println("");
		System.out.println("7 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);
			String linkText1 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -8 Ad -</font>  ");
		System.out.println("");
		System.out.println("8 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);
			String linkText1 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -9 Ad -</font>  ");
		System.out.println("");
		System.out.println("9 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);
			String linkText1 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -10 Ad -</font>  ");
		System.out.println("");
		System.out.println("10 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);
			String linkText1 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -11 Ad -</font>  ");
		System.out.println("");
		System.out.println("11 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);
			String linkText1 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -12 Ad -</font>  ");
		System.out.println("");
		System.out.println("12 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);
			String linkText1 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
		System.out.println("");
		System.out.println("13 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);
			String linkText1 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
		System.out.println("");
		System.out.println("14 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);
			String linkText1 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
		System.out.println("");
		System.out.println("15 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);
			String linkText1 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsScrollintoview(Clear_Filters);
		helper.Scrollintoview(Clear_Filters);
		helper.jsCLick(Clear_Filters);
		Clear_Filters.click();
		//	Reporter.log("<B><font color = 'orange'> Step9 -</font> Clicked On Clear Filters Icon");
		helper.waitForPageToLoad();
		Clear_Filters.click();
		helper.waitForPageToLoad();
		System.out.println(" ");
		Reporter.log(" ");
	}

	public void verify_filter_Gender() throws InterruptedException
	{
		helper.waitFor(filterDropDown);
		helper.highLightElement(driver, filterDropDown);
		filterDropDown.click();


		Reporter.log(" ");
		Reporter.log("<B><font color = 'Green'>- Gender </font>");
		Reporter.log("       ==> -" + ReadConfig.getProperty("gender"));
		helper.Scrollintoview(filtersgender);
		helper.highLightElement(driver, filtersgender);
		helper.SelectDropdownValue(filtersgender, ReadConfig.getProperty("gender"));

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Search Button Icon");
		searchButton.click();
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step2 -</font>  Total Ad Count is :" +totaladscount);



		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -1 Ad -</font>  ");
		System.out.println("");
		System.out.println("1 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();


			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}

			driver.close();
			driver.switchTo().window(parent);

		}catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -2 Ad -</font>  ");
		System.out.println("");
		System.out.println("2 Ads");
		try 
		{
			helper.jsScrollintoview(ShowAnalytics2);
			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);

			String linkText1 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();

			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}


			driver.close();
			driver.switchTo().window(parent);
		}catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -3 Ad -</font>  ");
		System.out.println("");
		System.out.println("3 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);
			String linkText1 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();

			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}


			driver.close();
			driver.switchTo().window(parent);
		}catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -4 Ad -</font>  ");
		System.out.println("");
		System.out.println("4 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);
			String linkText1 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();

			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}


			driver.close();
			driver.switchTo().window(parent);
		}catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -5 Ad -</font>  ");
		System.out.println("");
		System.out.println("5 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);
			String linkText1 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();

			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}


			driver.close();
			driver.switchTo().window(parent);
		}catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -6 Ad -</font>  ");
		System.out.println("");
		System.out.println("6 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);
			String linkText1 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();

			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}


			driver.close();
			driver.switchTo().window(parent);
		}catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -7 Ad -</font>  ");
		System.out.println("");
		System.out.println("7 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);
			String linkText1 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();

			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}


			driver.close();
			driver.switchTo().window(parent);
		}catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -8 Ad -</font>  ");
		System.out.println("");
		System.out.println("8 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);
			String linkText1 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();

			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}


			driver.close();
			driver.switchTo().window(parent);
		}catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -9 Ad -</font>  ");
		System.out.println("");
		System.out.println("9 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);
			String linkText1 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();

			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}


			driver.close();
			driver.switchTo().window(parent);
		}catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -10 Ad -</font>  ");
		System.out.println("");
		System.out.println("10 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);
			String linkText1 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();

			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}


			driver.close();
			driver.switchTo().window(parent);
		}catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -11 Ad -</font>  ");
		System.out.println("");
		System.out.println("11 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);
			String linkText1 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();

			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}


			driver.close();
			driver.switchTo().window(parent);			
		}catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -12 Ad -</font>  ");
		System.out.println("");
		System.out.println("12 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);
			String linkText1 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();

			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}


			driver.close();
			driver.switchTo().window(parent);
		}catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
		System.out.println("");
		System.out.println("13 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);
			String linkText1 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();

			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}


			driver.close();
			driver.switchTo().window(parent);
		}catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
		System.out.println("");
		System.out.println("14 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);
			String linkText1 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();

			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}


			driver.close();
			driver.switchTo().window(parent);
		}catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
		System.out.println("");
		System.out.println("15 Ads");
		try 
		{
			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);
			String linkText1 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();

			try {
				helper.Scrollintoview(male);
				helper.waitFor(male);
				helper.highLightElement(driver, male);
				String st = male.getText();
				System.out.println(" "+st);
				Reporter.log("<B><font color = 'blue'> ==> -</font>  "+st);

				helper.Scrollintoview(male_percent);
				helper.waitFor(male_percent);
				helper.highLightElement(driver, male_percent);
				String st2 = male_percent.getText();
				System.out.println("Male percentage=" +st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font>Male percentage=" +st2);
				System.out.println(st+" = "+st2);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+st+" = "+st2);

				System.out.println(" ");
				Reporter.log(" ");

				helper.Scrollintoview(female);
				helper.waitFor(female);
				helper.highLightElement(driver, female);
				String f=female.getText();
				System.out.println("  "+f);
				Reporter.log("<B><font color = 'blue'> ==> -</font>   "+f);

				helper.Scrollintoview(female_percent);
				helper.waitFor(female_percent);
				helper.highLightElement(driver, female_percent);
				String f3=female_percent.getText();
				System.out.println("Female percentage= "+f3);
				System.out.println("female= "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> female percentage= "+f3);
				System.out.println(f+" = "+f3);
				Reporter.log("<B><font color = 'blue'> ==> -</font> "+f+" = "+f3);	
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("Not showing any details: of Gender: Male and Female");
				Reporter.log("<B><font color = 'red'> ==> -</font> Not showing any details: of Gender: Male and Female");
			}


			driver.close();
			driver.switchTo().window(parent);
		}
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsScrollintoview(Clear_Filters);
		helper.Scrollintoview(Clear_Filters);
		helper.jsCLick(Clear_Filters);
		Clear_Filters.click();
		//	Reporter.log("<B><font color = 'orange'> Step9 -</font> Clicked On Clear Filters Icon");
		helper.waitForPageToLoad();
		Clear_Filters.click();
		helper.waitForPageToLoad();
		System.out.println(" ");
		Reporter.log(" ");
	}


	public void verify_filter_Country() throws Exception
	{

		helper.waitFor(filterDropDown);
		helper.highLightElement(driver, filterDropDown);
		filterDropDown.click();


		Reporter.log(" ");
		Reporter.log("<B><font color = 'Green'>- Country </font>");
		Reporter.log("       ==> -" + ReadConfig.getProperty("Country"));
		helper.SelectDropdownValue(countryDropDown, ReadConfig.getProperty("Country"));

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		helper.jsCLick(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		helper.jsCLick(searchButton);
		searchButton.click();
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step2 -</font>  Total Ad Count is :" +totaladscount);


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -1 Ad -</font>  ");
		System.out.println("");
		System.out.println("1 Ads");
		try {

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");
			helper.ListOfcountry(countryDropDown1);


			driver.close();
			driver.switchTo().window(parent);			
		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -2 Ad -</font>  ");
		System.out.println("");
		System.out.println("2 Ads");
		try {

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);




		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -3 Ad -</font>  ");
		System.out.println("");
		System.out.println("3 Ads");
		try {

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -4 Ad -</font>  ");
		System.out.println("");
		System.out.println("4 Ads");
		try {

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);

			driver.close();
			driver.switchTo().window(parent);


		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -5 Ad -</font>  ");
		System.out.println("");
		System.out.println("5 Ads");
		try {

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);


		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -6 Ad -</font>  ");
		System.out.println("");
		System.out.println("6 Ads");
		try {

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);


		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -7 Ad -</font>  ");
		System.out.println("");
		System.out.println("7 Ads");
		try {

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);



		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -8 Ad -</font>  ");
		System.out.println("");
		System.out.println("8 Ads");
		try {

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);



		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -9 Ad -</font>  ");
		System.out.println("");
		System.out.println("9 Ads");
		try {

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);



		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -10 Ad -</font>  ");
		System.out.println("");
		System.out.println("10 Ads");
		try {

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.Scrollintoview(country);
			helper.waitFor(country);
			helper.highLightElement(driver, country);
			String textCountry = country.getText();
			System.out.println("Filter Country : " + textCountry);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country in  Page= " + textCountry);
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);



		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -11 Ad -</font>  ");
		System.out.println("");
		System.out.println("11 Ads");
		try {

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);



		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -12 Ad -</font>  ");
		System.out.println("");
		System.out.println("12 Ads");
		try {

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();

			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);





		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
		System.out.println("");
		System.out.println("13 Ads");
		try {

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();


			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);






		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
		System.out.println("");
		System.out.println("14 Ads");
		try {

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();

			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);


		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
		System.out.println("");
		System.out.println("15 Ads");
		try {

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();

			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);


		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsScrollintoview(Clear_Filters);
		Clear_Filters.click();
		//	Reporter.log("<B><font color = 'orange'> Step9 -</font> Clicked On Clear Filters Icon");
		helper.waitForPageToLoad();
		System.out.println(" ");
		Reporter.log(" ");
	}

	public void Gdnfunctionality_Of_RightSide_Icon_Page()
	{
		Reporter.log("<B><font color = 'purple'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();


		//		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'purple'> Step3 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(gdn);
		helper.highLightElement(driver, gdn);
		gdn.click();

		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'purple'> Step2 -</font> I am on the page :" + Page_titel);

		Assert.assertTrue(gdn.isDisplayed(), "PowerAdSpy | GDN Dashboard");

		Reporter.log("<B><font color = 'purple'> Step4 -</font> Clicked On GDN  Icon");
		//		helper.waitForPageToLoad();
		System.out.println();
		Reporter.log("    ");

		helper.waitForPageToLoad();



	}


	public void InvitedFirend() throws Exception, Exception
	{
		Reporter.log("<B><font color = 'red'> - Invited Firend step start here </font>");
		//		helper.waitFor(fb);
		helper.highLightElement(driver, gdn);
		helper.Scrollintoview(gdn);
		gdn.click();
		Assert.assertTrue(gdn.isDisplayed(), "PowerAdSpy | GDN Dashboard");
		Reporter.log("<B><font color = 'purple'> Step4 -</font> Clicked On GDN  Icon");

		helper.waitForPageToLoad();

		//		helper.waitFor(invitedFirendicon);
		helper.highLightElement(driver, invitedFirendicon);
		invitedFirendicon.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On Invited Firend Icon");
		String title = driver.getTitle();
		System.out.println("Title: "+title);
		String getcurrenturl=driver.getCurrentUrl();
		System.out.println("CurrentUrl: "+getcurrenturl);
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Invited Firend: "+title);
		helper.waitForPageToLoad();



		helper.waitFor(eamilTextField);
		helper.highLightElement(driver, eamilTextField);
		eamilTextField.sendKeys("dsuryaprabhakar@globussoft.in");
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Send mail ID To Text Field.");
		System.out.println("Send mail ID To Text Field.");
		helper.waitForPageToLoad();

		helper.waitFor(chooseFile);
		helper.highLightElement(driver, chooseFile);
		helper.jsCLick(chooseFile);
		Thread.sleep(3000);
		chooseFile.sendKeys("C:\\Users\\Dsurya\\Desktop\\persuasive-ads-coca-cola.jpg");
		Reporter.log("<B><font color = 'orange'> Step5 -</font> chooseFile To Text Field.");
		System.out.println("chooseFile To Text Field");
		helper.waitForPageToLoad();

		helper.waitFor(sendFile);
		helper.highLightElement(driver, sendFile);
		sendFile.click();
		Reporter.log("<B><font color = 'orange'> Step6 -</font> ChooseFile Click.");
		System.out.println("ChooseFile Click.");
		helper.waitForPageToLoad();


		helper.waitFor(ok);
		helper.highLightElement(driver, ok);
		ok.click();
		Reporter.log("<B><font color = 'orange'> Step6 -</font> Popup Message click");
		System.out.println("Popup Message click");
		helper.waitForPageToLoad();

	}

	/*	helper.Scrollintoview(Invitefriendsviaemail);
		helper.jsScrollintoview(Invitefriendsviaemail);
		Invitefriendsviaemail.sendKeys("testing@gmail.com");
		helper.Scrollintoview(SendInvite);
		SendInvite.submit();*/
	/*	Thread.sleep(2000);
		helper.Scrollintoview(fileUpload);
		helper.jsScrollintoview(fileUpload);
		Thread.sleep(2000);
		helper.jsCLick(fileUpload);


		Thread.sleep(2000);
		helper.uploadFile("persuasive-ads-coca-cola");*/



	public void Youtube() throws Exception
	{
		Reporter.log("<B><font color = 'red'> - Invited Firend step start here </font>");
		//		helper.waitFor(fb);
		helper.highLightElement(driver, gdn);
		helper.Scrollintoview(gdn);
		gdn.click();
		Assert.assertTrue(gdn.isDisplayed(), "PowerAdSpy | GDN Dashboard");
		Reporter.log("<B><font color = 'purple'> Step4 -</font> Clicked On GDN  Icon");
		helper.waitForPageToLoad();

		//		helper.waitFor(youtubeicon);
		helper.highLightElement(driver, youtubeicon);
		youtubeicon.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On YouTube Icon");
		helper.waitForPageToLoad();
		String parent=driver.getWindowHandle();
		Set<String>s=driver.getWindowHandles();
		// Now iterate using Iterator
		Iterator<String> I1= s.iterator();
		while(I1.hasNext())
		{
			String child_window=I1.next();
			if(!parent.equals(child_window))
			{
				driver.switchTo().window(child_window);
				helper.waitForPageToLoad();
				String gettitle = driver.switchTo().window(child_window).getTitle();
				System.out.println("Title: "+gettitle);
				Reporter.log("<B><font color = 'orange'> Step3 -</font> Displayed YouTube: "+gettitle);

				driver.close();

			}
		}
		driver.switchTo().window(parent);
	}

	public void Twitter() throws Exception
	{
		Reporter.log("<B><font color = 'red'> - Invited Firend step start here </font>");
		//		helper.waitFor(fb);
		helper.highLightElement(driver, gdn);
		helper.Scrollintoview(gdn);
		gdn.click();
		gdn.click();
		Assert.assertTrue(gdn.isDisplayed(), "PowerAdSpy | GDN Dashboard");
		Reporter.log("<B><font color = 'purple'> Step4 -</font> Clicked On GDN  Icon");
		helper.waitForPageToLoad();

		//		helper.waitFor(twittericon);
		helper.highLightElement(driver, twittericon);
		twittericon.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On  Twitter Icon");
		helper.waitForPageToLoad();
		String parent=driver.getWindowHandle();
		Set<String>s=driver.getWindowHandles();
		// Now iterate using Iterator
		Iterator<String> I1= s.iterator();
		while(I1.hasNext())
		{
			String child_window=I1.next();
			if(!parent.equals(child_window))
			{
				driver.switchTo().window(child_window);
				helper.waitForPageToLoad();
				String gettitle = driver.switchTo().window(child_window).getTitle();
				System.out.println("Title: "+gettitle);
				Reporter.log("<B><font color = 'orange'> Step3 -</font> Displayed Twitter: "+gettitle);

				driver.close();

			}
		}
		driver.switchTo().window(parent);

	}
	public void BookDemo() throws Exception
	{
		Reporter.log("<B><font color = 'red'> - Invited Firend step start here </font>");
		//		helper.waitFor(fb);
		helper.highLightElement(driver, gdn);
		helper.Scrollintoview(gdn);
		gdn.click();
		Assert.assertTrue(gdn.isDisplayed(), "PowerAdSpy | GDN Dashboard");
		Reporter.log("<B><font color = 'purple'> Step4 -</font> Clicked On GDN  Icon");
		helper.waitForPageToLoad();

		//			helper.waitFor(bookDemo);
		helper.highLightElement(driver, bookDemo);
		bookDemo.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On  Book Demo Icon");
		helper.waitForPageToLoad();
		String parent=driver.getWindowHandle();
		Set<String>s=driver.getWindowHandles();
		// Now iterate using Iterator
		Iterator<String> I1= s.iterator();
		while(I1.hasNext())
		{
			String child_window=I1.next();
			if(!parent.equals(child_window))
			{
				driver.switchTo().window(child_window);
				helper.waitForPageToLoad();
				String gettitle = driver.switchTo().window(child_window).getTitle();
				System.out.println("Title: "+gettitle);
				Reporter.log("<B><font color = 'orange'> Step3 -</font> Displayed Book Demo: "+gettitle);
				driver.close();

			}
		}
		driver.switchTo().window(parent);

		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsScrollintoview(Clear_Filters);
		Clear_Filters.click();
		//	Reporter.log("<B><font color = 'orange'> Step9 -</font> Clicked On Clear Filters Icon");
		helper.waitForPageToLoad();
		System.out.println(" ");
		Reporter.log(" ");
	}



	public void GdnPagelanderProperties() throws Exception
	{
		Reporter.log("<B><font color = 'purple'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();


		//		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'purple'> Step3 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(gdn);
		helper.highLightElement(driver, gdn);
		gdn.click();

		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'purple'> Step2 -</font> I am on the page :" + Page_titel);

		Assert.assertTrue(gdn.isDisplayed(), "PowerAdSpy | GDN Dashboard");

		Reporter.log("<B><font color = 'purple'> Step4 -</font> Clicked On GDN  Icon");
		//		helper.waitForPageToLoad();
		System.out.println();
		System.out.println("ShortBy Newest:");
		Reporter.log("    ");
		Reporter.log("<B><font color = 'green'>  - ShortBy Newest Step will Start from here </font>  ");
		helper.waitFor(sortBy);
		helper.highLightElement(driver, sortBy);
		sortBy.click();
		Reporter.log("");
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On sortBy Icon");

		helper.waitFor(SortBy_Newest);
		helper.highLightElement(driver, SortBy_Newest);
		SortBy_Newest.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On SortBy Newest Icon");


		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();


	}

	public void EcommercePlatform() throws InterruptedException
	{

		helper.waitFor(landerProperties);
		helper.highLightElement(driver, landerProperties);
		landerProperties.click();
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Lander Properties Button Icon");

		helper.waitFor(ecommerce);
		helper.highLightElement(driver, ecommerce);
		helper.Scrollintoview(ecommerce);
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On Ecommerce platform click");
		System.out.println("Clicked On Ecommerce platform click Icon");

		Reporter.log(" ");
		Reporter.log("<B><font color = 'Green'>- Ecommerce Platform</font>");
		Reporter.log("       :-"+ReadConfig.getProperty("EcomPlatform"));
		helper.SelectDropdownValue(ecommerce,ReadConfig.getProperty("EcomPlatform"));

		helper.SelectDropdownValue(ecommerce,ReadConfig.getProperty("EcomPlatform"));
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Selected  On Ecommerce platform "+ReadConfig.getProperty("EcomPlatform"));
		System.out.println("Selected On Ecommerce platform "+ReadConfig.getProperty("EcomPlatform"));

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		searchButton.click();
		helper.waitForPageToLoad();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On search Button Icon");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_newest=toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Total_Ads_Count_newest= " + Total_Ads_Count_newest);

		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			linkText01 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}


			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics1.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			linkText01 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}


			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics2.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			linkText01 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics3.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			linkText01 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics4.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			linkText01 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics5.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			linkText01 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics6.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			linkText01 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics7.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			linkText01 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics8.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			linkText01 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics9.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			linkText01 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics10.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			linkText01 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics11.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font>  ");
			System.out.println("");
			System.out.println("12 Ads");

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			linkText01 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics12.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font>  ");
			System.out.println("");
			System.out.println("13 Ads");

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			linkText01 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics13.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font>  ");
			System.out.println("");
			System.out.println("14 Ads");

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			linkText01 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics14.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font>  ");
			System.out.println("");
			System.out.println("15 Ads");

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			linkText01 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics15.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.Scrollintoview(Clear_Filters);
		helper.jsCLick(Clear_Filters);
		Clear_Filters.click();
	}


	public void MarketingPlatform() throws InterruptedException
	{
		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsCLick(Clear_Filters);
		helper.Scrollintoview(Clear_Filters);
		helper.jsCLick(Clear_Filters);
		Clear_Filters.click();
		Clear_Filters.click();
		helper.waitForpage();
		helper.waitForPageToLoad();

		helper.waitFor(landerProperties1);
		helper.Scrollintoview(landerProperties1);
		helper.highLightElement(driver, landerProperties1);
		landerProperties1.click();
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Lander Properties Button Icon");

		helper.waitFor(MarketingPlatform);
		helper.highLightElement(driver, MarketingPlatform);
		helper.Scrollintoview(MarketingPlatform);
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On Marketing Platform click");
		System.out.println("Clicked On Marketing Platform click Icon");

		Reporter.log(" ");
		Reporter.log("<B><font color = 'Green'>-Ecommerce Platform</font>");
		Reporter.log("       :-"+ReadConfig.getProperty("MarketingPlatform"));
		helper.SelectDropdownValue(MarketingPlatform ,ReadConfig.getProperty("MarketingPlatformBrand"));

		helper.SelectDropdownValue(MarketingPlatform,ReadConfig.getProperty("MarketingPlatformBrand"));
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Selected  On Marketing Platform "+ReadConfig.getProperty("MarketingPlatformBrand"));
		System.out.println("Selected On Ecommerce platform "+ReadConfig.getProperty("MarketingPlatformBrand"));

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		searchButton.click();
		helper.waitForPageToLoad();
		helper.waitForpage();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On search Button Icon");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_newest=toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Total_Ads_Count_newest= " + Total_Ads_Count_newest);


		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText01 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText01);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics1.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();



			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText02 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText02);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics2.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();

			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}

		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText03 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText03);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics3.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();

			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}

		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText04 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText04);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics4.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();

			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}


		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText05 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText05);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics5.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();


			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText06 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText06);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics6.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();




			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText07 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText07);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics7.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();




			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText08 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText08);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics8.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();




			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText09 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText09);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics9.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();

			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText010 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText010);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics10.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();


			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText011 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText011);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics11.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();


			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font>  ");
			System.out.println("");
			System.out.println("12 Ads");

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText012 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText012);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics12.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();


			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font>  ");
			System.out.println("");
			System.out.println("13 Ads");

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText013 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText013);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics13.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();


			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font>  ");
			System.out.println("");
			System.out.println("14 Ads");

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText014 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText014);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics14.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();


			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font>  ");
			System.out.println("");
			System.out.println("15 Ads");

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText015 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText015);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics15.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();


			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link2);
				helper.Scrollintoview(link2);
				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link3);
				helper.Scrollintoview(link3);
				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link4);
				helper.Scrollintoview(link4);
				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);

			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link5);
				helper.Scrollintoview(link5);
				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link6);
				helper.Scrollintoview(link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				String linkText=null;
				helper.highLightElement(driver, link7);
				helper.Scrollintoview(link7);
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link8);
				helper.Scrollintoview(link8);
				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);
				helper.Scrollintoview(link11);
				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);
				helper.Scrollintoview(link12);
				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.highLightElement(driver, link13);
					helper.Scrollintoview(link13);
					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					helper.AssertEcomerencePlatform(linkText);
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsScrollintoview(Clear_Filters);
		Clear_Filters.click();
		//	Reporter.log("<B><font color = 'orange'> Step9 -</font> Clicked On Clear Filters Icon");
		helper.waitForPageToLoad();
		Clear_Filters.click();
		helper.waitForPageToLoad();
		System.out.println(" ");
		Reporter.log(" ");
	}

	public void AffiliateNetwork() throws InterruptedException
	{
		helper.waitFor(landerProperties);
		helper.highLightElement(driver, landerProperties);
		landerProperties.click();
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Lander Properties Button Icon");

		helper.waitFor(AffiliateNetwork);
		helper.highLightElement(driver, AffiliateNetwork);
		helper.Scrollintoview(AffiliateNetwork);
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On Affiliate Network click");
		System.out.println("Clicked On Affiliate Network click Icon");

		Reporter.log(" ");
		Reporter.log("<B><font color = 'Green'>- Affiliate Network </font>");
		Reporter.log("       :-"+ReadConfig.getProperty("Afliated"));
		helper.SelectDropdownValue(AffiliateNetwork,ReadConfig.getProperty("Afliated"));

		helper.SelectDropdownValue(AffiliateNetwork,ReadConfig.getProperty("Afliated"));
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Selected  On Affiliate Network"+ReadConfig.getProperty("Afliated"));
		System.out.println("Selected On Affiliate Network "+ReadConfig.getProperty("Afliated"));

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		searchButton.click();
		helper.waitForPageToLoad();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On search Button Icon");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_newest=toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Total_Ads_Count_newest= " + Total_Ads_Count_newest);







		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ad");

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics1.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ad");

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			linkText1 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics2.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ad");

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			linkText1 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics3.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ad");

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			linkText1 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics4.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ad");

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			linkText1 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics5.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ad");

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			linkText1 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics6.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ad");

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			linkText1 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics7.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ad");

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			linkText1 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics8.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ad");

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			linkText1 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics9.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ad");

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			linkText1 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics10.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}





		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ad");

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			linkText1 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics11.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font>  ");
			System.out.println("");
			System.out.println("12 Ad");

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			linkText1 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics12.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font>  ");
			System.out.println("");
			System.out.println("13 Ad");

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			linkText1 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics13.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font>  ");
			System.out.println("");
			System.out.println("14 Ad");

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			linkText1 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics14.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}




		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font>  ");
			System.out.println("");
			System.out.println("15 Ad");

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			linkText1 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics15.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsScrollintoview(Clear_Filters);
		Clear_Filters.click();
		//	Reporter.log("<B><font color = 'orange'> Step9 -</font> Clicked On Clear Filters Icon");
		helper.waitForPageToLoad();
		Clear_Filters.click();
		helper.waitForPageToLoad();
		System.out.println(" ");
		Reporter.log(" ");
	}



}


