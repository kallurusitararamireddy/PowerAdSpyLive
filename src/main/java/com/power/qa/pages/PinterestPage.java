package com.power.qa.pages;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.testng.Assert;
import org.testng.Reporter;

import com.power.qa.base.TestBase;
import com.power.qa.util.Helpers;
import com.power.qa.util.ReadConfig;

public class PinterestPage extends BasePage {

	public PinterestPage(WebDriver driver) {
		super(TestBase.getDriver());
	}

	Helpers helper = new Helpers();

	@FindBy(xpath = "//img[@class='active_pg_logo img-fluid']")
	WebElement Logo;

	@FindBy(xpath = "//span[@class='guided-tour-step-button guided-tour-step-button-complete']")
	WebElement NewFeatureClosedButton;
	
	@FindBy(xpath="//a[@id='pinterest_ads']")
	WebElement pinterest;

	@FindBy(xpath = "(//*[@class='col-lg-12 col-sm-12 col-12']//*[name()='svg']//*[local-name()='text']//*[local-name()='tspan'])[3]")
	WebElement country;

	@FindBy(id ="totaladscount")
	WebElement totaladscount_ad;

	@FindBy(xpath="//div[@class='clear_filters']/a")
	WebElement clearSearchField;

	@FindBy(xpath = "//span[text()='Newest']")
	WebElement sortBy_DropDown;
	
	@FindBy(xpath = "//span[@class='dropdown-label dropdown_filter']")
	WebElement sortBy;

	@FindBy(id = "search-ads")
	WebElement search_bar;

	@FindBy(id = "totaladscount")
	WebElement toatal_Count_Ads;

	@FindBy(xpath="(//div[@class='card_col_1']//div[@class='ad_date']/..)[1]")
	WebElement current_date1;
	
	@FindBy(xpath="(//div[@class='card_col_2']//div[@class='ad_date']/..)[1]")
	WebElement current_date2;
	
	@FindBy(xpath="(//div[@class='card_col_3']//div[@class='ad_date']/..)[1]")
	WebElement current_date3;
	
	@FindBy(xpath="(//div[@class='card_col_1']//div[@class='ad_date']/..)[2]")
	WebElement current_date4;
	
	@FindBy(xpath="(//div[@class='card_col_2']//div[@class='ad_date']/..)[2]")
	WebElement current_date5;
	
	@FindBy(xpath="(//div[@class='card_col_3']//div[@class='ad_date']/..)[2]")
	WebElement current_date6;

	@FindBy(xpath="(//div[@class='card_col_1']//div[@class='ad_date']/..)[3]")
	WebElement current_date7;
	
	@FindBy(xpath="(//div[@class='card_col_2']//div[@class='ad_date']/..)[3]")
	WebElement current_date8;
	
	@FindBy(xpath="(//div[@class='card_col_3']//div[@class='ad_date']/..)[3]")
	WebElement current_date9;
	
	@FindBy(xpath="(//div[@class='card_col_1']//div[@class='ad_date']/..)[4]")
	WebElement current_date10;
	
	@FindBy(xpath="(//div[@class='card_col_2']//div[@class='ad_date']/..)[4]")
	WebElement current_date11;
	
	@FindBy(xpath="(//div[@class='card_col_3']//div[@class='ad_date']/..)[4]")
	WebElement current_date12;
	
	@FindBy(xpath="(//div[@class='card_col_1']//div[@class='ad_date']/..)[5]")
	WebElement current_date13;
	
	@FindBy(xpath="(//div[@class='card_col_2']//div[@class='ad_date']/..)[5]")
	WebElement current_date14;
	
	@FindBy(xpath="(//div[@class='card_col_3']//div[@class='ad_date']/..)[5]")
	WebElement current_date15;

	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[1]")
	WebElement showAnalytics_Button1;

	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[1]")
	WebElement showAnalytics_Button2;

	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[1]")
	WebElement showAnalytics_Button3;

	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[2]")
	WebElement showAnalytics_Button4;

	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[2]")
	WebElement showAnalytics_Button5;

	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[2]")
	WebElement showAnalytics_Button6;

	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[3]")
	WebElement showAnalytics_Button7;

	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[3]")
	WebElement showAnalytics_Button8;

	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[3]")
	WebElement showAnalytics_Button9;

	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[4]")
	WebElement showAnalytics_Button10;

	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[4]")
	WebElement showAnalytics_Button11;

	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[4]")
	WebElement showAnalytics_Button12;

	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[5]")
	WebElement showAnalytics_Button13;

	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[5]")
	WebElement showAnalytics_Button14;

	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[5]")
	WebElement showAnalytics_Button15;

	@FindBy(xpath = "//a[text()='Newest']")
	WebElement newest_Button;

	@FindBy(id = "last_seen_block")
	WebElement Last_Seen_childWindow;

	@FindBy(xpath = "//a[text()='Last Seen']")
	WebElement lastSeen_Button;

	@FindBy(xpath = "//div[@class='ad_date']")
	WebElement current_date_lastSeen;

	@FindBy(xpath = "//a[text()='Running Longest']")
	WebElement runningLongest_Button;

	@FindBy(xpath = "//div[@class='ad_date']")
	WebElement current_date_runningLongest;

	@FindBy(id = "days_running_block")
	WebElement total_Running_Days;

	@FindBy(xpath = "//a[text()='Domain Registration Date']")
	WebElement domain_Reg_Date_Button;

	@FindBy(id = "domain_date")
	WebElement Domain_Rgsd_Date;

	// adseenBetween

	@FindBy(xpath = "//span[text()='Ad Seen Between :']/following-sibling::div//div[@id='ads_timepicker']")
	WebElement ads_Seen_Between_Button;

	@FindBy(xpath = "(//li[text()='All'])[1]")
	WebElement all_Button;

	@FindBy(xpath = "(//li[text()='Today'])[1]")
	WebElement today_Button;

	@FindBy(xpath = "(//li[text()='Yesterday'])[1]")
	WebElement yesterday_Button;

	@FindBy(xpath = "(//li[text()='Last Seven Days'])[1]")
	WebElement Last_Seven_Days_Button;

	@FindBy(xpath = "(//li[text()='Last Thirty Days'])[1]")
	WebElement Last_Thirty_Days_Button;

	@FindBy(xpath = "(//li[text()='This Month'])[1]")
	WebElement This_Month_Button;

	@FindBy(xpath = "(//li[text()='Last Month'])[1]")
	WebElement Last_Month_Button;

	@FindBy(xpath = "(//li[text()='Custom Range'])[1]")
	WebElement Custom_Range_Button;

	@FindBy(xpath = "//th[@class='prev available']")
	WebElement previousMonthButton;

	@FindBy(xpath = "//th[@class='next available']")
	WebElement nextMonthButton;

	@FindBy(xpath = "//td[text()='1']")
	WebElement custom_startDate;

	@FindBy(xpath = "//td[text()='15']")
	WebElement custom_endDate;
	
	@FindBy(xpath="(//button[text()='Apply'])[2]")
	WebElement custom_Apply;

	// PostDate Between

	@FindBy(xpath = "//span[@id='post_timefilter']")
	WebElement post_Date_Between_DropDown;

	@FindBy(xpath = "(//li[text()='All'])[2]")
	WebElement post_Date_Between_All;

	@FindBy(id = "post_date_block")
	WebElement post_Date;

	@FindBy(xpath = "(//li[text()='Today'])[2]")
	WebElement post_Date_Between_Today;

	@FindBy(xpath = "(//li[text()='Yesterday'])[2]")
	WebElement post_Date_Between_Yesterday;

	@FindBy(xpath = "(//li[text()='Last Seven Days'])[2]")
	WebElement post_Date_Between_LastSevenDays;

	@FindBy(xpath = "(//li[text()='Last Thirty Days'])[2]")
	WebElement post_Date_Between_LastThirtyDays;

	@FindBy(xpath = "(//li[text()='This Month'])[2]")
	WebElement post_Date_Between_ThisMonth;

	@FindBy(xpath = "(//li[text()='Last Month'])[2]")
	WebElement post_Date_Between_LastMonth;

	@FindBy(xpath = "(//li[text()='Custom Range'])[2]")
	WebElement post_Date_Between_Custom;
	
	// Domain Registration Date
	
	@FindBy(xpath="//div[@id='domain_ads_timepicker']")
	WebElement domain_Reg_Date_DropDown;
	
	@FindBy(xpath="(//li[text()='All'])[3]")
	WebElement domain_Reg_Date_All;
	
	@FindBy(xpath="//div[@class='ad_date']")
	WebElement current_Image_Date;
	
	@FindBy(xpath="//a[text()='Show Analytics']")
	WebElement showAnalytics_Button;
	
	@FindBy(xpath="//div[@id='domain_date']")
	WebElement domain_reg_Date;
	
	@FindBy(xpath="(//li[text()='Today'])[3]")
	WebElement domain_Reg_Date_Today;
	
	@FindBy(xpath="(//li[text()='Yesterday'])[3]")
	WebElement domain_Reg_Date_Yesterday;
	
	@FindBy(xpath="(//li[text()='Last Seven Days'])[3]")
	WebElement domain_Reg_Date_LastSevenDays;
	
	@FindBy(xpath="(//li[text()='Last Thirty Days'])[3]")
	WebElement domain_Reg_Date_LastThirtyDays;
	
	@FindBy(xpath="(//li[text()='This Month'])[3]")
	WebElement domain_Reg_Date_ThisMonth;
	
	@FindBy(xpath="(//li[text()='Last Month'])[3]")
	WebElement domain_Reg_Date_LastMonth;
	
	@FindBy(xpath="(//li[text()='Custom Range'])[3]")
	WebElement domain_Reg_Date_Custom;
	
	//sortBy likes and Comments
	
	@FindBy(xpath = "//div[@id='hide_sort_by_filters']/button")
	WebElement sortByLikesComments;

	@FindBy(xpath = "//a[text()='Likes']")
	WebElement Likes;

	@FindBy(xpath = "//input[@id='lower_like']")
	WebElement minLikes;

	@FindBy(xpath = "//input[@id='higher_like']")
	WebElement maxLikes;

	@FindBy(xpath = "(//div[@class='card_col_1']//span[@data-bs-original-title='Likes']/span)[1]")
	WebElement like1;

	@FindBy(xpath = "(//div[@class='card_col_2']//span[@data-bs-original-title='Likes']/span)[1]")
	WebElement like2;

	@FindBy(xpath = "(//div[@class='card_col_3']//span[@data-bs-original-title='Likes']/span)[1]")
	WebElement like3;

	@FindBy(xpath = "(//div[@class='card_col_1']//span[@data-bs-original-title='Likes']/span)[2]")
	WebElement like4;

	@FindBy(xpath = "(//div[@class='card_col_2']//span[@data-bs-original-title='Likes']/span)[2]")
	WebElement like5;

	@FindBy(xpath = "(//div[@class='card_col_3']//span[@data-bs-original-title='Likes']/span)[2]")
	WebElement like6;

	@FindBy(xpath = "(//div[@class='card_col_1']//span[@data-bs-original-title='Likes']/span)[3]")
	WebElement like7;

	@FindBy(xpath = "(//div[@class='card_col_2']//span[@data-bs-original-title='Likes']/span)[3]")
	WebElement like8;

	@FindBy(xpath = "(//div[@class='card_col_3']//span[@data-bs-original-title='Likes']/span)[3]")
	WebElement like9;

	@FindBy(xpath = "(//div[@class='card_col_1']//span[@data-bs-original-title='Likes']/span)[4]")
	WebElement like10;

	@FindBy(xpath = "(//div[@class='card_col_2']//span[@data-bs-original-title='Likes']/span)[4]")
	WebElement like11;

	@FindBy(xpath = "(//div[@class='card_col_3']//span[@data-bs-original-title='Likes']/span)[4]")
	WebElement like12;

	@FindBy(xpath = "(//div[@class='card_col_1']//span[@data-bs-original-title='Likes']/span)[5]")
	WebElement like13;

	@FindBy(xpath = "(//div[@class='card_col_2']//span[@data-bs-original-title='Likes']/span)[5]")
	WebElement like14;

	@FindBy(xpath = "(//div[@class='card_col_3']//span[@data-bs-original-title='Likes']/span)[5]")
	WebElement like15;
	
	@FindBy(xpath = "//a[text()='Comments']")
	WebElement Comments;

	@FindBy(xpath = "//input[@id='lower_comment']")
	WebElement minComments;

	@FindBy(xpath = "//input[@id='higher_comment']")
	WebElement maxComments;

	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[1]")
	WebElement Comment1;

	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[1]")
	WebElement Comment2;

	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[1]")
	WebElement Comment3;

	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[2]")
	WebElement Comment4;

	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[2]")
	WebElement Comment5;

	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[2]")
	WebElement Comment6;

	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[3]")
	WebElement Comment7;

	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[3]")
	WebElement Comment8;

	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[3]")
	WebElement Comment9;

	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[4]")
	WebElement Comment10;

	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[4]")
	WebElement Comment11;

	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[4]")
	WebElement Comment12;

	@FindBy(xpath = "(//div[@class='card_col_1']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[5]")
	WebElement Comment13;

	@FindBy(xpath = "(//div[@class='card_col_2']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[5]")
	WebElement Comment14;

	@FindBy(xpath = "(//div[@class='card_col_3']//div[@class='likes_comments']//span[@data-bs-original-title='Comments'])[5]")
	WebElement Comment15;
	
	//filters
	
	@FindBy(xpath = "//button[text()='Filters']")
	WebElement filterDropDown;

	@FindBy(xpath = "//input[@placeholder='Call to Action']")
	WebElement callToAction_field;

	@FindBy(id = "callToAction")
	WebElement calltoActionDropdown;
	
	@FindBy(xpath = "//div[@class='col-lg-6 col-6 ad_btn2']/a[@class='btn btn-primary float-right']")
	WebElement callToActionChildWindow;
	
	//Language
	
	@FindBy(id = "language")
	WebElement language;
	
	@FindBy(id = "lang")
	WebElement filterslangugage;
	
	//Country
	@FindBy(id = "country")
	WebElement countryDropDown;
	
	@FindBy(xpath = "(//*[@class='col-lg-12 col-sm-12 col-12']//*[name()='svg']//*[local-name()='text']//*[local-name()='tspan'])")
	List<WebElement> countryDropDown1;
	
	@FindBy(xpath="(//*[name()='svg'])[2]//*[local-name()='g' and @aria-label='Legend']//*[local-name()='text']//*[local-name()='tspan']")
	WebElement countryChildWindow;
	
	//Lander Properties
	
//	@FindBy(xpath = "//button[normalize-space()='Lander Properties']")
	@FindBy(xpath = "//button[normalize-space()='Lander Properties']")
	WebElement landerProperties;

	@FindBy(xpath = "//input[@placeholder='Ecommerce Platform']")
	WebElement ecommerceplatform;

	@FindBy(id = "ecommerce")
	WebElement ecommerce;
	
	@FindBy(id="marketing")
	WebElement MarketingPlatform;
	
	@FindBy(id = "destination_url")
	WebElement link1;

	@FindBy(xpath  = "//a[@id='destination_url']//a[@target='_blank']")
	WebElement link2;

	@FindBy(xpath  = "//a[@id='redirectsurls']//a[@target='_blank']")
	WebElement link3;

	@FindBy(xpath = "(//a[@id='redirectsurls']//a[@target='_blank'])[1]")
	WebElement link15;

	@FindBy(xpath = "(//a[@id='redirectsurls']//a[@target='_blank'])[2]")
	WebElement link16;

	@FindBy(xpath = "(//a[@id='redirectsurls']//a[@target='_blank'])[3]")
	WebElement link17;

	@FindBy(xpath = "(//a[@id='redirectsurls']//a[@target='_blank'])[4]")
	WebElement link18;
	@FindBy(xpath = "(//a[@id='redirectsurls']//a[@target='_blank'])[5]")
	WebElement link19;

	@FindBy(xpath = "(//a[@id='redirectsurls']//a[@target='_blank'])[6]")
	WebElement link20;

	@FindBy(id = "redirectsurls")
	WebElement link4;

	@FindBy(id = "//a[@id='source_url']//a[@target='_blank']")
	WebElement link5;

	@FindBy(id = "source_url")
	WebElement link6;

	@FindBy(xpath = "//a[@id='redirectsurls']//a[@target='_blank']")
	WebElement link7;

	@FindBy(id = "redirectsurls")
	WebElement link8;



	@FindBy(id = "redirect_url")
	WebElement link9;
	@FindBy(xpath = "//a[@id='redirect_url']//a[@target='_blank']")
	WebElement link10;


	@FindBy(xpath = "//a[@id='final_url']//a[@target='_blank']")
	WebElement link11;

	@FindBy(id = "final_url")
	WebElement link12;



	@FindBy(id = "fb_post_link")
	WebElement link13;

	@FindBy(xpath = "//a[@id='fb_post_link']//a[@target='_blank']")
	WebElement link14;
	@FindBy(xpath = "(//div[@class='card_col_1']//img[@class='shopify_icon'])[1]")
	WebElement image1;
	
	@FindBy(xpath = "(//div[@class='card_col_2']//img[@class='shopify_icon'])[1]")
	WebElement image2;
	
	@FindBy(xpath = "(//div[@class='card_col_3']//img[@class='shopify_icon'])[1]")
	WebElement image3;
	
	@FindBy(xpath = "(//div[@class='card_col_1']//img[@class='shopify_icon'])[2]")
	WebElement image4;
	
	@FindBy(xpath = "(//div[@class='card_col_2']//img[@class='shopify_icon'])[2]")
	WebElement image5;
	
	@FindBy(xpath = "(//div[@class='card_col_3']//img[@class='shopify_icon'])[2]")
	WebElement image6;
	
	@FindBy(xpath = "(//div[@class='card_col_1']//img[@class='shopify_icon'])[3]")
	WebElement image7;
	
	@FindBy(xpath = "(//div[@class='card_col_2']//img[@class='shopify_icon'])[3]")
	WebElement image8;
	
	@FindBy(xpath = "(//div[@class='card_col_3']//img[@class='shopify_icon'])[3]")
	WebElement image9;
	
	@FindBy(xpath = "(//div[@class='card_col_1']//img[@class='shopify_icon'])[4]")
	WebElement image10;
	
	@FindBy(xpath = "(//div[@class='card_col_2']//img[@class='shopify_icon'])[4]")
	WebElement image11;
	
	@FindBy(xpath = "(//div[@class='card_col_3']//img[@class='shopify_icon'])[4]")
	WebElement image12;
	
	@FindBy(xpath = "(//div[@class='card_col_1']//img[@class='shopify_icon'])[5]")
	WebElement image13;
	
	@FindBy(xpath = "(//div[@class='card_col_2']//img[@class='shopify_icon'])[5]")
	WebElement image14;
	
	@FindBy(xpath = "(//div[@class='card_col_3']//img[@class='shopify_icon'])[5]")
	WebElement image15;

	
	
	//Afiltated


	@FindBy(css = "img[src='/assets/imgs/linkedin.png']")
	WebElement linked;



	@FindBy(xpath = "//a[normalize-space()='Newest']")
	WebElement SortBy_Newest;

	@FindBy(id = "search-ads")
	WebElement searchButton;


	@FindBy(css = ".clear_filters")
	WebElement Clear_Filters;

	@FindBy(css =".btn.btn-primary.btn-lg.dropdown-toggle.top_dropdown_btn.introjs-step-5")
	WebElement landerProperties1;



	@FindBy(id = "affiliates")
	WebElement AffiliateNetwork;


	



	
	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[1]")
	WebElement ShowAnalytics1;

	
	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[1]")
	WebElement ShowAnalytics2;

	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[1]")
	WebElement ShowAnalytics3;


	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[2]")
	WebElement ShowAnalytics4;

	
	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[2]")
	WebElement ShowAnalytics5;

	
	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[2]")
	WebElement ShowAnalytics6;

	
	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[3]")
	WebElement ShowAnalytics7;

	
	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[3]")
	WebElement ShowAnalytics8;


	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[3]")
	WebElement ShowAnalytics9;

	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[4]")
	WebElement ShowAnalytics10;

	
	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[4]")
	WebElement ShowAnalytics11;

	
	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[4]")
	WebElement ShowAnalytics12;


	@FindBy(xpath = "(//div[@class='card_col_1']//a[text()='Show Analytics'])[5]")
	WebElement ShowAnalytics13;


	@FindBy(xpath = "(//div[@class='card_col_2']//a[text()='Show Analytics'])[5]")
	WebElement ShowAnalytics14;

	
	@FindBy(xpath = "(//div[@class='card_col_3']//a[text()='Show Analytics'])[5]")
	WebElement ShowAnalytics15;
	@FindBy(id = "destination_url")
	WebElement destinationUrl;
	@FindBy(id = "redirectsurls")
	WebElement redirectsurls;
	
	// sortBy Dropdown for Newest, Lastseen, Running Longest, Domain Registration  Date

	public void verify_Pinterest_Dasboard_SortBy() throws InterruptedException 
	{

		Reporter.log("<B><font color = 'Burgundy'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'Burgundy'> Step2 -</font> I am on the page :" + Page_titel);

		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		helper.waitForPageToLoad();
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'Burgundy'> Step3 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(pinterest);
		helper.highLightElement(driver, pinterest);
		pinterest.click();
		helper.waitForPageToLoad();
		Assert.assertTrue(pinterest.isDisplayed(), "Clicked on pinterest ");
		Reporter.log("<B><font color = 'Burgundy'> Step4 -</font> Clicked On pinterest Icon");
		helper.waitForPageToLoad();

		String Page_titel_1 = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'purple'> Step5 -</font> I am on the page :" + Page_titel_1);
		helper.waitForPageToLoad();
		try {
	    	helper.waitFor(NewFeatureClosedButton);
	    	helper.Scrollintoview(NewFeatureClosedButton);
	    	helper.highLightElement(driver, NewFeatureClosedButton);
	    	NewFeatureClosedButton.click();
		} catch (Exception e) {
			// TODO: handle exception
		}

		// newest

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Newest field -</font> ");

		helper.waitForPageToLoad();
		helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");

		helper.waitForPageToLoad();
		helper.waitFor(sortBy_DropDown);
		helper.highLightElement(driver, sortBy_DropDown);
		helper.jsCLick(sortBy_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On sortBy.");
		helper.waitForPageToLoad();

		helper.waitFor(newest_Button);
		helper.highLightElement(driver, newest_Button);
		helper.jsCLick(newest_Button);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Newest button.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Search Bar.");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_newest = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 5 -</font> Total_Ads_Count_newest= " + Total_Ads_Count_newest);
		helper.waitForPageToLoad();

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad -</font> ");
		
		try {
		helper.Scrollintoview(current_date1);
		helper.waitFor(current_date1);
		helper.highLightElement(driver, current_date1);
		String imageDate=current_date1.getText();
		System.out.println("currentDatenewest : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button1);
		helper.waitFor(showAnalytics_Button1);
		helper.highLightElement(driver, showAnalytics_Button1);
		String linkText = showAnalytics_Button1.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	   
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2st Ad -</font> ");
		
		try {
		helper.Scrollintoview(current_date2);
		helper.waitFor(current_date2);
		helper.highLightElement(driver, current_date2);
		String imageDate=current_date2.getText();
		System.out.println("currentDatenewest : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button2);
		helper.waitFor(showAnalytics_Button2);
		helper.highLightElement(driver, showAnalytics_Button2);
		String linkText = showAnalytics_Button2.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3th Ad -</font> ");
	
		try {
		helper.Scrollintoview(current_date3);
		helper.waitFor(current_date3);
		helper.highLightElement(driver, current_date3);
		String imageDate=current_date3.getText();
		System.out.println("currentDatenewest : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button3);
		helper.waitFor(showAnalytics_Button3);
		helper.highLightElement(driver, showAnalytics_Button3);
		String linkText = showAnalytics_Button3.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad -</font> ");
		
		try {
		helper.Scrollintoview(current_date4);
		helper.waitFor(current_date4);
		helper.highLightElement(driver, current_date4);
		String imageDate=current_date4.getText();
		System.out.println("currentDatenewest : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button4);
		helper.waitFor(showAnalytics_Button4);
		helper.highLightElement(driver, showAnalytics_Button4);
		String linkText = showAnalytics_Button4.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad -</font> ");
		
		try {
		helper.Scrollintoview(current_date5);
		helper.waitFor(current_date5);
		helper.highLightElement(driver, current_date5);
		String imageDate=current_date5.getText();
		System.out.println("currentDatenewest : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button5);
		helper.waitFor(showAnalytics_Button5);
		helper.highLightElement(driver, showAnalytics_Button5);
		String linkText = showAnalytics_Button5.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad -</font> ");
		
		try {
		helper.Scrollintoview(current_date6);
		helper.waitFor(current_date6);
		helper.highLightElement(driver, current_date6);
		String imageDate=current_date6.getText();
		System.out.println("currentDatenewest : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button6);
		helper.waitFor(showAnalytics_Button6);
		helper.highLightElement(driver, showAnalytics_Button6);
		String linkText = showAnalytics_Button6.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad -</font> ");
		
		try {
		helper.Scrollintoview(current_date7);
		helper.waitFor(current_date7);
		helper.highLightElement(driver, current_date7);
		String imageDate=current_date7.getText();
		System.out.println("currentDatenewest : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button7);
		helper.waitFor(showAnalytics_Button7);
		helper.highLightElement(driver, showAnalytics_Button7);
		String linkText = showAnalytics_Button7.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad -</font> ");
		
		try {
		helper.Scrollintoview(current_date8);
		helper.waitFor(current_date8);
		helper.highLightElement(driver, current_date8);
		String imageDate=current_date8.getText();
		System.out.println("currentDatenewest : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button8);
		helper.waitFor(showAnalytics_Button8);
		helper.highLightElement(driver, showAnalytics_Button8);
		String linkText = showAnalytics_Button8.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad -</font> ");
		
		try {
		helper.Scrollintoview(current_date9);
		helper.waitFor(current_date9);
		helper.highLightElement(driver, current_date9);
		String imageDate=current_date9.getText();
		System.out.println("currentDatenewest : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button9);
		helper.waitFor(showAnalytics_Button9);
		helper.highLightElement(driver, showAnalytics_Button9);
		String linkText = showAnalytics_Button9.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad -</font> ");
		
		try {
		helper.Scrollintoview(current_date10);
		helper.waitFor(current_date10);
		helper.highLightElement(driver, current_date10);
		String imageDate=current_date10.getText();
		System.out.println("currentDatenewest : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button10);
		helper.waitFor(showAnalytics_Button10);
		helper.highLightElement(driver, showAnalytics_Button10);
		String linkText = showAnalytics_Button10.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad -</font> ");
		
		try {
		helper.Scrollintoview(current_date11);
		helper.waitFor(current_date11);
		helper.highLightElement(driver, current_date11);
		String imageDate=current_date11.getText();
		System.out.println("currentDatenewest : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button11);
		helper.waitFor(showAnalytics_Button11);
		helper.highLightElement(driver, showAnalytics_Button11);
		String linkText = showAnalytics_Button11.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad -</font> ");
		
		try {
		helper.Scrollintoview(current_date12);
		helper.waitFor(current_date12);
		helper.highLightElement(driver, current_date12);
		String imageDate=current_date12.getText();
		System.out.println("currentDatenewest : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button12);
		helper.waitFor(showAnalytics_Button12);
		helper.highLightElement(driver, showAnalytics_Button12);
		String linkText = showAnalytics_Button12.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
	
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad -</font> ");
		
		try {
		helper.Scrollintoview(current_date13);
		helper.waitFor(current_date13);
		helper.highLightElement(driver, current_date13);
		String imageDate=current_date13.getText();
		System.out.println("imageDate : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button13);
		helper.waitFor(showAnalytics_Button13);
		helper.highLightElement(driver, showAnalytics_Button13);
		String linkText = showAnalytics_Button13.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad -</font> ");
		
		try {
		helper.Scrollintoview(current_date14);
		helper.waitFor(current_date14);
		helper.highLightElement(driver, current_date14);
		String imageDate=current_date14.getText();
		System.out.println("imageDate : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button14);
		helper.waitFor(showAnalytics_Button14);
		helper.highLightElement(driver, showAnalytics_Button14);
		String linkText = showAnalytics_Button14.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	   
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad -</font> ");
		
		try {
		helper.Scrollintoview(current_date15);
		helper.waitFor(current_date15);
		helper.highLightElement(driver, current_date15);
		String imageDate=current_date15.getText();
		System.out.println("currentDatenewest : " + imageDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDatenewest Image in Pinterest DashBoard= " + imageDate);
		
		helper.Scrollintoview(showAnalytics_Button15);
		helper.waitFor(showAnalytics_Button15);
		helper.highLightElement(driver, showAnalytics_Button15);
		String linkText = showAnalytics_Button15.getAttribute("href");
		System.out.println("linkText : " + linkText);
		helper.getAdID(linkText);
		helper.jsCLick(showAnalytics_Button15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");
		
		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	   
	    helper.waitForPageToLoad();
	    helper.waitFor(Last_Seen_childWindow);
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    System.out.println("Last_Seen_childWindow : " + lastSeenDate);
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	   
		Assert.assertEquals(imageDate, lastSeenDate);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate+" "+" are same == PASS");

		}
		catch(Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		// last seen

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> LastSeen field -</font>");

		helper.Scrollintoview(clearSearchField);
		helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");
		helper.waitForPageToLoad();

		helper.waitFor(sortBy_DropDown);
		helper.highLightElement(driver, sortBy_DropDown);
		helper.jsCLick(sortBy_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On sortBy.");
		helper.waitForPageToLoad();

		helper.waitFor(lastSeen_Button);
		helper.highLightElement(driver, lastSeen_Button);
		helper.jsCLick(lastSeen_Button);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On lastSeen_Button.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Search Bar.");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_lastseen = toatal_Count_Ads.getText();
		Reporter.log(
				"<B><font color = 'orange'> Step 5 -</font> Total_Ads_Count_lastseen= " + Total_Ads_Count_lastseen);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad -</font> ");

		try {
			helper.waitForPageToLoad();
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.waitForPageToLoad();
			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate1 = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");


		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.waitForPageToLoad();
			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate1 = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");


		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.waitForPageToLoad();
			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate1 = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate1 = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");


		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");


		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");


		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");


		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");


		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");


		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");


		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");


		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");


		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");


		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");


		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			System.out.println("currentDateLatest : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CurrentDateLatest Image in Instagram DashBoard = "
					+ imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate1 = Last_Seen_childWindow.getText();
			System.out.println("Last_Seen_childWindow : " + lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on lastSeenDate = " + lastSeenDate1);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate1+" "+" are same == PASS");


		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		// running longest

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Running longest field -</font> ");

		helper.Scrollintoview(clearSearchField);
		helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");
		helper.waitForPageToLoad();

		helper.waitFor(sortBy_DropDown);
		helper.highLightElement(driver, sortBy_DropDown);
		helper.jsCLick(sortBy_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On sortBy.");
		helper.waitForPageToLoad();

		helper.waitFor(runningLongest_Button);
		helper.highLightElement(driver, runningLongest_Button);
		helper.jsCLick(runningLongest_Button);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On runningLongest_Button.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Search Bar.");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_runningLongest = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 5 -</font> Total_Ads_Count_runningLongest= "
				+ Total_Ads_Count_runningLongest);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --1st Ad-- -</font> ");

		try {
			helper.waitForPageToLoad();
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String currentDate_runningLongest = current_date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font>  RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Running longest field -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --2nd Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String currentDate_runningLongest = current_date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Running longest field -</font> ");
		}
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --3rd Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String currentDate_runningLongest = current_date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'red'> Running longest field -</font> ");
		}
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --4th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String currentDate_runningLongest = current_date4.getAttribute("href");
			Reporter.log("<B><font color = 'blue'> ==> -</font> RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText = showAnalytics_Button4.getText();
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Running longest field -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --5th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String currentDate_runningLongest = current_date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Running longest field -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --6th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String currentDate_runningLongest = current_date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Running longest field -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --7th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String currentDate_runningLongest = current_date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.waitForPageToLoad();
			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Running longest field -</font> ");
		}
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --8th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String currentDate_runningLongest = current_date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'red'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Running longest field -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --9th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String currentDate_runningLongest = current_date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Running longest field -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --10th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String currentDate_runningLongest = current_date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'red'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Running longest field -</font> ");
		}
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --11th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String currentDate_runningLongest = current_date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Running longest field -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --12th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String currentDate_runningLongest = current_date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Running longest field -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --13th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String currentDate_runningLongest = current_date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Running longest field -</font> ");
		}
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --14th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String currentDate_runningLongest = current_date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Running longest field -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --15th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String currentDate_runningLongest = current_date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> RunningLongest Image Date in Instagram DashBoard= "
					+ currentDate_runningLongest);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(total_Running_Days);
			helper.waitFor(total_Running_Days);
			helper.highLightElement(driver, total_Running_Days);
			String total_number_Running_Days = total_Running_Days.getText();
			System.out.println("total_number_Running_Days : " + total_number_Running_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on total_number_Running_Days = "
					+ total_number_Running_Days);

			driver.close();

			driver.switchTo().window(parent2);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Running longest field -</font> ");
		}

		// domain register date

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Domain Register date field -</font> ");

		helper.waitForPageToLoad();
		helper.Scrollintoview(clearSearchField);
		helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");
		helper.waitForPageToLoad();

		helper.waitFor(sortBy_DropDown);
		helper.highLightElement(driver, sortBy_DropDown);
		helper.jsCLick(sortBy_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On sortBy.");
		helper.waitForPageToLoad();

		helper.waitFor(domain_Reg_Date_Button);
		helper.highLightElement(driver, domain_Reg_Date_Button);
		helper.jsCLick(domain_Reg_Date_Button);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On domain_Reg_Date_Button.");
		helper.waitForPageToLoad();

		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Search Bar.");
		helper.waitForPageToLoad();

		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_DomainRegDate = toatal_Count_Ads.getText();
		Reporter.log(
				"<B><font color = 'orange'> Step 5 -</font> Total_Ads_Count_newest= " + Total_Ads_Count_DomainRegDate);
		helper.waitForPageToLoad();

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --1st Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String currentDate_DomainRegDate = current_date1.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, Domain_Rgsd_Date);
			String actual_Domain_reg_date1 = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date1);

			driver.close();

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --2nd Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String currentDate_DomainRegDate = current_date2.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, Domain_Rgsd_Date);
			String actual_Domain_reg_date2 = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date2);

			driver.close();

			driver.switchTo().window(parent3);

		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --3rd Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String currentDate_DomainRegDate = current_date3.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, Domain_Rgsd_Date);
			String actual_Domain_reg_date3 = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date3);

			driver.close();

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --4th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String currentDate_DomainRegDate = current_date4.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, Domain_Rgsd_Date);
			String actual_Domain_reg_date = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date);

			driver.close();

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --5th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String currentDate_DomainRegDate = current_date5.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, Domain_Rgsd_Date);
			String actual_Domain_reg_date = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date);

			driver.close();

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --6th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String currentDate_DomainRegDate = current_date6.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, Domain_Rgsd_Date);
			String actual_Domain_reg_date = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date);

			driver.close();

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --7th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String currentDate_DomainRegDate = current_date7.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, Domain_Rgsd_Date);
			String actual_Domain_reg_date = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date);

			driver.close();

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --8th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String currentDate_DomainRegDate = current_date8.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, Domain_Rgsd_Date);
			String actual_Domain_reg_date = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date);

			driver.close();

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --9th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String currentDate_DomainRegDate = current_date9.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, Domain_Rgsd_Date);
			String actual_Domain_reg_date = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date);

			driver.close();

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --10th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String currentDate_DomainRegDate = current_date10.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, Domain_Rgsd_Date);
			String actual_Domain_reg_date = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date);

			driver.close();

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --11th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String currentDate_DomainRegDate = current_date11.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, Domain_Rgsd_Date);
			String actual_Domain_reg_date = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date);

			driver.close();

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --12th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String currentDate_DomainRegDate = current_date12.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, Domain_Rgsd_Date);
			String actual_Domain_reg_date = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date);

			driver.close();

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --13th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String currentDate_DomainRegDate = current_date13.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, Domain_Rgsd_Date);
			String actual_Domain_reg_date = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date);

			driver.close();

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --14th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String currentDate_DomainRegDate = current_date14.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			String actual_Domain_reg_date = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date);

			driver.close();

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> --15th Ad-- -</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String currentDate_DomainRegDate = current_date15.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> CurrentDate_DomainRegDate Image in Instagram DashBoard= "
							+ currentDate_DomainRegDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Domain_Rgsd_Date);
			helper.waitFor(Domain_Rgsd_Date);
			helper.highLightElement(driver, Domain_Rgsd_Date);
			String actual_Domain_reg_date = Domain_Rgsd_Date.getText();
			System.out.println("actual_Domain_reg_date : " + actual_Domain_reg_date);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on Domain Registration Date = "
					+ actual_Domain_reg_date);

			driver.close();

			driver.switchTo().window(parent3);
		} catch (Exception e) {
			Reporter.log("<B><font color = 'green'> Domain Registration Date -</font> ");
		}
	}

// AdseenBetween Dropdown Instagram

	public void verify_Pinterest_dashboard_addSeenBetween() throws InterruptedException {

		Reporter.log("<B><font color = 'orange'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'orange'> Step2 -</font> I am on the page :" + Page_titel);

		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		helper.waitForPageToLoad();
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Power Ad Spy Logo is Displayed");

		helper.waitForPageToLoad();
		helper.waitFor(pinterest);
		helper.highLightElement(driver, pinterest);
		pinterest.click();
		helper.waitForPageToLoad();
		Assert.assertTrue(pinterest.isDisplayed(), "Clicked on pinterest ");
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On pinterest Icon");
		helper.waitForPageToLoad();

		// ALL
		
		
		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Ads Seen Between : All -</font> ");

		helper.waitForPageToLoad();
		helper.Scrollintoview(clearSearchField);
		helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");

		helper.waitForPageToLoad();
		helper.Scrollintoview(ads_Seen_Between_Button);
		helper.waitFor(ads_Seen_Between_Button);
		helper.highLightElement(driver, ads_Seen_Between_Button);
		try {
		ads_Seen_Between_Button.click();
		}catch (Exception e) {
			helper.jsCLick(ads_Seen_Between_Button);
		}
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Ads Seen Between.");

		helper.waitForPageToLoad();
		helper.waitFor(all_Button);
		helper.highLightElement(driver, all_Button);
		helper.jsCLick(all_Button);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Ads Seen Between all_Button.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Search Bar.");
		helper.waitForPageToLoad();

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_All = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 5 -</font> Total_Ads_Count_All= " + Total_Ads_Count_All);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st -</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			Thread.sleep(3000);
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");
			
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd -</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");
			
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd -</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");
			
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th -</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");
			
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th -</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");
			
			
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th -</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");
			
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th -</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");
			
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th -</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th -</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th -</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th -</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th -</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th -</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");
			
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th -</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");
			
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th -</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_All Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_All = Last_Seen_childWindow.getText();
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= " + lastSeenDate_All);

			driver.close();

			driver.switchTo().window(parent);

			Assert.assertEquals(imageDate, lastSeenDate_All);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_All+" "+" are same == PASS");
			
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'orange'> Step 6 -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		// Today

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Ads Seen Between : Today -</font> ");

		helper.waitForPageToLoad();
		helper.waitFor(ads_Seen_Between_Button);
		helper.highLightElement(driver, ads_Seen_Between_Button);
		try {
		ads_Seen_Between_Button.click();
		}catch (Exception e) {
			helper.jsCLick(ads_Seen_Between_Button);
		}
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On Ads Seen Between.");

		helper.waitFor(today_Button);
		helper.highLightElement(driver, today_Button);
		helper.jsCLick(today_Button);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On today_Button in Ads Seen Between.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Search Bar.");
		helper.waitForPageToLoad();

		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_Today = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Total_Ads_Count_Today= " + Total_Ads_Count_Today);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad -</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");
			

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");
			
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			System.out.println("current_Date_Today : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On current_Date_today Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S2 = driver.getWindowHandles();
			Iterator<String> it1 = S2.iterator();
			String parent1 = it1.next();
			String child1 = it1.next();

			driver.switchTo().window(child1);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_today = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_today);

			driver.close();

			driver.switchTo().window(parent1);

			Assert.assertEquals(imageDate, lastSeenDate_today);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_today+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		// yesterday

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Ads Seen Between : Yesterday -</font> ");

		helper.waitForPageToLoad();
		helper.waitFor(ads_Seen_Between_Button);
		helper.highLightElement(driver, ads_Seen_Between_Button);
		helper.jsCLick(ads_Seen_Between_Button);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On Ads Seen Between.");

		helper.waitForPageToLoad();
		helper.waitFor(yesterday_Button);
		helper.highLightElement(driver, yesterday_Button);
		helper.jsCLick(yesterday_Button);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On yesterday_Button in Ads Seen Between.");

		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Search Bar.");
		helper.waitForPageToLoad();

		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_Yesterday = toatal_Count_Ads.getText();
		Reporter.log(
				"<B><font color = 'orange'> Step 4 -</font> Total_Ads_Count_Yesterday= " + Total_Ads_Count_Yesterday);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad -</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText = showAnalytics_Button1.getAttribute("href");
			System.out.println("linkText : " + linkText);

			String idString = null;

			String[] splitStringid = linkText.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 1st Ad = " + actualDate);
				break;
			}

			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText = showAnalytics_Button2.getAttribute("href");
			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);

			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 2nd Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);

			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 3rd Ad = " + actualDate);
				break;
			}

			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);

			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 4th Ad = " + actualDate);
				break;
			}

			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);

			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 5th Ad = " + actualDate);
				break;
			}

			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);

			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 6th Ad = " + actualDate);
				break;
			}

			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);

			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 7th Ad = " + actualDate);
				break;
			}

			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);

			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 8th Ad = " + actualDate);
				break;
			}

			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);

			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 9th Ad = " + actualDate);
				break;
			}

			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);

			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 10th Ad = " + actualDate);
				break;
			}

			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);

			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 11th Ad = " + actualDate);
				break;
			}

			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");
			
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);

			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 12th Ad = " + actualDate);
				break;
			}

			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);

			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 13th Ad = " + actualDate);
				break;
			}

			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);

			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 14th Ad = " + actualDate);
				break;
			}

			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			System.out.println("current_Date_Yesterday : " + imageDate);
			Reporter.log(
					"<B><font color = 'blue'> ==> -</font> Clicked On current_Date_yesterday Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);

			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 15th Ad = " + actualDate);
				break;
			}

			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S3 = driver.getWindowHandles();
			Iterator<String> it2 = S3.iterator();
			String parent2 = it2.next();
			String child2 = it2.next();

			driver.switchTo().window(child2);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_yesterday = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_yesterday);

			driver.close();

			driver.switchTo().window(parent2);

			Assert.assertEquals(imageDate, lastSeenDate_yesterday);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_yesterday+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		// Last seen Seven Days

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Ads Seen Between : Last_Seven_Days_Button -</font> ");

		helper.waitForPageToLoad();
		helper.Scrollintoview(clearSearchField);
		helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");

		helper.waitForPageToLoad();
		helper.waitFor(ads_Seen_Between_Button);
		helper.highLightElement(driver, ads_Seen_Between_Button);
		helper.jsCLick(ads_Seen_Between_Button);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Ads Seen Between.");

		helper.waitForPageToLoad();
		helper.waitFor(Last_Seven_Days_Button);
		helper.highLightElement(driver, Last_Seven_Days_Button);
		helper.jsCLick(Last_Seven_Days_Button);
		Reporter.log(
				"<B><font color = 'orange'> Step 3 -</font> Clicked On Last_Seven_Days_Button in Ads Seen Between.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Search Bar.");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_LastSevenDays = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 5 -</font> Total_Ads_Count_LastSevenDays= "
				+ Total_Ads_Count_LastSevenDays);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad -</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);

			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 1st Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);

			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 2nd Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			helper.Scrollintoview(Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);

			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 3rd Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);

			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 4th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			helper.Scrollintoview(Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad -</font> ");
		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);

			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 5th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);

			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 6th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);

			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 7th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);

			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 8th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);

			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 9th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);

			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 10th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);

			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 11th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);

			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 12th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);

			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 13th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);

			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 14th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			System.out.println("current_Date_LastSevenDays : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Seven_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);

			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 15th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Seven_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Seven_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Seven_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Seven_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		// Last Seen Thirty Days

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Ads Seen Between : _Last Thirty Days -</font> ");

		helper.waitForPageToLoad();
		helper.waitFor(ads_Seen_Between_Button);
		helper.highLightElement(driver, ads_Seen_Between_Button);
		helper.jsCLick(ads_Seen_Between_Button);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On Ads Seen Between.");

		helper.waitForPageToLoad();
		helper.waitFor(Last_Thirty_Days_Button);
		helper.highLightElement(driver, Last_Thirty_Days_Button);
		helper.jsCLick(Last_Thirty_Days_Button);
		Reporter.log(
				"<B><font color = 'orange'> Step 2 -</font> Clicked On Last_Thirty_Days_Button in Ads Seen Between.");

		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Search Bar.");
		helper.waitForPageToLoad();

		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_LastThirtDays = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Total_Ads_Count_LastThirtDays= "
				+ Total_Ads_Count_LastThirtDays);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad -</font> ");

		try {
			helper.waitForPageToLoad();
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");

			
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);

			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 7th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);

			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 8th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);

			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 9th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);

			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 10th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);

			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 11th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12 Ad -</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);

			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 12th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);

			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 13th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);

			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 14th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			System.out.println("current_Date_LastThirtyDays  : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last_Thirty_Days Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);

			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");

			String idString = null;

			String[] splitStringid = linkText1.split("/");
			for (int i = 0; i < splitStringid.length; i++) {
				String actualDate = splitStringid[splitStringid.length - 1];
				System.out.println("actualDate : " + actualDate);
				Reporter.log("<B><font color = 'blue'> ==> -</font> ID of the 15th Ad = " + actualDate);
				break;
			}
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S4 = driver.getWindowHandles();
			Iterator<String> it3 = S4.iterator();
			String parent3 = it3.next();
			String child3 = it3.next();

			driver.switchTo().window(child3);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Last_Thirty_Days = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Last_Thirty_Days);

			driver.close();

			driver.switchTo().window(parent3);

			Assert.assertEquals(imageDate, lastSeenDate_Last_Thirty_Days);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Last_Thirty_Days+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		// This Month

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Ads Seen Between :This_Month_Button -</font> ");

		helper.waitForPageToLoad();
		helper.waitFor(ads_Seen_Between_Button);
		helper.highLightElement(driver, ads_Seen_Between_Button);
		helper.jsCLick(ads_Seen_Between_Button);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On Ads Seen Between.");

		helper.waitForPageToLoad();
		helper.waitFor(This_Month_Button);
		helper.highLightElement(driver, This_Month_Button);
		helper.jsCLick(This_Month_Button);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On This_Month_Button in Ads Seen Between.");

		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Search Bar.");
		helper.waitForPageToLoad();

		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_ThisMonth = toatal_Count_Ads.getText();
		Reporter.log(
				"<B><font color = 'orange'> Step 4 -</font> Total_Ads_Count_ThisMonth= " + Total_Ads_Count_ThisMonth);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad -</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			System.out.println("current_Date_ThisMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On This Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S5 = driver.getWindowHandles();
			Iterator<String> it4 = S5.iterator();
			String parent4 = it4.next();
			String child4 = it4.next();

			driver.switchTo().window(child4);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_This_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_This_Month);

			driver.close();

			driver.switchTo().window(parent4);

			Assert.assertEquals(imageDate, lastSeenDate_This_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_This_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

//    Last Month

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Ads Seen Between :Last Month -</font> ");

		helper.waitForPageToLoad();
		helper.waitFor(ads_Seen_Between_Button);
		helper.highLightElement(driver, ads_Seen_Between_Button);
		helper.jsCLick(ads_Seen_Between_Button);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On Ads Seen Between.");

		helper.waitForPageToLoad();
		helper.waitFor(Last_Month_Button);
		helper.highLightElement(driver, Last_Month_Button);
		helper.jsCLick(Last_Month_Button);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Last_Month_Button in Ads Seen Between.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Search Bar.");
		helper.waitForPageToLoad();

		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_LastMonth = toatal_Count_Ads.getText();
		Reporter.log(
				"<B><font color = 'orange'> Step 4 -</font> Total_Ads_Count_LastMonth= " + Total_Ads_Count_LastMonth);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad -</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad -</font> ");
		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			System.out.println("current_Date_LastMonth : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Last Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S6 = driver.getWindowHandles();
			Iterator<String> it5 = S6.iterator();
			String parent5 = it5.next();
			String child5 = it5.next();

			driver.switchTo().window(child5);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Last_Month = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Last_Month);

			driver.close();

			driver.switchTo().window(parent5);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Last_Month);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Last_Month+" "+" are same == PASS");


		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

/*		// Custom
		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Ads Seen Between :Custom_Range_Button -</font> ");

		helper.waitForPageToLoad();
		helper.waitFor(ads_Seen_Between_Button);
		helper.highLightElement(driver, ads_Seen_Between_Button);
		helper.jsCLick(ads_Seen_Between_Button);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On Ads Seen Between.");

		helper.waitFor(Custom_Range_Button);
		helper.highLightElement(driver, Custom_Range_Button);
		try {
			helper.jsCLick(Custom_Range_Button);
		} catch (Exception e) {
			Custom_Range_Button.click();
		}
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Custom_Range_Button in Ads Seen Between.");
		helper.waitForPageToLoad();

		helper.waitFor(previousMonthButton);
		helper.highLightElement(driver, previousMonthButton);
		try {
			helper.jsCLick(previousMonthButton);
		} catch (Exception e) {
			previousMonthButton.click();
		}
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Previous Month Button In Calender.");

		helper.waitFor(previousMonthButton);
		helper.highLightElement(driver, previousMonthButton);
		try {
			helper.jsCLick(previousMonthButton);
		} catch (Exception e) {
			previousMonthButton.click();
		}
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Previous Month Button In Calender.");

		helper.waitFor(nextMonthButton);
		helper.highLightElement(driver, nextMonthButton);
		try {
			helper.jsCLick(nextMonthButton);
		} catch (Exception e) {
			nextMonthButton.click();
		}
		Reporter.log("<B><font color = 'orange'> Step 5 -</font> Clicked On Next Month Button In Calender.");

		helper.waitFor(custom_startDate);
		helper.highLightElement(driver, custom_startDate);
		try {
			helper.jsCLick(custom_startDate);
		} catch (Exception e) {
			custom_startDate.click();
		}
		Reporter.log("<B><font color = 'orange'> Step 6 -</font> Clicked On custom_startDate in Ads Seen Between.");
		helper.waitForPageToLoad();

		helper.waitFor(custom_endDate);
		helper.highLightElement(driver, custom_endDate);
		try {
			helper.jsCLick(custom_endDate);
		} catch (Exception e) {
			custom_endDate.click();
		}
		Reporter.log("<B><font color = 'orange'> Step 7 -</font> Clicked On custom_endDate in Ads Seen Between.");
		
		helper.waitForPageToLoad();
		helper.Scrollintoview(custom_Apply);
		helper.waitFor(custom_Apply);
		helper.highLightElement(driver, custom_Apply);
		try{
			custom_Apply.click();
		}catch (Exception e) {
			helper.jsCLick(custom_Apply);
		}		
		Reporter.log("<B><font color = 'orange'> Step 8 -</font> Clicked On custom apply.");

		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 8 -</font> Clicked On Search Bar.");
		helper.waitForPageToLoad();

		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_Custom = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 9 -</font> Total_Ads_Count_Custom= " + Total_Ads_Count_Custom);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad -</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad -</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11 Ad -</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad -</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			System.out.println("current_Date_Custom : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate_Date_Custom = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Last_Seen_childWindow AdDetails Page= "
					+ lastSeenDate_Date_Custom);

			driver.close();

			driver.switchTo().window(parent6);

			Assert.assertEquals(imageDate, lastSeenDate_Date_Custom);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Image Date = "+" "+imageDate+"    ::    " + "Last Seeen Date = "+lastSeenDate_Date_Custom+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}*/

	}
	
		// Postdate Between
	
	public void verify_Pinterest_Dasboard_PostDateBetween() throws InterruptedException {

		Reporter.log("<B><font color = 'purple'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'purple'> Step2 -</font> I am on the page :" + Page_titel);

		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		helper.waitForPageToLoad();
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'purple'> Step3 -</font> Power Ad Spy Logo is Displayed");

		helper.waitForPageToLoad();
		helper.waitFor(pinterest);
		helper.highLightElement(driver, pinterest);
		pinterest.click();
		helper.waitForPageToLoad();
		Assert.assertTrue(pinterest.isDisplayed(), "Clicked on pinterest ");
		Reporter.log("<B><font color = 'purple'> Step4 -</font> Clicked On pinterest Icon");
		helper.waitForPageToLoad();

		String Page_titel_1 = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'purple'> Step5 -</font> I am on the page :" + Page_titel_1);

		// ALL

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Post Date Between : All -</font> ");
		
		helper.waitForPageToLoad();
		helper.Scrollintoview(clearSearchField);
		helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");

		helper.waitForPageToLoad();
		helper.waitFor(post_Date_Between_DropDown);
		helper.highLightElement(driver, post_Date_Between_DropDown);
		helper.jsCLick(post_Date_Between_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On Post Date Between DropDown.");

		helper.waitFor(post_Date_Between_All);
		helper.highLightElement(driver, post_Date_Between_All);
		helper.jsCLick(post_Date_Between_All);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Post Date Between All.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Search Bar.");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_All = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Total_Ads_Count_All= " + Total_Ads_Count_All);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st -</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			;
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd -</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd -</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th -</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th -</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th -</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th -</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th -</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th -</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th -</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th -</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th -</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th -</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th -</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th -</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date : " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		// Today
		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Post Date Between : Today -</font> ");

		helper.waitForPageToLoad();
		helper.waitFor(post_Date_Between_DropDown);
		helper.highLightElement(driver, post_Date_Between_DropDown);
		helper.jsCLick(post_Date_Between_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On Post Date Between DropDown.");

		helper.waitFor(post_Date_Between_Today);
		helper.highLightElement(driver, post_Date_Between_Today);
		helper.jsCLick(post_Date_Between_Today);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Post Date Between Today.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Search Bar.");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_Today = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Total_Ads_Count_Today= " + Total_Ads_Count_Today);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st -</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			helper.jsCLick(current_date1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd -</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			helper.jsCLick(current_date2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd -</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			helper.jsCLick(current_date3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th -</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			helper.jsCLick(current_date4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th -</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			helper.jsCLick(current_date5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th -</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			helper.jsCLick(current_date6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th -</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			helper.jsCLick(current_date7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th -</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			helper.jsCLick(current_date8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th -</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			helper.jsCLick(current_date9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th -</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			helper.jsCLick(current_date10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th -</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			helper.jsCLick(current_date11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th -</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			helper.jsCLick(current_date12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th -</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			helper.jsCLick(current_date13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th -</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			helper.jsCLick(current_date14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th -</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			helper.jsCLick(current_date15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getLastseenDate(lastSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		// Yesterday
		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Post Date Between : Yesterday -</font> ");

		helper.waitForPageToLoad();
		helper.waitFor(post_Date_Between_DropDown);
		helper.highLightElement(driver, post_Date_Between_DropDown);
		helper.jsCLick(post_Date_Between_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On Post Date Between DropDown.");

		helper.waitFor(post_Date_Between_Yesterday);
		helper.highLightElement(driver, post_Date_Between_Yesterday);
		helper.jsCLick(post_Date_Between_Yesterday);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Post Date Between Yesterday.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Search Bar.");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_Yesterday = toatal_Count_Ads.getText();
		Reporter.log(
				"<B><font color = 'orange'> Step 4 -</font> Total_Ads_Count_Yesterday= " + Total_Ads_Count_Yesterday);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad-</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			helper.jsCLick(current_date1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad-</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			helper.jsCLick(current_date2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad-</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			helper.jsCLick(current_date3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			helper.jsCLick(current_date4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			helper.jsCLick(current_date5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			helper.jsCLick(current_date6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			helper.jsCLick(current_date7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			helper.jsCLick(current_date8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			helper.jsCLick(current_date9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			helper.jsCLick(current_date10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			helper.jsCLick(current_date11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			helper.jsCLick(current_date12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			helper.jsCLick(current_date13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			helper.jsCLick(current_date14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			helper.jsCLick(current_date15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date: " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		// Last Seven Days

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Post Date Between : Last Seven Days -</font> ");

		helper.waitForPageToLoad();
		helper.waitFor(post_Date_Between_DropDown);
		helper.highLightElement(driver, post_Date_Between_DropDown);
		helper.jsCLick(post_Date_Between_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On Post Date Between DropDown.");

		helper.Scrollintoview(post_Date_Between_LastSevenDays);
		helper.waitFor(post_Date_Between_LastSevenDays);
		helper.highLightElement(driver, post_Date_Between_LastSevenDays);
		helper.jsCLick(post_Date_Between_LastSevenDays);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Post Date Between Last Seven Days.");

		helper.Scrollintoview(search_bar);
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Search Bar.");

		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_LastSevenDays = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Total_Ads_Count_LastSevenDays= "
				+ Total_Ads_Count_LastSevenDays);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad-</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			helper.jsCLick(current_date1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad-</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			helper.jsCLick(current_date2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad-</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			helper.jsCLick(current_date3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			helper.jsCLick(current_date4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			helper.jsCLick(current_date5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			helper.jsCLick(current_date6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			helper.jsCLick(current_date7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			helper.jsCLick(current_date8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			helper.jsCLick(current_date9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			helper.jsCLick(current_date10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			helper.jsCLick(current_date11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			helper.jsCLick(current_date12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			helper.jsCLick(current_date13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			helper.jsCLick(current_date14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			helper.jsCLick(current_date15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		// Last Thirty Days

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Post Date Between : Last Thirty Days -</font> ");

		helper.waitForPageToLoad();
		helper.waitFor(post_Date_Between_DropDown);
		helper.highLightElement(driver, post_Date_Between_DropDown);
		helper.jsCLick(post_Date_Between_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On Post Date Between DropDown.");

		helper.waitFor(post_Date_Between_LastThirtyDays);
		helper.highLightElement(driver, post_Date_Between_LastThirtyDays);
		helper.jsCLick(post_Date_Between_LastThirtyDays);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Post Date Between Last Thirty Days.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Search Bar.");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_LastThirtyDays = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Total_Ads_Count_LastThirtyDays= "
				+ Total_Ads_Count_LastThirtyDays);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad-</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			helper.jsCLick(current_date1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad-</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			helper.jsCLick(current_date2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad-</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			helper.jsCLick(current_date3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			helper.jsCLick(current_date4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			helper.jsCLick(current_date5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			helper.jsCLick(current_date6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			helper.jsCLick(current_date7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			helper.jsCLick(current_date8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			helper.jsCLick(current_date9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			helper.jsCLick(current_date10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			helper.jsCLick(current_date11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			helper.jsCLick(current_date12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			helper.jsCLick(current_date13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			helper.jsCLick(current_date14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			helper.jsCLick(current_date15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);

		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		// This Month

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Post Date Between : This Month -</font> ");

		helper.waitForPageToLoad();
		helper.waitFor(post_Date_Between_DropDown);
		helper.highLightElement(driver, post_Date_Between_DropDown);
		helper.jsCLick(post_Date_Between_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On Post Date Between DropDown.");

		helper.waitFor(post_Date_Between_ThisMonth);
		helper.highLightElement(driver, post_Date_Between_ThisMonth);
		helper.jsCLick(post_Date_Between_ThisMonth);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Post Date Between This Month.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Search Bar.");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_ThisMonth = toatal_Count_Ads.getText();
		Reporter.log(
				"<B><font color = 'orange'> Step 4 -</font> Total_Ads_Count_ThisMonth= " + Total_Ads_Count_ThisMonth);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad-</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			helper.jsCLick(current_date1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad-</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			helper.jsCLick(current_date2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad-</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			helper.jsCLick(current_date3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			helper.jsCLick(current_date4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			helper.jsCLick(current_date5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			helper.jsCLick(current_date6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			helper.jsCLick(current_date7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			helper.jsCLick(current_date8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			helper.jsCLick(current_date9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			helper.jsCLick(current_date10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			helper.jsCLick(current_date11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			helper.jsCLick(current_date12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			helper.jsCLick(current_date13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			helper.jsCLick(current_date14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			helper.jsCLick(current_date15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.waitForPageToLoad();
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		// Last Month

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Post Date Between : Last Month -</font> ");

		helper.waitForPageToLoad();
		helper.waitFor(post_Date_Between_DropDown);
		helper.highLightElement(driver, post_Date_Between_DropDown);
		helper.jsCLick(post_Date_Between_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On Post Date Between DropDown.");

		helper.waitFor(post_Date_Between_LastMonth);
		helper.highLightElement(driver, post_Date_Between_LastMonth);
		helper.jsCLick(post_Date_Between_LastMonth);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Post Date Between Last Month.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Search Bar.");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_LastMonth = toatal_Count_Ads.getText();
		Reporter.log(
				"<B><font color = 'orange'> Step 4 -</font> Total_Ads_Count_LastMonth= " + Total_Ads_Count_LastMonth);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad-</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			helper.jsCLick(current_date1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad-</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			helper.jsCLick(current_date2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad-</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			helper.jsCLick(current_date3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			helper.jsCLick(current_date4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			helper.jsCLick(current_date5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			helper.jsCLick(current_date6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			helper.jsCLick(current_date7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			helper.jsCLick(current_date8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			helper.jsCLick(current_date9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			helper.jsCLick(current_date10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			helper.jsCLick(current_date11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			helper.jsCLick(current_date12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			helper.jsCLick(current_date13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			helper.jsCLick(current_date14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			helper.jsCLick(current_date15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date." + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

	/*	// Custom

		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Ads Seen Between :Custom Range -</font> ");

		helper.waitForPageToLoad();
		helper.waitFor(post_Date_Between_DropDown);
		helper.highLightElement(driver, post_Date_Between_DropDown);
		post_Date_Between_DropDown.click();
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On Post Date Between DropDown.");

		helper.waitForPageToLoad();
		helper.waitFor(post_Date_Between_Custom);
		helper.highLightElement(driver, post_Date_Between_Custom);
		try {
		helper.jsCLick(post_Date_Between_Custom);
		}catch (Exception e) {
			post_Date_Between_Custom.click();
		}
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Next Month Button In Calender.");
		helper.waitForPageToLoad();

		helper.waitFor(previousMonthButton);
		helper.highLightElement(driver, previousMonthButton);
		try {
		previousMonthButton.click();
		}catch (Exception e) {
			helper.jsCLick(previousMonthButton);
		}
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Previous Month Button In Calender.");

		helper.waitFor(previousMonthButton);
		helper.highLightElement(driver, previousMonthButton);
		try {
		helper.jsCLick(previousMonthButton);
		}catch (Exception e) {
			previousMonthButton.click();
		}
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Previous Month Button In Calender.");

		helper.waitFor(previousMonthButton);
		helper.highLightElement(driver, previousMonthButton);
		try {
		helper.jsCLick(previousMonthButton);
		}catch (Exception e) {
		previousMonthButton.click();
		}
		
		Reporter.log("<B><font color = 'orange'> Step 5 -</font> Clicked On Previous Month Button In Calender.");

		helper.waitFor(nextMonthButton);
		helper.highLightElement(driver, nextMonthButton);
		try {
		helper.jsCLick(nextMonthButton);
		}catch (Exception e) {
		nextMonthButton.click();
		}
		Reporter.log("<B><font color = 'orange'> Step 6 -</font> Clicked On Next Month Button In Calender.");

		helper.waitFor(custom_startDate);
		helper.highLightElement(driver, custom_startDate);
		try {
			helper.jsCLick(custom_startDate);
		}catch (Exception e) {
			custom_startDate.click();
		}
		Reporter.log("<B><font color = 'orange'> Step 7 -</font> Clicked On custom_startDate in Ads Seen Between.");

		helper.waitForPageToLoad();
		helper.Scrollintoview(custom_endDate);
		helper.waitFor(custom_endDate);
		helper.highLightElement(driver, custom_endDate);
		try {
			helper.jsCLick(custom_endDate);
		}catch (Exception e) {
			custom_endDate.click();
		}
		Reporter.log("<B><font color = 'orange'> Step 8 -</font> Clicked On custom_endDate in Ads Seen Between.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 9 -</font> Clicked On Search Bar.");
		helper.waitForPageToLoad();

		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_Custom = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 10 -</font> Total_Ads_Count_Custom= " + Total_Ads_Count_Custom);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad-</font> ");

		try {
			helper.Scrollintoview(current_date1);
			helper.waitFor(current_date1);
			helper.highLightElement(driver, current_date1);
			String imageDate = current_date1.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad-</font> ");

		try {
			helper.Scrollintoview(current_date2);
			helper.waitFor(current_date2);
			helper.highLightElement(driver, current_date2);
			String imageDate = current_date2.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad-</font> ");

		try {
			helper.Scrollintoview(current_date3);
			helper.waitFor(current_date3);
			helper.highLightElement(driver, current_date3);
			String imageDate = current_date3.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date4);
			helper.waitFor(current_date4);
			helper.highLightElement(driver, current_date4);
			String imageDate = current_date4.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date5);
			helper.waitFor(current_date5);
			helper.highLightElement(driver, current_date5);
			String imageDate = current_date5.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date6);
			helper.waitFor(current_date6);
			helper.highLightElement(driver, current_date6);
			String imageDate = current_date6.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date7);
			helper.waitFor(current_date7);
			helper.highLightElement(driver, current_date7);
			String imageDate = current_date7.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date8);
			helper.waitFor(current_date8);
			helper.highLightElement(driver, current_date8);
			String imageDate = current_date8.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date9);
			helper.waitFor(current_date9);
			helper.highLightElement(driver, current_date9);
			String imageDate = current_date9.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date10);
			helper.waitFor(current_date10);
			helper.highLightElement(driver, current_date10);
			String imageDate = current_date10.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date11);
			helper.waitFor(current_date11);
			helper.highLightElement(driver, current_date11);
			String imageDate = current_date11.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date12);
			helper.waitFor(current_date12);
			helper.highLightElement(driver, current_date12);
			String imageDate = current_date12.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date13);
			helper.waitFor(current_date13);
			helper.highLightElement(driver, current_date13);
			String imageDate = current_date13.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date14);
			helper.waitFor(current_date14);
			helper.highLightElement(driver, current_date14);
			String imageDate = current_date14.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad-</font> ");

		try {
			helper.Scrollintoview(current_date15);
			helper.waitFor(current_date15);
			helper.highLightElement(driver, current_date15);
			String imageDate = current_date15.getText();
			System.out.println("current_Date_All : " + imageDate);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Custom Month Image = " + imageDate);

			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText1);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked on showAnalytics Button");

			Set<String> S7 = driver.getWindowHandles();
			Iterator<String> it6 = S7.iterator();
			String parent6 = it6.next();
			String child6 = it6.next();

			driver.switchTo().window(child6);

			helper.waitForPageToLoad();
			helper.Scrollintoview(Last_Seen_childWindow);
			helper.waitFor(Last_Seen_childWindow);
			helper.highLightElement(driver, Last_Seen_childWindow);
			String lastSeenDate = Last_Seen_childWindow.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " + lastSeenDate);

			helper.Scrollintoview(post_Date);
			helper.waitFor(post_Date);
			helper.highLightElement(driver, post_Date);
			String postSeenDate = post_Date.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Post Date in AdDetails Page= " + postSeenDate);

			driver.close();

			driver.switchTo().window(parent6);

			helper.getPostDate(postSeenDate, imageDate);
		} catch (Exception e) {
			System.out.println("Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}*/
	}
	
	public void verify_Instagram_Dasboard_DomainRegistrationDate() throws InterruptedException {
		
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'orange'> Step2 -</font> I am on the page :" + Page_titel);

		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		helper.waitForPageToLoad();
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Power Ad Spy Logo is Displayed");
		
		helper.waitFor(pinterest);
		helper.highLightElement(driver, pinterest);
		pinterest.click();
		helper.waitForPageToLoad();
		Assert.assertTrue(pinterest.isDisplayed(), "Clicked on pinterest ");
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On pinterest Icon");
		helper.waitForPageToLoad();
		
		//ALL
		
		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Domain Registration Date : All -</font> ");
		
		helper.Scrollintoview(clearSearchField);
	    helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");
		
	    helper.waitFor(domain_Reg_Date_DropDown);
		helper.highLightElement(driver, domain_Reg_Date_DropDown);
		helper.jsCLick(domain_Reg_Date_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Domain Registration Date DropDown.");
		
		helper.waitFor(domain_Reg_Date_All);
		helper.highLightElement(driver, domain_Reg_Date_All);
		helper.jsCLick(domain_Reg_Date_All);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Domain Registration Date All.");
		
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Search Bar.");
		helper.waitForPageToLoad();
		
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_All=toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 5 -</font> Total_Ads_Count_All= " + Total_Ads_Count_All);
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st -</font> ");
		
		try {
		helper.Scrollintoview(current_date1);
		helper.waitFor(current_date1);
		helper.highLightElement(driver, current_date1);
		String imageDate = current_date1.getText();
		helper.jsCLick(current_date1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button1);
		helper.waitFor(showAnalytics_Button1);
		helper.highLightElement(driver, showAnalytics_Button1);
		String linkText1 = showAnalytics_Button1.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd -</font> ");
		
		try {
		helper.Scrollintoview(current_date2);
		helper.waitFor(current_date2);
		helper.highLightElement(driver, current_date2);
		String imageDate = current_date2.getText();
		helper.jsCLick(current_date2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button2);
		helper.waitFor(showAnalytics_Button2);
		helper.highLightElement(driver, showAnalytics_Button2);
		String linkText1 = showAnalytics_Button2.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd -</font> ");
		
		try {
		helper.Scrollintoview(current_date3);
		helper.waitFor(current_date3);
		helper.highLightElement(driver, current_date3);
		String imageDate = current_date3.getText();
		helper.jsCLick(current_date3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button3);
		helper.waitFor(showAnalytics_Button3);
		helper.highLightElement(driver, showAnalytics_Button3);
		String linkText1 = showAnalytics_Button3.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th -</font> ");
		
		try {
		helper.Scrollintoview(current_date4);
		helper.waitFor(current_date4);
		helper.highLightElement(driver, current_date4);
		String imageDate = current_date4.getText();
		helper.jsCLick(current_date4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button4);
		helper.waitFor(showAnalytics_Button4);
		helper.highLightElement(driver, showAnalytics_Button4);
		String linkText1 = showAnalytics_Button4.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th -</font> ");
		
		try {
		helper.Scrollintoview(current_date5);
		helper.waitFor(current_date5);
		helper.highLightElement(driver, current_date5);
		String imageDate = current_date5.getText();
		helper.jsCLick(current_date5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button5);
		helper.waitFor(showAnalytics_Button5);
		helper.highLightElement(driver, showAnalytics_Button5);
		String linkText1 = showAnalytics_Button5.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th -</font> ");
		
		try {
		helper.Scrollintoview(current_date6);
		helper.waitFor(current_date6);
		helper.highLightElement(driver, current_date6);
		String imageDate = current_date6.getText();
		helper.jsCLick(current_date6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button6);
		helper.waitFor(showAnalytics_Button6);
		helper.highLightElement(driver, showAnalytics_Button6);
		String linkText1 = showAnalytics_Button6.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th -</font> ");
		
		try {
		helper.Scrollintoview(current_date7);
		helper.waitFor(current_date7);
		helper.highLightElement(driver, current_date7);
		String imageDate = current_date7.getText();
		helper.jsCLick(current_date7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button7);
		helper.waitFor(showAnalytics_Button7);
		helper.highLightElement(driver, showAnalytics_Button7);
		String linkText1 = showAnalytics_Button7.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th -</font> ");
		
		try {
		helper.Scrollintoview(current_date8);
		helper.waitFor(current_date8);
		helper.highLightElement(driver, current_date8);
		String imageDate = current_date8.getText();
		helper.jsCLick(current_date8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button8);
		helper.waitFor(showAnalytics_Button8);
		helper.highLightElement(driver, showAnalytics_Button8);
		String linkText1 = showAnalytics_Button8.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th -</font> ");
		
		try {
		helper.Scrollintoview(current_date9);
		helper.waitFor(current_date9);
		helper.highLightElement(driver, current_date9);
		String imageDate = current_date9.getText();
		helper.jsCLick(current_date9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button9);
		helper.waitFor(showAnalytics_Button9);
		helper.highLightElement(driver, showAnalytics_Button9);
		String linkText1 = showAnalytics_Button9.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th -</font> ");
		
		try {
		helper.Scrollintoview(current_date10);
		helper.waitFor(current_date10);
		helper.highLightElement(driver, current_date10);
		String imageDate = current_date10.getText();
		helper.jsCLick(current_date10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button10);
		helper.waitFor(showAnalytics_Button10);
		helper.highLightElement(driver, showAnalytics_Button10);
		String linkText1 = showAnalytics_Button10.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th -</font> ");
		
		try {
		helper.Scrollintoview(current_date11);
		helper.waitFor(current_date11);
		helper.highLightElement(driver, current_date11);
		String imageDate = current_date11.getText();
		helper.jsCLick(current_date11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button11);
		helper.waitFor(showAnalytics_Button11);
		helper.highLightElement(driver, showAnalytics_Button11);
		String linkText1 = showAnalytics_Button11.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th -</font> ");
		
		try {
		helper.Scrollintoview(current_date12);
		helper.waitFor(current_date12);
		helper.highLightElement(driver, current_date12);
		String imageDate = current_date12.getText();
		helper.jsCLick(current_date12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button12);
		helper.waitFor(showAnalytics_Button12);
		helper.highLightElement(driver, showAnalytics_Button12);
		String linkText1 = showAnalytics_Button12.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th -</font> ");
		
		try {
		helper.Scrollintoview(current_date13);
		helper.waitFor(current_date13);
		helper.highLightElement(driver, current_date13);
		String imageDate = current_date13.getText();
		helper.jsCLick(current_date13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button13);
		helper.waitFor(showAnalytics_Button13);
		helper.highLightElement(driver, showAnalytics_Button13);
		String linkText1 = showAnalytics_Button13.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th -</font> ");
		
		try {
		helper.Scrollintoview(current_date14);
		helper.waitFor(current_date14);
		helper.highLightElement(driver, current_date14);
		String imageDate = current_date14.getText();
		helper.jsCLick(current_date14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button14);
		helper.waitFor(showAnalytics_Button14);
		helper.highLightElement(driver, showAnalytics_Button14);
		String linkText1 = showAnalytics_Button14.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th -</font> ");
		
		try {
		helper.Scrollintoview(current_date15);
		helper.waitFor(current_date15);
		helper.highLightElement(driver, current_date15);
		String imageDate = current_date15.getText();
		helper.jsCLick(current_date15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button15);
		helper.waitFor(showAnalytics_Button15);
		helper.highLightElement(driver, showAnalytics_Button15);
		String linkText1 = showAnalytics_Button15.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
	
		//Today
		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Domain Registration Date : Today -</font> ");
		
	    helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");
		
		helper.waitForPageToLoad();
	    helper.waitFor(domain_Reg_Date_DropDown);
		helper.highLightElement(driver, domain_Reg_Date_DropDown);
		helper.jsCLick(domain_Reg_Date_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Domain Registration Date DropDown.");
		
		helper.waitFor(domain_Reg_Date_Today);
		helper.highLightElement(driver, domain_Reg_Date_Today);
		helper.jsCLick(domain_Reg_Date_Today);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Domain Registration Date Today.");
		
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Search Bar.");
		helper.waitForPageToLoad();
		
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_Today=toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 5 -</font> Total_Ads_Count_Today= " + Total_Ads_Count_Today);
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st -</font> ");
		
		try {
		helper.Scrollintoview(current_date1);
		helper.waitFor(current_date1);
		helper.highLightElement(driver, current_date1);
		String imageDate = current_date1.getText();
		helper.jsCLick(current_date1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button1);
		helper.waitFor(showAnalytics_Button1);
		helper.highLightElement(driver, showAnalytics_Button1);
		String linkText1 = showAnalytics_Button1.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd -</font> ");
		
		try {
		helper.Scrollintoview(current_date2);
		helper.waitFor(current_date2);
		helper.highLightElement(driver, current_date2);
		String imageDate = current_date2.getText();
		helper.jsCLick(current_date2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button2);
		helper.waitFor(showAnalytics_Button2);
		helper.highLightElement(driver, showAnalytics_Button2);
		String linkText1 = showAnalytics_Button2.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd -</font> ");
		
		try {
		helper.Scrollintoview(current_date3);
		helper.waitFor(current_date3);
		helper.highLightElement(driver, current_date3);
		String imageDate = current_date3.getText();
		helper.jsCLick(current_date3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button3);
		helper.waitFor(showAnalytics_Button3);
		helper.highLightElement(driver, showAnalytics_Button3);
		String linkText1 = showAnalytics_Button3.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th -</font> ");
		
		try {
		helper.Scrollintoview(current_date4);
		helper.waitFor(current_date4);
		helper.highLightElement(driver, current_date4);
		String imageDate = current_date4.getText();
		helper.jsCLick(current_date4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button4);
		helper.waitFor(showAnalytics_Button4);
		helper.highLightElement(driver, showAnalytics_Button4);
		String linkText1 = showAnalytics_Button4.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th -</font> ");
		
		try {
		helper.Scrollintoview(current_date5);
		helper.waitFor(current_date5);
		helper.highLightElement(driver, current_date5);
		String imageDate = current_date5.getText();
		helper.jsCLick(current_date5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button5);
		helper.waitFor(showAnalytics_Button5);
		helper.highLightElement(driver, showAnalytics_Button5);
		String linkText1 = showAnalytics_Button5.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th -</font> ");
		
		try {
		helper.Scrollintoview(current_date6);
		helper.waitFor(current_date6);
		helper.highLightElement(driver, current_date6);
		String imageDate = current_date6.getText();
		helper.jsCLick(current_date6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button6);
		helper.waitFor(showAnalytics_Button6);
		helper.highLightElement(driver, showAnalytics_Button6);
		String linkText1 = showAnalytics_Button6.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th -</font> ");
		
		try {
		helper.Scrollintoview(current_date7);
		helper.waitFor(current_date7);
		helper.highLightElement(driver, current_date7);
		String imageDate = current_date7.getText();
		helper.jsCLick(current_date7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button7);
		helper.waitFor(showAnalytics_Button7);
		helper.highLightElement(driver, showAnalytics_Button7);
		String linkText1 = showAnalytics_Button7.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th -</font> ");
		
		try {
		helper.Scrollintoview(current_date8);
		helper.waitFor(current_date8);
		helper.highLightElement(driver, current_date8);
		String imageDate = current_date8.getText();
		helper.jsCLick(current_date8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button8);
		helper.waitFor(showAnalytics_Button8);
		helper.highLightElement(driver, showAnalytics_Button8);
		String linkText1 = showAnalytics_Button8.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th -</font> ");
		
		try {
		helper.Scrollintoview(current_date9);
		helper.waitFor(current_date9);
		helper.highLightElement(driver, current_date9);
		String imageDate = current_date9.getText();
		helper.jsCLick(current_date9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button9);
		helper.waitFor(showAnalytics_Button9);
		helper.highLightElement(driver, showAnalytics_Button9);
		String linkText1 = showAnalytics_Button9.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th -</font> ");
		
		try {
		helper.Scrollintoview(current_date10);
		helper.waitFor(current_date10);
		helper.highLightElement(driver, current_date10);
		String imageDate = current_date10.getText();
		helper.jsCLick(current_date10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button10);
		helper.waitFor(showAnalytics_Button10);
		helper.highLightElement(driver, showAnalytics_Button10);
		String linkText1 = showAnalytics_Button10.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th -</font> ");
		
		try {
		helper.Scrollintoview(current_date11);
		helper.waitFor(current_date11);
		helper.highLightElement(driver, current_date11);
		String imageDate = current_date11.getText();
		helper.jsCLick(current_date11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button11);
		helper.waitFor(showAnalytics_Button11);
		helper.highLightElement(driver, showAnalytics_Button11);
		String linkText1 = showAnalytics_Button11.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th -</font> ");
		
		try {
		helper.Scrollintoview(current_date12);
		helper.waitFor(current_date12);
		helper.highLightElement(driver, current_date12);
		String imageDate = current_date12.getText();
		helper.jsCLick(current_date12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button12);
		helper.waitFor(showAnalytics_Button12);
		helper.highLightElement(driver, showAnalytics_Button12);
		String linkText1 = showAnalytics_Button12.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th -</font> ");
		
		try {
		helper.Scrollintoview(current_date13);
		helper.waitFor(current_date13);
		helper.highLightElement(driver, current_date13);
		String imageDate = current_date13.getText();
		helper.jsCLick(current_date13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button13);
		helper.waitFor(showAnalytics_Button13);
		helper.highLightElement(driver, showAnalytics_Button13);
		String linkText1 = showAnalytics_Button13.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th -</font> ");
		
		try {
		helper.Scrollintoview(current_date14);
		helper.waitFor(current_date14);
		helper.highLightElement(driver, current_date14);
		String imageDate = current_date14.getText();
		helper.jsCLick(current_date14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button14);
		helper.waitFor(showAnalytics_Button14);
		helper.highLightElement(driver, showAnalytics_Button14);
		String linkText1 = showAnalytics_Button14.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th -</font> ");
		
		try {
		helper.Scrollintoview(current_date15);
		helper.waitFor(current_date15);
		helper.highLightElement(driver, current_date15);
		String imageDate = current_date15.getText();
		helper.jsCLick(current_date15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button15);
		helper.waitFor(showAnalytics_Button15);
		helper.highLightElement(driver, showAnalytics_Button15);
		String linkText1 = showAnalytics_Button15.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}		
		//Yesterday
		
		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Domain Registration Date : Yesterday -</font> ");
		
	    helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");
		
		helper.waitForPageToLoad();
	    helper.waitFor(domain_Reg_Date_DropDown);
		helper.highLightElement(driver, domain_Reg_Date_DropDown);
		helper.jsCLick(domain_Reg_Date_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Domain Registration Date DropDown.");
		
		helper.waitFor(domain_Reg_Date_Yesterday);
		helper.highLightElement(driver, domain_Reg_Date_Yesterday);
		helper.jsCLick(domain_Reg_Date_Yesterday);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Domain Registration Date Yesterday.");
		
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Search Bar.");
		helper.waitForPageToLoad();
		
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_Yesterday=toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 5 -</font> Total_Ads_Count_All= " + Total_Ads_Count_Yesterday);
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st -</font> ");
		
		try {
		helper.Scrollintoview(current_date1);
		helper.waitFor(current_date1);
		helper.highLightElement(driver, current_date1);
		String imageDate = current_date1.getText();
		helper.jsCLick(current_date1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button1);
		helper.waitFor(showAnalytics_Button1);
		helper.highLightElement(driver, showAnalytics_Button1);
		String linkText1 = showAnalytics_Button1.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd -</font> ");
		
		try {
		helper.Scrollintoview(current_date2);
		helper.waitFor(current_date2);
		helper.highLightElement(driver, current_date2);
		String imageDate = current_date2.getText();
		helper.jsCLick(current_date2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button2);
		helper.waitFor(showAnalytics_Button2);
		helper.highLightElement(driver, showAnalytics_Button2);
		String linkText1 = showAnalytics_Button2.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd -</font> ");
		
		try {
		helper.Scrollintoview(current_date3);
		helper.waitFor(current_date3);
		helper.highLightElement(driver, current_date3);
		String imageDate = current_date3.getText();
		helper.jsCLick(current_date3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button3);
		helper.waitFor(showAnalytics_Button3);
		helper.highLightElement(driver, showAnalytics_Button3);
		String linkText1 = showAnalytics_Button3.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th -</font> ");
		
		try {
		helper.Scrollintoview(current_date4);
		helper.waitFor(current_date4);
		helper.highLightElement(driver, current_date4);
		String imageDate = current_date4.getText();
		helper.jsCLick(current_date4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button4);
		helper.waitFor(showAnalytics_Button4);
		helper.highLightElement(driver, showAnalytics_Button4);
		String linkText1 = showAnalytics_Button4.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th -</font> ");
		
		try {
		helper.Scrollintoview(current_date5);
		helper.waitFor(current_date5);
		helper.highLightElement(driver, current_date5);
		String imageDate = current_date5.getText();
		helper.jsCLick(current_date5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button5);
		helper.waitFor(showAnalytics_Button5);
		helper.highLightElement(driver, showAnalytics_Button5);
		String linkText1 = showAnalytics_Button5.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th -</font> ");
		
		try {
		helper.Scrollintoview(current_date6);
		helper.waitFor(current_date6);
		helper.highLightElement(driver, current_date6);
		String imageDate = current_date6.getText();
		helper.jsCLick(current_date6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button6);
		helper.waitFor(showAnalytics_Button6);
		helper.highLightElement(driver, showAnalytics_Button6);
		String linkText1 = showAnalytics_Button6.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th -</font> ");
		
		try {
		helper.Scrollintoview(current_date7);
		helper.waitFor(current_date7);
		helper.highLightElement(driver, current_date7);
		String imageDate = current_date7.getText();
		helper.jsCLick(current_date7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button7);
		helper.waitFor(showAnalytics_Button7);
		helper.highLightElement(driver, showAnalytics_Button7);
		String linkText1 = showAnalytics_Button7.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th -</font> ");
		
		try {
		helper.Scrollintoview(current_date8);
		helper.waitFor(current_date8);
		helper.highLightElement(driver, current_date8);
		String imageDate = current_date8.getText();
		helper.jsCLick(current_date8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button8);
		helper.waitFor(showAnalytics_Button8);
		helper.highLightElement(driver, showAnalytics_Button8);
		String linkText1 = showAnalytics_Button8.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th -</font> ");
		
		try {
		helper.Scrollintoview(current_date9);
		helper.waitFor(current_date9);
		helper.highLightElement(driver, current_date9);
		String imageDate = current_date9.getText();
		helper.jsCLick(current_date9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button9);
		helper.waitFor(showAnalytics_Button9);
		helper.highLightElement(driver, showAnalytics_Button9);
		String linkText1 = showAnalytics_Button9.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th -</font> ");
		
		try {
		helper.Scrollintoview(current_date10);
		helper.waitFor(current_date10);
		helper.highLightElement(driver, current_date10);
		String imageDate = current_date10.getText();
		helper.jsCLick(current_date10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button10);
		helper.waitFor(showAnalytics_Button10);
		helper.highLightElement(driver, showAnalytics_Button10);
		String linkText1 = showAnalytics_Button10.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th -</font> ");
		
		try {
		helper.Scrollintoview(current_date11);
		helper.waitFor(current_date11);
		helper.highLightElement(driver, current_date11);
		String imageDate = current_date11.getText();
		helper.jsCLick(current_date11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button11);
		helper.waitFor(showAnalytics_Button11);
		helper.highLightElement(driver, showAnalytics_Button11);
		String linkText1 = showAnalytics_Button11.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th -</font> ");
		
		try {
		helper.Scrollintoview(current_date12);
		helper.waitFor(current_date12);
		helper.highLightElement(driver, current_date12);
		String imageDate = current_date12.getText();
		helper.jsCLick(current_date12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button12);
		helper.waitFor(showAnalytics_Button12);
		helper.highLightElement(driver, showAnalytics_Button12);
		String linkText1 = showAnalytics_Button12.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th -</font> ");
		
		try {
		helper.Scrollintoview(current_date13);
		helper.waitFor(current_date13);
		helper.highLightElement(driver, current_date13);
		String imageDate = current_date13.getText();
		helper.jsCLick(current_date13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button13);
		helper.waitFor(showAnalytics_Button13);
		helper.highLightElement(driver, showAnalytics_Button13);
		String linkText1 = showAnalytics_Button13.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th -</font> ");
		
		try {
		helper.Scrollintoview(current_date14);
		helper.waitFor(current_date14);
		helper.highLightElement(driver, current_date14);
		String imageDate = current_date14.getText();
		helper.jsCLick(current_date14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button14);
		helper.waitFor(showAnalytics_Button14);
		helper.highLightElement(driver, showAnalytics_Button14);
		String linkText1 = showAnalytics_Button14.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th -</font> ");
		
		try {
		helper.Scrollintoview(current_date15);
		helper.waitFor(current_date15);
		helper.highLightElement(driver, current_date15);
		String imageDate = current_date15.getText();
		helper.jsCLick(current_date15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button15);
		helper.waitFor(showAnalytics_Button15);
		helper.highLightElement(driver, showAnalytics_Button15);
		String linkText1 = showAnalytics_Button15.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		//Last Seven Days
		
		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Domain Registration Date : Last Seven Days -</font> ");
		
	    helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");
		
		helper.waitForPageToLoad();
	    helper.waitFor(domain_Reg_Date_DropDown);
		helper.highLightElement(driver, domain_Reg_Date_DropDown);
		helper.jsCLick(domain_Reg_Date_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Domain Registration Date DropDown.");
		
		helper.waitFor(domain_Reg_Date_LastSevenDays);
		helper.highLightElement(driver, domain_Reg_Date_LastSevenDays);
		helper.jsCLick(domain_Reg_Date_LastSevenDays);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Domain Registration Date Last Seven Days.");
		
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Search Bar.");
		helper.waitForPageToLoad();
		
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_LastSevenDays=toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 5 -</font> Total_Ads_Count_LastSevenDays= " + Total_Ads_Count_LastSevenDays);
		
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st -</font> ");
		
		try {
		helper.Scrollintoview(current_date1);
		helper.waitFor(current_date1);
		helper.highLightElement(driver, current_date1);
		String imageDate = current_date1.getText();
		helper.jsCLick(current_date1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button1);
		helper.waitFor(showAnalytics_Button1);
		helper.highLightElement(driver, showAnalytics_Button1);
		String linkText1 = showAnalytics_Button1.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd -</font> ");
		
		try {
		helper.Scrollintoview(current_date2);
		helper.waitFor(current_date2);
		helper.highLightElement(driver, current_date2);
		String imageDate = current_date2.getText();
		helper.jsCLick(current_date2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button2);
		helper.waitFor(showAnalytics_Button2);
		helper.highLightElement(driver, showAnalytics_Button2);
		String linkText1 = showAnalytics_Button2.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd -</font> ");
		
		try {
		helper.Scrollintoview(current_date3);
		helper.waitFor(current_date3);
		helper.highLightElement(driver, current_date3);
		String imageDate = current_date3.getText();
		helper.jsCLick(current_date3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button3);
		helper.waitFor(showAnalytics_Button3);
		helper.highLightElement(driver, showAnalytics_Button3);
		String linkText1 = showAnalytics_Button3.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th -</font> ");
		
		try {
		helper.Scrollintoview(current_date4);
		helper.waitFor(current_date4);
		helper.highLightElement(driver, current_date4);
		String imageDate = current_date4.getText();
		helper.jsCLick(current_date4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button4);
		helper.waitFor(showAnalytics_Button4);
		helper.highLightElement(driver, showAnalytics_Button4);
		String linkText1 = showAnalytics_Button4.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th -</font> ");
		
		try {
		helper.Scrollintoview(current_date5);
		helper.waitFor(current_date5);
		helper.highLightElement(driver, current_date5);
		String imageDate = current_date5.getText();
		helper.jsCLick(current_date5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button5);
		helper.waitFor(showAnalytics_Button5);
		helper.highLightElement(driver, showAnalytics_Button5);
		String linkText1 = showAnalytics_Button5.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th -</font> ");
		
		try {
		helper.Scrollintoview(current_date6);
		helper.waitFor(current_date6);
		helper.highLightElement(driver, current_date6);
		String imageDate = current_date6.getText();
		helper.jsCLick(current_date6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button6);
		helper.waitFor(showAnalytics_Button6);
		helper.highLightElement(driver, showAnalytics_Button6);
		String linkText1 = showAnalytics_Button6.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th -</font> ");
		
		try {
		helper.Scrollintoview(current_date7);
		helper.waitFor(current_date7);
		helper.highLightElement(driver, current_date7);
		String imageDate = current_date7.getText();
		helper.jsCLick(current_date7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button7);
		helper.waitFor(showAnalytics_Button7);
		helper.highLightElement(driver, showAnalytics_Button7);
		String linkText1 = showAnalytics_Button7.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th -</font> ");
		
		try {
		helper.Scrollintoview(current_date8);
		helper.waitFor(current_date8);
		helper.highLightElement(driver, current_date8);
		String imageDate = current_date8.getText();
		helper.jsCLick(current_date8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button8);
		helper.waitFor(showAnalytics_Button8);
		helper.highLightElement(driver, showAnalytics_Button8);
		String linkText1 = showAnalytics_Button8.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th -</font> ");
		
		try {
		helper.Scrollintoview(current_date9);
		helper.waitFor(current_date9);
		helper.highLightElement(driver, current_date9);
		String imageDate = current_date9.getText();
		helper.jsCLick(current_date9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button9);
		helper.waitFor(showAnalytics_Button9);
		helper.highLightElement(driver, showAnalytics_Button9);
		String linkText1 = showAnalytics_Button9.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th -</font> ");
		
		try {
		helper.Scrollintoview(current_date10);
		helper.waitFor(current_date10);
		helper.highLightElement(driver, current_date10);
		String imageDate = current_date10.getText();
		helper.jsCLick(current_date10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button10);
		helper.waitFor(showAnalytics_Button10);
		helper.highLightElement(driver, showAnalytics_Button10);
		String linkText1 = showAnalytics_Button10.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th -</font> ");
		
		try {
		helper.Scrollintoview(current_date11);
		helper.waitFor(current_date11);
		helper.highLightElement(driver, current_date11);
		String imageDate = current_date11.getText();
		helper.jsCLick(current_date11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button11);
		helper.waitFor(showAnalytics_Button11);
		helper.highLightElement(driver, showAnalytics_Button11);
		String linkText1 = showAnalytics_Button11.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th -</font> ");
		
		try {
		helper.Scrollintoview(current_date12);
		helper.waitFor(current_date12);
		helper.highLightElement(driver, current_date12);
		String imageDate = current_date12.getText();
		helper.jsCLick(current_date12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button12);
		helper.waitFor(showAnalytics_Button12);
		helper.highLightElement(driver, showAnalytics_Button12);
		String linkText1 = showAnalytics_Button12.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th -</font> ");
		
		try {
		helper.Scrollintoview(current_date13);
		helper.waitFor(current_date13);
		helper.highLightElement(driver, current_date13);
		String imageDate = current_date13.getText();
		helper.jsCLick(current_date13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button13);
		helper.waitFor(showAnalytics_Button13);
		helper.highLightElement(driver, showAnalytics_Button13);
		String linkText1 = showAnalytics_Button13.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th -</font> ");
		
		try {
		helper.Scrollintoview(current_date14);
		helper.waitFor(current_date14);
		helper.highLightElement(driver, current_date14);
		String imageDate = current_date14.getText();
		helper.jsCLick(current_date14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button14);
		helper.waitFor(showAnalytics_Button14);
		helper.highLightElement(driver, showAnalytics_Button14);
		String linkText1 = showAnalytics_Button14.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th -</font> ");
		
		try {
		helper.Scrollintoview(current_date15);
		helper.waitFor(current_date15);
		helper.highLightElement(driver, current_date15);
		String imageDate = current_date15.getText();
		helper.jsCLick(current_date15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button15);
		helper.waitFor(showAnalytics_Button15);
		helper.highLightElement(driver, showAnalytics_Button15);
		String linkText1 = showAnalytics_Button15.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		//Last Thirty Days
		
		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Domain Registration Date : Last Thirty Days -</font> ");
		
	    helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");
		
	    helper.waitFor(domain_Reg_Date_DropDown);
		helper.highLightElement(driver, domain_Reg_Date_DropDown);
		helper.jsCLick(domain_Reg_Date_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Domain Registration Date DropDown.");
		
		helper.waitFor(domain_Reg_Date_LastThirtyDays);
		helper.highLightElement(driver, domain_Reg_Date_LastThirtyDays);
		helper.jsCLick(domain_Reg_Date_LastThirtyDays);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Domain Registration Date Last Thirty Days.");
		
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Search Bar.");
		
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_LastThirtyDays=toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 5 -</font> Total_Ads_Count_LastThirtyDays= " + Total_Ads_Count_LastThirtyDays);
		helper.waitForPageToLoad();
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st -</font> ");
		
		try {
		helper.Scrollintoview(current_date1);
		helper.waitFor(current_date1);
		helper.highLightElement(driver, current_date1);
		String imageDate = current_date1.getText();
		helper.jsCLick(current_date1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button1);
		helper.waitFor(showAnalytics_Button1);
		helper.highLightElement(driver, showAnalytics_Button1);
		String linkText1 = showAnalytics_Button1.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd -</font> ");
		
		try {
		helper.Scrollintoview(current_date2);
		helper.waitFor(current_date2);
		helper.highLightElement(driver, current_date2);
		String imageDate = current_date2.getText();
		helper.jsCLick(current_date2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button2);
		helper.waitFor(showAnalytics_Button2);
		helper.highLightElement(driver, showAnalytics_Button2);
		String linkText1 = showAnalytics_Button2.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd -</font> ");
		
		try {
		helper.Scrollintoview(current_date3);
		helper.waitFor(current_date3);
		helper.highLightElement(driver, current_date3);
		String imageDate = current_date3.getText();
		helper.jsCLick(current_date3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button3);
		helper.waitFor(showAnalytics_Button3);
		helper.highLightElement(driver, showAnalytics_Button3);
		String linkText1 = showAnalytics_Button3.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th -</font> ");
		
		try {
		helper.Scrollintoview(current_date4);
		helper.waitFor(current_date4);
		helper.highLightElement(driver, current_date4);
		String imageDate = current_date4.getText();
		helper.jsCLick(current_date4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button4);
		helper.waitFor(showAnalytics_Button4);
		helper.highLightElement(driver, showAnalytics_Button4);
		String linkText1 = showAnalytics_Button4.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th -</font> ");
		
		try {
		helper.Scrollintoview(current_date5);
		helper.waitFor(current_date5);
		helper.highLightElement(driver, current_date5);
		String imageDate = current_date5.getText();
		helper.jsCLick(current_date5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button5);
		helper.waitFor(showAnalytics_Button5);
		helper.highLightElement(driver, showAnalytics_Button5);
		String linkText1 = showAnalytics_Button5.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th -</font> ");
		
		try {
		helper.Scrollintoview(current_date6);
		helper.waitFor(current_date6);
		helper.highLightElement(driver, current_date6);
		String imageDate = current_date6.getText();
		helper.jsCLick(current_date6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button6);
		helper.waitFor(showAnalytics_Button6);
		helper.highLightElement(driver, showAnalytics_Button6);
		String linkText1 = showAnalytics_Button6.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th -</font> ");
		
		try {
		helper.Scrollintoview(current_date7);
		helper.waitFor(current_date7);
		helper.highLightElement(driver, current_date7);
		String imageDate = current_date7.getText();
		helper.jsCLick(current_date7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button7);
		helper.waitFor(showAnalytics_Button7);
		helper.highLightElement(driver, showAnalytics_Button7);
		String linkText1 = showAnalytics_Button7.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th -</font> ");
		
		try {
		helper.Scrollintoview(current_date8);
		helper.waitFor(current_date8);
		helper.highLightElement(driver, current_date8);
		String imageDate = current_date8.getText();
		helper.jsCLick(current_date8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button8);
		helper.waitFor(showAnalytics_Button8);
		helper.highLightElement(driver, showAnalytics_Button8);
		String linkText1 = showAnalytics_Button8.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th -</font> ");
		
		try {
		helper.Scrollintoview(current_date9);
		helper.waitFor(current_date9);
		helper.highLightElement(driver, current_date9);
		String imageDate = current_date9.getText();
		helper.jsCLick(current_date9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button9);
		helper.waitFor(showAnalytics_Button9);
		helper.highLightElement(driver, showAnalytics_Button9);
		String linkText1 = showAnalytics_Button9.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th -</font> ");
		
		try {
		helper.Scrollintoview(current_date10);
		helper.waitFor(current_date10);
		helper.highLightElement(driver, current_date10);
		String imageDate = current_date10.getText();
		helper.jsCLick(current_date10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button10);
		helper.waitFor(showAnalytics_Button10);
		helper.highLightElement(driver, showAnalytics_Button10);
		String linkText1 = showAnalytics_Button10.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th -</font> ");
		
		try {
		helper.Scrollintoview(current_date11);
		helper.waitFor(current_date11);
		helper.highLightElement(driver, current_date11);
		String imageDate = current_date11.getText();
		helper.jsCLick(current_date11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button11);
		helper.waitFor(showAnalytics_Button11);
		helper.highLightElement(driver, showAnalytics_Button11);
		String linkText1 = showAnalytics_Button11.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th -</font> ");
		
		try {
		helper.Scrollintoview(current_date12);
		helper.waitFor(current_date12);
		helper.highLightElement(driver, current_date12);
		String imageDate = current_date12.getText();
		helper.jsCLick(current_date12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button12);
		helper.waitFor(showAnalytics_Button12);
		helper.highLightElement(driver, showAnalytics_Button12);
		String linkText1 = showAnalytics_Button12.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th -</font> ");
		
		try {
		helper.Scrollintoview(current_date13);
		helper.waitFor(current_date13);
		helper.highLightElement(driver, current_date13);
		String imageDate = current_date13.getText();
		helper.jsCLick(current_date13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button13);
		helper.waitFor(showAnalytics_Button13);
		helper.highLightElement(driver, showAnalytics_Button13);
		String linkText1 = showAnalytics_Button13.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th -</font> ");
		
		try {
		helper.Scrollintoview(current_date14);
		helper.waitFor(current_date14);
		helper.highLightElement(driver, current_date14);
		String imageDate = current_date14.getText();
		helper.jsCLick(current_date14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button14);
		helper.waitFor(showAnalytics_Button14);
		helper.highLightElement(driver, showAnalytics_Button14);
		String linkText1 = showAnalytics_Button14.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th -</font> ");
		
		try {
		helper.Scrollintoview(current_date15);
		helper.waitFor(current_date15);
		helper.highLightElement(driver, current_date15);
		String imageDate = current_date15.getText();
		helper.jsCLick(current_date15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button15);
		helper.waitFor(showAnalytics_Button15);
		helper.highLightElement(driver, showAnalytics_Button15);
		String linkText1 = showAnalytics_Button15.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		//This Month
		
		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Domain Registration Date : This Month -</font> ");
		
	    helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");
		
		helper.waitForPageToLoad();
	    helper.waitFor(domain_Reg_Date_DropDown);
		helper.highLightElement(driver, domain_Reg_Date_DropDown);
		helper.jsCLick(domain_Reg_Date_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Domain Registration Date DropDown.");
		
		helper.waitFor(domain_Reg_Date_ThisMonth);
		helper.highLightElement(driver, domain_Reg_Date_ThisMonth);
		helper.jsCLick(domain_Reg_Date_ThisMonth);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Domain Registration Date This Month.");
		
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Search Bar.");
		
		helper.waitForPageToLoad();
		
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_ThisMonth=toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 5 -</font> Total_Ads_Count_ThisMonth= " + Total_Ads_Count_ThisMonth);
		
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st -</font> ");
		
		try {
		helper.Scrollintoview(current_date1);
		helper.waitFor(current_date1);
		helper.highLightElement(driver, current_date1);
		String imageDate = current_date1.getText();
		helper.jsCLick(current_date1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button1);
		helper.waitFor(showAnalytics_Button1);
		helper.highLightElement(driver, showAnalytics_Button1);
		String linkText1 = showAnalytics_Button1.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd -</font> ");
		
		try {
		helper.Scrollintoview(current_date2);
		helper.waitFor(current_date2);
		helper.highLightElement(driver, current_date2);
		String imageDate = current_date2.getText();
		helper.jsCLick(current_date2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button2);
		helper.waitFor(showAnalytics_Button2);
		helper.highLightElement(driver, showAnalytics_Button2);
		String linkText1 = showAnalytics_Button2.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd -</font> ");
		
		try {
		helper.Scrollintoview(current_date3);
		helper.waitFor(current_date3);
		helper.highLightElement(driver, current_date3);
		String imageDate = current_date3.getText();
		helper.jsCLick(current_date3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button3);
		helper.waitFor(showAnalytics_Button3);
		helper.highLightElement(driver, showAnalytics_Button3);
		String linkText1 = showAnalytics_Button3.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th -</font> ");
		
		try {
		helper.Scrollintoview(current_date4);
		helper.waitFor(current_date4);
		helper.highLightElement(driver, current_date4);
		String imageDate = current_date4.getText();
		helper.jsCLick(current_date4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button4);
		helper.waitFor(showAnalytics_Button4);
		helper.highLightElement(driver, showAnalytics_Button4);
		String linkText1 = showAnalytics_Button4.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th -</font> ");
		
		try {
		helper.Scrollintoview(current_date5);
		helper.waitFor(current_date5);
		helper.highLightElement(driver, current_date5);
		String imageDate = current_date5.getText();
		helper.jsCLick(current_date5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button5);
		helper.waitFor(showAnalytics_Button5);
		helper.highLightElement(driver, showAnalytics_Button5);
		String linkText1 = showAnalytics_Button5.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th -</font> ");
		
		try {
		helper.Scrollintoview(current_date6);
		helper.waitFor(current_date6);
		helper.highLightElement(driver, current_date6);
		String imageDate = current_date6.getText();
		helper.jsCLick(current_date6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button6);
		helper.waitFor(showAnalytics_Button6);
		helper.highLightElement(driver, showAnalytics_Button6);
		String linkText1 = showAnalytics_Button6.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th -</font> ");
		
		try {
		helper.Scrollintoview(current_date7);
		helper.waitFor(current_date7);
		helper.highLightElement(driver, current_date7);
		String imageDate = current_date7.getText();
		helper.jsCLick(current_date7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button7);
		helper.waitFor(showAnalytics_Button7);
		helper.highLightElement(driver, showAnalytics_Button7);
		String linkText1 = showAnalytics_Button7.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th -</font> ");
		
		try {
		helper.Scrollintoview(current_date8);
		helper.waitFor(current_date8);
		helper.highLightElement(driver, current_date8);
		String imageDate = current_date8.getText();
		helper.jsCLick(current_date8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button8);
		helper.waitFor(showAnalytics_Button8);
		helper.highLightElement(driver, showAnalytics_Button8);
		String linkText1 = showAnalytics_Button8.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th -</font> ");
		
		try {
		helper.Scrollintoview(current_date9);
		helper.waitFor(current_date9);
		helper.highLightElement(driver, current_date9);
		String imageDate = current_date9.getText();
		helper.jsCLick(current_date9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button9);
		helper.waitFor(showAnalytics_Button9);
		helper.highLightElement(driver, showAnalytics_Button9);
		String linkText1 = showAnalytics_Button9.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th -</font> ");
		
		try {
		helper.Scrollintoview(current_date10);
		helper.waitFor(current_date10);
		helper.highLightElement(driver, current_date10);
		String imageDate = current_date10.getText();
		helper.jsCLick(current_date10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button10);
		helper.waitFor(showAnalytics_Button10);
		helper.highLightElement(driver, showAnalytics_Button10);
		String linkText1 = showAnalytics_Button10.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th -</font> ");
		
		try {
		helper.Scrollintoview(current_date11);
		helper.waitFor(current_date11);
		helper.highLightElement(driver, current_date11);
		String imageDate = current_date11.getText();
		helper.jsCLick(current_date11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button11);
		helper.waitFor(showAnalytics_Button11);
		helper.highLightElement(driver, showAnalytics_Button11);
		String linkText1 = showAnalytics_Button11.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th -</font> ");
		
		try {
		helper.Scrollintoview(current_date12);
		helper.waitFor(current_date12);
		helper.highLightElement(driver, current_date12);
		String imageDate = current_date12.getText();
		helper.jsCLick(current_date12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button12);
		helper.waitFor(showAnalytics_Button12);
		helper.highLightElement(driver, showAnalytics_Button12);
		String linkText1 = showAnalytics_Button12.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th -</font> ");
		
		try {
		helper.Scrollintoview(current_date13);
		helper.waitFor(current_date13);
		helper.highLightElement(driver, current_date13);
		String imageDate = current_date13.getText();
		helper.jsCLick(current_date13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button13);
		helper.waitFor(showAnalytics_Button13);
		helper.highLightElement(driver, showAnalytics_Button13);
		String linkText1 = showAnalytics_Button13.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th -</font> ");
		
		try {
		helper.Scrollintoview(current_date14);
		helper.waitFor(current_date14);
		helper.highLightElement(driver, current_date14);
		String imageDate = current_date14.getText();
		helper.jsCLick(current_date14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button14);
		helper.waitFor(showAnalytics_Button14);
		helper.highLightElement(driver, showAnalytics_Button14);
		String linkText1 = showAnalytics_Button14.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th -</font> ");
		
		try {
		helper.Scrollintoview(current_date15);
		helper.waitFor(current_date15);
		helper.highLightElement(driver, current_date15);
		String imageDate = current_date15.getText();
		helper.jsCLick(current_date15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button15);
		helper.waitFor(showAnalytics_Button15);
		helper.highLightElement(driver, showAnalytics_Button15);
		String linkText1 = showAnalytics_Button15.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		//Last Month
		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Domain Registration Date : Last Month -</font> ");
		
	    helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");
		
		helper.waitForPageToLoad();
	    helper.waitFor(domain_Reg_Date_DropDown);
		helper.highLightElement(driver, domain_Reg_Date_DropDown);
		helper.jsCLick(domain_Reg_Date_DropDown);
		Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Domain Registration Date DropDown.");
		
		helper.waitFor(domain_Reg_Date_LastMonth);
		helper.highLightElement(driver, domain_Reg_Date_LastMonth);
		helper.jsCLick(domain_Reg_Date_LastMonth);
		Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Domain Registration Date Last Month.");
		
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On Search Bar.");
		
		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_LastMonth=toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step 5 -</font> Total_Ads_Count_LastMonth= " + Total_Ads_Count_LastMonth);
		helper.waitForPageToLoad();
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st -</font> ");
		
		try {
		helper.Scrollintoview(current_date1);
		helper.waitFor(current_date1);
		helper.highLightElement(driver, current_date1);
		String imageDate = current_date1.getText();
		helper.jsCLick(current_date1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button1);
		helper.waitFor(showAnalytics_Button1);
		helper.highLightElement(driver, showAnalytics_Button1);
		String linkText1 = showAnalytics_Button1.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd -</font> ");
		
		try {
		helper.Scrollintoview(current_date2);
		helper.waitFor(current_date2);
		helper.highLightElement(driver, current_date2);
		String imageDate = current_date2.getText();
		helper.jsCLick(current_date2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button2);
		helper.waitFor(showAnalytics_Button2);
		helper.highLightElement(driver, showAnalytics_Button2);
		String linkText1 = showAnalytics_Button2.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd -</font> ");
		
		try {
		helper.Scrollintoview(current_date3);
		helper.waitFor(current_date3);
		helper.highLightElement(driver, current_date3);
		String imageDate = current_date3.getText();
		helper.jsCLick(current_date3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button3);
		helper.waitFor(showAnalytics_Button3);
		helper.highLightElement(driver, showAnalytics_Button3);
		String linkText1 = showAnalytics_Button3.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th -</font> ");
		
		try {
		helper.Scrollintoview(current_date4);
		helper.waitFor(current_date4);
		helper.highLightElement(driver, current_date4);
		String imageDate = current_date4.getText();
		helper.jsCLick(current_date4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button4);
		helper.waitFor(showAnalytics_Button4);
		helper.highLightElement(driver, showAnalytics_Button4);
		String linkText1 = showAnalytics_Button4.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th -</font> ");
		
		try {
		helper.Scrollintoview(current_date5);
		helper.waitFor(current_date5);
		helper.highLightElement(driver, current_date5);
		String imageDate = current_date5.getText();
		helper.jsCLick(current_date5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button5);
		helper.waitFor(showAnalytics_Button5);
		helper.highLightElement(driver, showAnalytics_Button5);
		String linkText1 = showAnalytics_Button5.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th -</font> ");
		
		try {
		helper.Scrollintoview(current_date6);
		helper.waitFor(current_date6);
		helper.highLightElement(driver, current_date6);
		String imageDate = current_date6.getText();
		helper.jsCLick(current_date6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button6);
		helper.waitFor(showAnalytics_Button6);
		helper.highLightElement(driver, showAnalytics_Button6);
		String linkText1 = showAnalytics_Button6.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th -</font> ");
		
		try {
		helper.Scrollintoview(current_date7);
		helper.waitFor(current_date7);
		helper.highLightElement(driver, current_date7);
		String imageDate = current_date7.getText();
		helper.jsCLick(current_date7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button7);
		helper.waitFor(showAnalytics_Button7);
		helper.highLightElement(driver, showAnalytics_Button7);
		String linkText1 = showAnalytics_Button7.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th -</font> ");
		
		try {
		helper.Scrollintoview(current_date8);
		helper.waitFor(current_date8);
		helper.highLightElement(driver, current_date8);
		String imageDate = current_date8.getText();
		helper.jsCLick(current_date8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button8);
		helper.waitFor(showAnalytics_Button8);
		helper.highLightElement(driver, showAnalytics_Button8);
		String linkText1 = showAnalytics_Button8.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th -</font> ");
		
		try {
		helper.Scrollintoview(current_date9);
		helper.waitFor(current_date9);
		helper.highLightElement(driver, current_date9);
		String imageDate = current_date9.getText();
		helper.jsCLick(current_date9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button9);
		helper.waitFor(showAnalytics_Button9);
		helper.highLightElement(driver, showAnalytics_Button9);
		String linkText1 = showAnalytics_Button9.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th -</font> ");
		
		try {
		helper.Scrollintoview(current_date10);
		helper.waitFor(current_date10);
		helper.highLightElement(driver, current_date10);
		String imageDate = current_date10.getText();
		helper.jsCLick(current_date10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button10);
		helper.waitFor(showAnalytics_Button10);
		helper.highLightElement(driver, showAnalytics_Button10);
		String linkText1 = showAnalytics_Button10.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th -</font> ");
		
		try {
		helper.Scrollintoview(current_date11);
		helper.waitFor(current_date11);
		helper.highLightElement(driver, current_date11);
		String imageDate = current_date11.getText();
		helper.jsCLick(current_date11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button11);
		helper.waitFor(showAnalytics_Button11);
		helper.highLightElement(driver, showAnalytics_Button11);
		String linkText1 = showAnalytics_Button11.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th -</font> ");
		
		try {
		helper.Scrollintoview(current_date12);
		helper.waitFor(current_date12);
		helper.highLightElement(driver, current_date12);
		String imageDate = current_date12.getText();
		helper.jsCLick(current_date12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button12);
		helper.waitFor(showAnalytics_Button12);
		helper.highLightElement(driver, showAnalytics_Button12);
		String linkText1 = showAnalytics_Button12.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th -</font> ");
		
		try {
		helper.Scrollintoview(current_date13);
		helper.waitFor(current_date13);
		helper.highLightElement(driver, current_date13);
		String imageDate = current_date13.getText();
		helper.jsCLick(current_date13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button13);
		helper.waitFor(showAnalytics_Button13);
		helper.highLightElement(driver, showAnalytics_Button13);
		String linkText1 = showAnalytics_Button13.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th -</font> ");
		
		try {
		helper.Scrollintoview(current_date14);
		helper.waitFor(current_date14);
		helper.highLightElement(driver, current_date14);
		String imageDate = current_date14.getText();
		helper.jsCLick(current_date14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button14);
		helper.waitFor(showAnalytics_Button14);
		helper.highLightElement(driver, showAnalytics_Button14);
		String linkText1 = showAnalytics_Button14.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th -</font> ");
		
		try {
		helper.Scrollintoview(current_date15);
		helper.waitFor(current_date15);
		helper.highLightElement(driver, current_date15);
		String imageDate = current_date15.getText();
		helper.jsCLick(current_date15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button15);
		helper.waitFor(showAnalytics_Button15);
		helper.highLightElement(driver, showAnalytics_Button15);
		String linkText1 = showAnalytics_Button15.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
	/*	//Custom
		
		 Reporter.log("");
		 Reporter.log("<B><font color = 'green'> Domain Registration Date :Custom Range -</font> ");
		  
		    helper.waitFor(clearSearchField);
			helper.highLightElement(driver, clearSearchField);
			helper.jsCLick(clearSearchField);
			Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");
			
			helper.waitFor(domain_Reg_Date_DropDown);
			helper.highLightElement(driver, domain_Reg_Date_DropDown);
			try {
				domain_Reg_Date_DropDown.click();
			}catch (Exception e) {
				helper.jsCLick(domain_Reg_Date_DropDown);
			}
			
			Reporter.log("<B><font color = 'orange'> Step 2 -</font> Clicked On Domain Registration Date DropDown.");
		    
			helper.waitFor(domain_Reg_Date_Custom);
			helper.highLightElement(driver, domain_Reg_Date_Custom);
			helper.jsCLick(domain_Reg_Date_Custom);
			Reporter.log("<B><font color = 'orange'> Step 3 -</font> Clicked On Custom in Domain Registration Date.");
			helper.waitForPageToLoad();
			
			helper.waitFor(custom_startDate);
			helper.highLightElement(driver, custom_startDate);
			try {
			custom_startDate.click(); 
			}catch (Exception e) {
			helper.jsCLick(custom_startDate);
			}
			Reporter.log("<B><font color = 'orange'> Step 4 -</font> Clicked On custom_startDate in Ads Seen Between.");
			helper.waitForPageToLoad();

			helper.waitFor(custom_endDate);
			helper.highLightElement(driver, custom_endDate);
			try {
			custom_endDate.click();
			}catch (Exception e) {
			helper.jsCLick(custom_endDate);
			}
			Reporter.log("<B><font color = 'orange'> Step 5 -</font> Clicked On custom_endDate in Ads Seen Between.");
			
			helper.waitFor(search_bar);
			helper.highLightElement(driver, search_bar);
			helper.jsCLick(search_bar);
			Reporter.log("<B><font color = 'orange'> Step 6 -</font> Clicked On Search Bar.");
			helper.waitForPageToLoad();
			
			helper.waitFor(toatal_Count_Ads);
			helper.highLightElement(driver, toatal_Count_Ads);
			helper.jsCLick(toatal_Count_Ads);
			String Total_Ads_Count_Custom=toatal_Count_Ads.getText();
			Reporter.log("<B><font color = 'orange'> Step7 -</font> Total_Ads_Count_Custom= " + Total_Ads_Count_Custom);
			helper.waitForPageToLoad();
			
		   
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st -</font> ");
		
		try {
		helper.Scrollintoview(current_date1);
		helper.waitFor(current_date1);
		helper.highLightElement(driver, current_date1);
		String imageDate = current_date1.getText();
		helper.jsCLick(current_date1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button1);
		helper.waitFor(showAnalytics_Button1);
		helper.highLightElement(driver, showAnalytics_Button1);
		String linkText1 = showAnalytics_Button1.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button1);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd -</font> ");
		
		try {
		helper.Scrollintoview(current_date2);
		helper.waitFor(current_date2);
		helper.highLightElement(driver, current_date2);
		String imageDate = current_date2.getText();
		helper.jsCLick(current_date2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button2);
		helper.waitFor(showAnalytics_Button2);
		helper.highLightElement(driver, showAnalytics_Button2);
		String linkText1 = showAnalytics_Button2.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button2);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd -</font> ");
		
		try {
		helper.Scrollintoview(current_date3);
		helper.waitFor(current_date3);
		helper.highLightElement(driver, current_date3);
		String imageDate = current_date3.getText();
		helper.jsCLick(current_date3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button3);
		helper.waitFor(showAnalytics_Button3);
		helper.highLightElement(driver, showAnalytics_Button3);
		String linkText1 = showAnalytics_Button3.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button3);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th -</font> ");
		
		try {
		helper.Scrollintoview(current_date4);
		helper.waitFor(current_date4);
		helper.highLightElement(driver, current_date4);
		String imageDate = current_date4.getText();
		helper.jsCLick(current_date4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button4);
		helper.waitFor(showAnalytics_Button4);
		helper.highLightElement(driver, showAnalytics_Button4);
		String linkText1 = showAnalytics_Button4.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button4);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th -</font> ");
		
		try {
		helper.Scrollintoview(current_date5);
		helper.waitFor(current_date5);
		helper.highLightElement(driver, current_date5);
		String imageDate = current_date5.getText();
		helper.jsCLick(current_date5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button5);
		helper.waitFor(showAnalytics_Button5);
		helper.highLightElement(driver, showAnalytics_Button5);
		String linkText1 = showAnalytics_Button5.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button5);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th -</font> ");
		
		try {
		helper.Scrollintoview(current_date6);
		helper.waitFor(current_date6);
		helper.highLightElement(driver, current_date6);
		String imageDate = current_date6.getText();
		helper.jsCLick(current_date6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button6);
		helper.waitFor(showAnalytics_Button6);
		helper.highLightElement(driver, showAnalytics_Button6);
		String linkText1 = showAnalytics_Button6.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button6);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th -</font> ");
		
		try {
		helper.Scrollintoview(current_date7);
		helper.waitFor(current_date7);
		helper.highLightElement(driver, current_date7);
		String imageDate = current_date7.getText();
		helper.jsCLick(current_date7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button7);
		helper.waitFor(showAnalytics_Button7);
		helper.highLightElement(driver, showAnalytics_Button7);
		String linkText1 = showAnalytics_Button7.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button7);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th -</font> ");
		
		try {
		helper.Scrollintoview(current_date8);
		helper.waitFor(current_date8);
		helper.highLightElement(driver, current_date8);
		String imageDate = current_date8.getText();
		helper.jsCLick(current_date8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button8);
		helper.waitFor(showAnalytics_Button8);
		helper.highLightElement(driver, showAnalytics_Button8);
		String linkText1 = showAnalytics_Button8.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button8);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th -</font> ");
		
		try {
		helper.Scrollintoview(current_date9);
		helper.waitFor(current_date9);
		helper.highLightElement(driver, current_date9);
		String imageDate = current_date9.getText();
		helper.jsCLick(current_date9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button9);
		helper.waitFor(showAnalytics_Button9);
		helper.highLightElement(driver, showAnalytics_Button9);
		String linkText1 = showAnalytics_Button9.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button9);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th -</font> ");
		
		try {
		helper.Scrollintoview(current_date10);
		helper.waitFor(current_date10);
		helper.highLightElement(driver, current_date10);
		String imageDate = current_date10.getText();
		helper.jsCLick(current_date10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button10);
		helper.waitFor(showAnalytics_Button10);
		helper.highLightElement(driver, showAnalytics_Button10);
		String linkText1 = showAnalytics_Button10.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button10);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th -</font> ");
		
		try {
		helper.Scrollintoview(current_date11);
		helper.waitFor(current_date11);
		helper.highLightElement(driver, current_date11);
		String imageDate = current_date11.getText();
		helper.jsCLick(current_date11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button11);
		helper.waitFor(showAnalytics_Button11);
		helper.highLightElement(driver, showAnalytics_Button11);
		String linkText1 = showAnalytics_Button11.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button11);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th -</font> ");
		
		try {
		helper.Scrollintoview(current_date12);
		helper.waitFor(current_date12);
		helper.highLightElement(driver, current_date12);
		String imageDate = current_date12.getText();
		helper.jsCLick(current_date12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button12);
		helper.waitFor(showAnalytics_Button12);
		helper.highLightElement(driver, showAnalytics_Button12);
		String linkText1 = showAnalytics_Button12.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button12);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th -</font> ");
		
		try {
		helper.Scrollintoview(current_date13);
		helper.waitFor(current_date13);
		helper.highLightElement(driver, current_date13);
		String imageDate = current_date13.getText();
		helper.jsCLick(current_date13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button13);
		helper.waitFor(showAnalytics_Button13);
		helper.highLightElement(driver, showAnalytics_Button13);
		String linkText1 = showAnalytics_Button13.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button13);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th -</font> ");
		
		try {
		helper.Scrollintoview(current_date14);
		helper.waitFor(current_date14);
		helper.highLightElement(driver, current_date14);
		String imageDate = current_date14.getText();
		helper.jsCLick(current_date14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button14);
		helper.waitFor(showAnalytics_Button14);
		helper.highLightElement(driver, showAnalytics_Button14);
		String linkText1 = showAnalytics_Button14.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button14);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
			 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th -</font> ");
		
		try {
		helper.Scrollintoview(current_date15);
		helper.waitFor(current_date15);
		helper.highLightElement(driver, current_date15);
		String imageDate = current_date15.getText();
		helper.jsCLick(current_date15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Current Image Date = " + imageDate);

		helper.Scrollintoview(showAnalytics_Button15);
		helper.waitFor(showAnalytics_Button15);
		helper.highLightElement(driver, showAnalytics_Button15);
		String linkText1 = showAnalytics_Button15.getAttribute("href");
		helper.getAdID(linkText1);
		helper.jsCLick(showAnalytics_Button15);
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Button.");

		Set<String> S1=driver.getWindowHandles();
	    Iterator<String>it=S1.iterator();
	    String parent=it.next();
	    String child=it.next();
	    
	    driver.switchTo().window(child);
	    
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(Last_Seen_childWindow);
	    helper.waitFor(Last_Seen_childWindow);
	    helper.highLightElement(driver, Last_Seen_childWindow);
	    String lastSeenDate = Last_Seen_childWindow.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> LastScene_date AdDetails Page= " +  lastSeenDate);
		
	    helper.waitForPageToLoad();
	    helper.Scrollintoview(domain_reg_Date);
	    helper.waitFor(domain_reg_Date);
	    helper.highLightElement(driver, domain_reg_Date);
	    String domainRegDate = domain_reg_Date.getText();
	    Reporter.log("<B><font color = 'blue'> ==> -</font> Domain Registration Date in AdDetails Page= " +  domainRegDate);
	    
	    driver.close();
	    
	    driver.switchTo().window(parent);
	    
	    helper.getLastseenDate(lastSeenDate, imageDate);
		}
		catch (Exception e) {
	    	 Reporter.log("<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}*/
	}
	
	//SortBy likes and Comments
	
	public void verify_sortby_likes_comments() throws InterruptedException {
		Reporter.log("<B><font color = 'Burgundy'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'Burgundy'> Step2 -</font> I am on the page :" + Page_titel);

		// helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		helper.waitForPageToLoad();
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'Burgundy'> Step3 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(pinterest);
		helper.highLightElement(driver, pinterest);
		pinterest.click();
		helper.waitForPageToLoad();
		Assert.assertTrue(pinterest.isDisplayed(), "Clicked on pinterest ");
		Reporter.log("<B><font color = 'Burgundy'> Step4 -</font> Clicked On pinterest Icon");
		// helper.waitForPageToLoad();

		String Page_titel_1 = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'Burgundy'> Step5 -</font> I am on the page :" + Page_titel_1);

		//Likes
		
		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Likes -</font> ");
		
		helper.Scrollintoview(clearSearchField);
		helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		Reporter.log("<B><font color = 'orange'> Step 1 -</font> Clicked On clear search.");
		
		helper.waitFor(sortByLikesComments);
		helper.highLightElement(driver, sortByLikesComments);
		try {
		sortByLikesComments.click();
		}catch (Exception e) {
			helper.jsCLick(sortByLikesComments);
		}
		Reporter.log("<B><font color = 'Burgundy'> ==> -</font> Clicked on SortBy.");

		helper.waitFor(Likes);
		helper.highLightElement(driver, Likes);
		Likes.click();
		Reporter.log("<B><font color = 'Burgundy'> ==> -</font> Clicked on Likes.");

		helper.waitForPageToLoad();
		helper.waitFor(minLikes);
		helper.highLightElement(driver, minLikes);
		minLikes.sendKeys(ReadConfig.getProperty("minlike"));
		Reporter.log("<B><font color = 'Burgundy'> ==> -</font> Entered value into minimum range Likes : " +  ReadConfig.getProperty("minlike"));

		helper.waitForPageToLoad();
		helper.waitFor(maxLikes);
		helper.highLightElement(driver, maxLikes);
		maxLikes.sendKeys(ReadConfig.getProperty("maxlike"));
		Reporter.log("<B><font color = 'Burgundy'> ==> -</font> Entered value into maximum range Likes : " +  ReadConfig.getProperty("maxlike"));

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'Burgundy'> ==> -</font> Clicked On Search Bar.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'Burgundy'> ==> -</font> Clicked On Search Bar.");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_like = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'Burgundy'> ==> -</font> Total_Ads_Count_like= " + Total_Ads_Count_like);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad -</font> ");

		try {
			helper.Scrollintoview(like1);
			helper.waitFor(like1);
			helper.highLightElement(driver, like1);
			String likesNumber = like1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad -</font> ");
		try {
			helper.Scrollintoview(like2);
			helper.waitFor(like2);
			helper.highLightElement(driver, like2);
			String likesNumber = like2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad -</font> ");

		try {
			helper.Scrollintoview(like3);
			helper.waitFor(like3);
			helper.highLightElement(driver, like3);
			String likesNumber = like3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad -</font> ");

		try {
			helper.Scrollintoview(like4);
			helper.waitFor(like4);
			helper.highLightElement(driver, like4);
			String likesNumber = like4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad -</font> ");

		try {
			helper.Scrollintoview(like5);
			helper.waitFor(like5);
			helper.highLightElement(driver, like5);
			String likesNumber = like5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad -</font> ");

		try {
			helper.Scrollintoview(like6);
			helper.waitFor(like6);
			helper.highLightElement(driver, like6);
			String likesNumber = like6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad -</font> ");

		try {
			helper.Scrollintoview(like7);
			helper.waitFor(like7);
			helper.highLightElement(driver, like7);
			String likesNumber = like7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad -</font> ");

		try {
			helper.Scrollintoview(like8);
			helper.waitFor(like8);
			helper.highLightElement(driver, like8);
			String likesNumber = like8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad -</font> ");

		try {
			helper.Scrollintoview(like9);
			helper.waitFor(like9);
			helper.highLightElement(driver, like9);
			String likesNumber = like9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad -</font> ");

		try {
			helper.Scrollintoview(like10);
			helper.waitFor(like10);
			helper.highLightElement(driver, like10);
			String likesNumber = like10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad -</font> ");

		try {
			helper.Scrollintoview(like11);
			helper.waitFor(like11);
			helper.highLightElement(driver, like11);
			String likesNumber = like11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad -</font> ");

		try {
			helper.Scrollintoview(like12);
			helper.waitFor(like12);
			helper.highLightElement(driver, like12);
			String likesNumber = like12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad -</font> ");

		try {
			helper.Scrollintoview(like13);
			helper.waitFor(like13);
			helper.highLightElement(driver, like13);
			String likesNumber = like13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad -</font> ");

		try {
			helper.Scrollintoview(like14);
			helper.waitFor(like14);
			helper.highLightElement(driver, like14);
			String likesNumber = like14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad -</font> ");

		try {
			helper.Scrollintoview(like15);
			helper.waitFor(like15);
			helper.highLightElement(driver, like15);
			String likesNumber = like15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Likes = " + likesNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
	//Comments
		
		Reporter.log("");
		Reporter.log("<B><font color = 'green'> Comments -</font> ");
		
		helper.waitFor(sortByLikesComments);
		helper.highLightElement(driver, sortByLikesComments);
//		sortByLikesComments.click();
		helper.jsCLick(sortByLikesComments);
		Reporter.log("<B><font color = 'Burgundy'> ==> -</font> Clicked on SortBy.");

		helper.waitFor(Comments);
		helper.highLightElement(driver, Comments);
		Comments.click();
		Reporter.log("<B><font color = 'Burgundy'> ==> -</font> Clicked on Comments.");

		helper.waitForPageToLoad();
		helper.waitFor(minComments);
		helper.highLightElement(driver, minComments);
		minComments.sendKeys(ReadConfig.getProperty("minComment"));
		Reporter.log("<B><font color = 'Burgundy'> ==> -</font> Entered value into minimum range Comments : " +  ReadConfig.getProperty("minComment"));

		helper.waitForPageToLoad();
		helper.waitFor(maxComments);
		helper.highLightElement(driver, maxComments);
		maxComments.sendKeys(ReadConfig.getProperty("maxComment"));
		Reporter.log("<B><font color = 'Burgundy'> ==> -</font> Entered value into maximum range Comments : " +  ReadConfig.getProperty("maxComment"));

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'Burgundy'> ==> -</font> Clicked On Search Bar.");

		helper.waitForPageToLoad();
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.jsCLick(search_bar);
		Reporter.log("<B><font color = 'Burgundy'> ==> -</font> Clicked On Search Bar.");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_comments = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'Burgundy'> ==> -</font> Total_Ads_Count_comments= " + Total_Ads_Count_comments);

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad -</font> ");

		try {
			helper.Scrollintoview(Comment1);
			helper.waitFor(Comment1);
			helper.highLightElement(driver, Comment1);
			String commentsNumber = Comment1.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad -</font> ");
		try {
			helper.Scrollintoview(Comment2);
			helper.waitFor(Comment2);
			helper.highLightElement(driver, Comment2);
			String commentsNumber = Comment2.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad -</font> ");

		try {
			helper.Scrollintoview(Comment3);
			helper.waitFor(Comment3);
			helper.highLightElement(driver, Comment3);
			String commentsNumber = Comment3.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad -</font> ");

		try {
			helper.Scrollintoview(Comment4);
			helper.waitFor(Comment4);
			helper.highLightElement(driver, Comment4);
			String commentsNumber = Comment4.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad -</font> ");

		try {
			helper.Scrollintoview(Comment5);
			helper.waitFor(Comment5);
			helper.highLightElement(driver, Comment5);
			String commentsNumber = Comment5.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");

		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad -</font> ");

		try {
			helper.Scrollintoview(Comment6);
			helper.waitFor(Comment6);
			helper.highLightElement(driver, Comment6);
			String commentsNumber = Comment6.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad -</font> ");

		try {
			helper.Scrollintoview(Comment7);
			helper.waitFor(Comment7);
			helper.highLightElement(driver, Comment7);
			String commentsNumber = Comment7.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad -</font> ");

		try {
			helper.Scrollintoview(Comment8);
			helper.waitFor(Comment8);
			helper.highLightElement(driver, Comment8);
			String commentsNumber = Comment8.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad -</font> ");

		try {
			helper.Scrollintoview(Comment9);
			helper.waitFor(Comment9);
			helper.highLightElement(driver, Comment9);
			String commentsNumber = Comment9.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad -</font> ");

		try {
			helper.Scrollintoview(Comment10);
			helper.waitFor(Comment10);
			helper.highLightElement(driver, Comment10);
			String commentsNumber = Comment10.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad -</font> ");

		try {
			helper.Scrollintoview(Comment11);
			helper.waitFor(Comment11);
			helper.highLightElement(driver, Comment11);
			String commentsNumber = Comment11.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad -</font> ");

		try {
			helper.Scrollintoview(Comment12);
			helper.waitFor(Comment12);
			helper.highLightElement(driver, Comment12);
			String commentsNumber = Comment12.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad -</font> ");

		try {
			helper.Scrollintoview(Comment13);
			helper.waitFor(Comment13);
			helper.highLightElement(driver, Comment13);
			String commentsNumber = Comment13.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad -</font> ");

		try {
			helper.Scrollintoview(Comment14);
			helper.waitFor(Comment14);
			helper.highLightElement(driver, Comment14);
			String commentsNumber = Comment14.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad -</font> ");

		try {
			helper.Scrollintoview(Comment15);
			helper.waitFor(Comment15);
			helper.highLightElement(driver, Comment15);
			String commentsNumber = Comment15.getText();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Comments = " + commentsNumber);
		} catch (Exception e) {
			Reporter.log(
					"<B><font color = 'red'> ==> -</font> Oops! Looks like we don't have data for this search criteria yet.");
		}
	}
	
	public void verify_filters_CallToAction() throws InterruptedException {
		
		Reporter.log("<B><font color = 'Burgundy'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'Burgundy'> Step2 -</font> I am on the page :" + Page_titel);

		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'Burgundy'> Step3 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(pinterest);
		helper.highLightElement(driver, pinterest);
		pinterest.click();
		Assert.assertTrue(pinterest.isDisplayed(), "Clicked on pinterest ");
		Reporter.log("<B><font color = 'Burgundy'> Step4 -</font> Clicked On pinterest Icon");
		helper.waitForPageToLoad();

		String Page_titel_1 = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'Burgundy'> Step5 -</font> I am on the page :" + Page_titel_1);

		helper.waitFor(filterDropDown);
		helper.highLightElement(driver, filterDropDown);
		filterDropDown.click();
		Reporter.log("<B><font color = 'Burgundy'> Step6 -</font> Clicked on filters :");

		Reporter.log(" ");
		Reporter.log("<B><font color = 'Green'>- CallToAction </font>");
		Reporter.log("       ==> -" + ReadConfig.getProperty("CallToAction"));
		helper.SelectDropdownValue(calltoActionDropdown, ReadConfig.getProperty("CallToAction"));

		helper.Scrollintoview(search_bar);
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.Scrollintoview(search_bar);
		search_bar.click();
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_newest = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'blue'> ==> -</font> Total_Ads_Count_newest= " + Total_Ads_Count_newest);
		helper.waitForPageToLoad();

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText01 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();
			
			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");

		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText01 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();

			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText01 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();

			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText01 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();

			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText01 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();

			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText01 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();

			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText01 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();

			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText01 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();

			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText01 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();

			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText01 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();

			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText01 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();

			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText01 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();

			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText01 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();

			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText01 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();

			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText01 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(callToActionChildWindow);
			helper.waitFor(callToActionChildWindow);
			helper.highLightElement(driver, callToActionChildWindow);
			String textCallToAction = callToActionChildWindow.getText();
			System.out.println("callToActionChildWindow : " + textCallToAction);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction in AdDetails Page= " + textCallToAction);

			driver.close();

			 driver.switchTo().window(parent);
			 
			Assert.assertEquals(ReadConfig.getProperty("CallToAction"), textCallToAction);
			Reporter.log("<B><font color = 'blue'> ==> -</font> CallToAction Applied = "+" "+ReadConfig.getProperty("CallToAction")+"    ::    " + "CallToAction in AdDetails = "+textCallToAction+" "+" are same == PASS");
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
	}
	 
	public void verify_filters_Countrty() throws InterruptedException {
		Reporter.log("<B><font color = 'Burgundy'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'Burgundy'> Step2 -</font> I am on the page :" + Page_titel);

		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'Burgundy'> Step3 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(pinterest);
		helper.highLightElement(driver, pinterest);
		pinterest.click();
		Assert.assertTrue(pinterest.isDisplayed(), "Clicked on pinterest ");
		Reporter.log("<B><font color = 'Burgundy'> Step4 -</font> Clicked On pinterest Icon");
		helper.waitForPageToLoad();

		String Page_titel_1 = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'Burgundy'> Step5 -</font> I am on the page :" + Page_titel_1);

		helper.waitFor(filterDropDown);
		helper.highLightElement(driver, filterDropDown);
		filterDropDown.click();
		Reporter.log("<B><font color = 'Burgundy'> Step6 -</font> Clicked on filters :");

		Reporter.log(" ");
		Reporter.log("<B><font color = 'Green'>- Country </font>");
		Reporter.log("       ==> -" + ReadConfig.getProperty("Country"));
		helper.SelectDropdownValue(countryDropDown, ReadConfig.getProperty("Country"));

		helper.Scrollintoview(search_bar);
		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.Scrollintoview(search_bar);
		search_bar.click();
		Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_newest = toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'blue'> ==> -</font> Total_Ads_Count_newest= " + Total_Ads_Count_newest);
		helper.waitForPageToLoad();

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 1st Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button1);
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			String linkText01 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button1);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);

			driver.close();
			
			 driver.switchTo().window(parent);
			 
			} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 2nd Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button2);
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			String linkText01 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button2);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			
			driver.close();
			
			 driver.switchTo().window(parent);
			 
			} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 3rd Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button3);
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			String linkText01 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button3);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);

			driver.close();
			
			 driver.switchTo().window(parent);
			 
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 4th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button4);
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			String linkText01 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button4);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			
			driver.close();
			
			 driver.switchTo().window(parent);
			 
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 5th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button5);
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			String linkText01 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button5);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			
			driver.close();
			
			 driver.switchTo().window(parent);
			 
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 6th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button6);
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			String linkText01 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button6);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			
			driver.close();
			
			 driver.switchTo().window(parent);
			 
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 7th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button7);
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			String linkText01 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button7);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			
			driver.close();
			
			 driver.switchTo().window(parent);
			 
		} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 8th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button8);
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			String linkText01 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button8);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			
			driver.close();
			
			 driver.switchTo().window(parent);
			 
			} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 9th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button9);
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			String linkText01 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button9);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			
			driver.close();
			
			 driver.switchTo().window(parent);
			 
			} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 10th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button10);
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			String linkText01 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button10);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			
			driver.close();
			
			 driver.switchTo().window(parent);
			 
			} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 11th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button11);
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			String linkText01 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button11);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			
			driver.close();
			
			 driver.switchTo().window(parent);
			 
			} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 12th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button12);
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			String linkText01 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button12);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			
			driver.close();
			
			 driver.switchTo().window(parent);
			 
			} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 13th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button13);
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			String linkText01 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button13);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			
			driver.close();
			
			 driver.switchTo().window(parent);
			 
			} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 14th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button14);
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			String linkText01 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button14);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			
			driver.close();
			
			 driver.switchTo().window(parent);
			 
			} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		Reporter.log("");
		Reporter.log("<B><font color = 'Blue-Violet'> 15th Ad -</font> ");

		try {
			helper.Scrollintoview(showAnalytics_Button15);
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			String linkText01 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText01);
			helper.jsCLick(showAnalytics_Button15);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On showAnalytics Button Icon");

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();

			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			
			driver.close();
			
			 driver.switchTo().window(parent);
			 
			} catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

	}
	
	//Filters Language
	
	public void verify_language() throws InterruptedException
	{
		Reporter.log("<B><font color = 'Burgundy'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'Burgundy'> Step2 -</font> I am on the page :" + Page_titel);

		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'Burgundy'> Step3 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(pinterest);
		helper.highLightElement(driver, pinterest);
		pinterest.click();
		Assert.assertTrue(pinterest.isDisplayed(), "Clicked on pinterest ");
		Reporter.log("<B><font color = 'Burgundy'> Step4 -</font> Clicked On pinterest Icon");
		helper.waitForPageToLoad();

		String Page_titel_1 = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'Burgundy'> Step5 -</font> I am on the page :" + Page_titel_1);

		helper.waitFor(filterDropDown);
		helper.highLightElement(driver, filterDropDown);
		filterDropDown.click();
		Reporter.log("<B><font color = 'Burgundy'> Step6 -</font> Clicked on filters :");
		Reporter.log(" ");
		Reporter.log("<B><font color = 'Green'>- Language </font>");
		Reporter.log("       ==> -" + ReadConfig.getProperty("Language"));
		helper.Scrollintoview(filterslangugage);
		helper.highLightElement(driver, filterslangugage);
		helper.SelectDropdownValue(filterslangugage, ReadConfig.getProperty("Language"));

		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.Scrollintoview(search_bar);
		search_bar.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		String totaladscount=toatal_Count_Ads.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step2 -</font>  Total Ad Count is :" +totaladscount);


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -1 Ad -</font>  ");
		System.out.println("");
		System.out.println("1 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button1);
			helper.highLightElement(driver, showAnalytics_Button1);
			Helpers.jsScrollintoview(showAnalytics_Button1);
			String linkText1 = showAnalytics_Button1.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -2 Ad -</font>  ");
		System.out.println("");
		System.out.println("2 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button2);
			helper.highLightElement(driver, showAnalytics_Button2);
			Helpers.jsScrollintoview(showAnalytics_Button2);
			String linkText1 = showAnalytics_Button2.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -3 Ad -</font>  ");
		System.out.println("");
		System.out.println("3 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button3);
			helper.highLightElement(driver, showAnalytics_Button3);
			Helpers.jsScrollintoview(showAnalytics_Button3);
			String linkText1 = showAnalytics_Button3.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -4 Ad -</font>  ");
		System.out.println("");
		System.out.println("4 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button4);
			helper.highLightElement(driver, showAnalytics_Button4);
			Helpers.jsScrollintoview(showAnalytics_Button4);
			String linkText1 = showAnalytics_Button4.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -5 Ad -</font>  ");
		System.out.println("");
		System.out.println("5 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button5);
			helper.highLightElement(driver, showAnalytics_Button5);
			Helpers.jsScrollintoview(showAnalytics_Button5);
			String linkText1 = showAnalytics_Button5.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -6 Ad -</font>  ");
		System.out.println("");
		System.out.println("6 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button6);
			helper.highLightElement(driver, showAnalytics_Button6);
			Helpers.jsScrollintoview(showAnalytics_Button6);
			String linkText1 = showAnalytics_Button6.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -7 Ad -</font>  ");
		System.out.println("");
		System.out.println("7 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button7);
			helper.highLightElement(driver, showAnalytics_Button7);
			Helpers.jsScrollintoview(showAnalytics_Button7);
			String linkText1 = showAnalytics_Button7.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -8 Ad -</font>  ");
		System.out.println("");
		System.out.println("8 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button8);
			helper.highLightElement(driver, showAnalytics_Button8);
			Helpers.jsScrollintoview(showAnalytics_Button8);
			String linkText1 = showAnalytics_Button8.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -9 Ad -</font>  ");
		System.out.println("");
		System.out.println("9 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button9);
			helper.highLightElement(driver, showAnalytics_Button9);
			Helpers.jsScrollintoview(showAnalytics_Button9);
			String linkText1 = showAnalytics_Button9.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -10 Ad -</font>  ");
		System.out.println("");
		System.out.println("10 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button10);
			helper.highLightElement(driver, showAnalytics_Button10);
			Helpers.jsScrollintoview(showAnalytics_Button10);
			String linkText1 = showAnalytics_Button10.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -11 Ad -</font>  ");
		System.out.println("");
		System.out.println("11 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button11);
			helper.highLightElement(driver, showAnalytics_Button11);
			Helpers.jsScrollintoview(showAnalytics_Button11);
			String linkText1 = showAnalytics_Button11.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -12 Ad -</font>  ");
		System.out.println("");
		System.out.println("12 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button12);
			helper.highLightElement(driver, showAnalytics_Button12);
			Helpers.jsScrollintoview(showAnalytics_Button12);
			String linkText1 = showAnalytics_Button12.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
		System.out.println("");
		System.out.println("13 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button13);
			helper.highLightElement(driver, showAnalytics_Button13);
			Helpers.jsScrollintoview(showAnalytics_Button13);
			String linkText1 = showAnalytics_Button13.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
		System.out.println("");
		System.out.println("14 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button14);
			helper.highLightElement(driver, showAnalytics_Button14);
			Helpers.jsScrollintoview(showAnalytics_Button14);
			String linkText1 = showAnalytics_Button14.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
		System.out.println("");
		System.out.println("15 Ads");
		try 
		{
			helper.waitFor(showAnalytics_Button15);
			helper.highLightElement(driver, showAnalytics_Button15);
			Helpers.jsScrollintoview(showAnalytics_Button15);
			String linkText1 = showAnalytics_Button15.getAttribute("href");
			helper.getAdID(linkText1);
			showAnalytics_Button15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);

			helper.waitForPageToLoad();
			helper.Scrollintoview(language);
			helper.waitFor(language);
			helper.highLightElement(driver, language);
			String languagefilter = language.getText();
			System.out.println("Language : " + languagefilter);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Language = " + languagefilter);

			driver.close();
			driver.switchTo().window(parent);

			Assert.assertEquals(ReadConfig.getProperty("Language"), languagefilter);
			System.out.println("Assert pass Language = "+ReadConfig.getProperty("Language")+"=="+languagefilter);
			Reporter.log("<B><font color = 'blue'> ==> -</font>Assert Pass Language:  "+ReadConfig.getProperty("Language")+"=="+languagefilter);

		} 
		catch (Exception e) 
		{
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
	}
	public void Verify_LanderProperties_EcommercePlatform() throws InterruptedException {
		
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'orange'> Step2 -</font> I am on the page :" + Page_titel);

		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(pinterest);
		helper.highLightElement(driver, pinterest);
		pinterest.click();
		Assert.assertTrue(pinterest.isDisplayed(), "Clicked on pinterest ");
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On pinterest Icon");
		helper.waitForPageToLoad();
		try {
	    	helper.waitFor(NewFeatureClosedButton);
	    	helper.Scrollintoview(NewFeatureClosedButton);
	    	helper.highLightElement(driver, NewFeatureClosedButton);
	    	NewFeatureClosedButton.click();
		} catch (Exception e) {
			// TODO: handle exception
		}
		helper.waitForPageToLoad();

		Reporter.log("       " );
		Reporter.log("<B><font color = 'purple'>  - ShortBy Newest Step will Start from here </font>  ");
		helper.waitFor(sortBy);
		helper.highLightElement(driver, sortBy);
		sortBy.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On sortBy Icon");

		helper.waitFor(sortBy_DropDown);
		helper.Scrollintoview(sortBy_DropDown);
		helper.highLightElement(driver, sortBy_DropDown);
		sortBy_DropDown.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On SortBy Newest Icon");

		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		try{
			search_bar.click();
		}catch (Exception e) {
			helper.jsCLick(search_bar);
		}
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();

		helper.waitFor(landerProperties);
		helper.highLightElement(driver, landerProperties);
		try{
			landerProperties.click();
		}catch (Exception e) {
			helper.jsCLick(landerProperties);
		}
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Lander Properties Button Icon");
	}

	public void EcommercePlatform() throws InterruptedException
	{
		
		helper.waitFor(ecommerce);
		helper.highLightElement(driver, ecommerce);
		helper.Scrollintoview(ecommerce);
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On Ecommerce platform click");
		System.out.println("Clicked On Ecommerce platform click Icon");

		Reporter.log(" ");
		Reporter.log("<B><font color = 'Green'>- Ecommerce Platform</font>");
		Reporter.log("       :-"+ReadConfig.getProperty1("EcomPlatform"));
		helper.SelectDropdownValue(ecommerce,ReadConfig.getProperty1("EcomPlatform"));

		helper.SelectDropdownValue(ecommerce,ReadConfig.getProperty1("EcomPlatform"));
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Selected  On Ecommerce platform "+ReadConfig.getProperty1("EcomPlatform"));
		System.out.println("Selected On Ecommerce platform "+ReadConfig.getProperty1("EcomPlatform"));

		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.Scrollintoview(search_bar);
		search_bar.click();
		helper.waitForPageToLoad();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On search Button Icon");


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			linkText01 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}


			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics1.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			linkText01 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}


			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics2.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			linkText01 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics3.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			linkText01 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics4.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			linkText01 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics5.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			linkText01 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics6.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			linkText01 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics7.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			linkText01 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics8.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			linkText01 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics9.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			linkText01 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics10.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			linkText01 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics11.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font>  ");
			System.out.println("");
			System.out.println("12 Ads");

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			linkText01 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics12.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font>  ");
			System.out.println("");
			System.out.println("13 Ads");

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			linkText01 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics13.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font>  ");
			System.out.println("");
			System.out.println("14 Ads");

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			linkText01 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics14.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{
			String linkText=null;
			String linkText01=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font>  ");
			System.out.println("");
			System.out.println("15 Ads");

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			linkText01 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText01);
			try {
				helper.highLightElement(driver, image1);
				helper.Scrollintoview(image1);
				String linkText1 = image1.getAttribute("src");
				helper.assert_image_Ecomplatform(linkText1, ReadConfig.getProperty("VerfiyEcomPlatform"));
			} catch (Exception e) {
				// TODO: handle exception
			}

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics15.click();
			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				helper.waitFor(destinationUrl);
				helper.Scrollintoview(destinationUrl);
				helper.jsCLick(destinationUrl);
			} catch (Exception e) {
				// TODO: handle exception
				helper.waitFor(redirectsurls);
				helper.Scrollintoview(redirectsurls);
				helper.jsCLick(redirectsurls);
			}
			helper.waitForPageToLoad();

			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertEcomPlatformVerfiy(linkText);
			helper.waitForPageToLoad();
			helper.waitForPageToLoad();

			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));	

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.Scrollintoview(Clear_Filters);
		helper.jsCLick(Clear_Filters);
		Clear_Filters.click();
		helper.waitForPageToLoad();
		Clear_Filters.click();
		helper.waitForPageToLoad();
		helper.waitForpage();
	}
	
	public void MarketingPlatform() throws InterruptedException {
		
	/*	helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
		helper.Scrollintoview(clearSearchField);
		helper.jsCLick(clearSearchField);
		clearSearchField.click();
		clearSearchField.click();
		helper.waitForpage();
		helper.waitForPageToLoad();

		helper.waitFor(landerProperties);
		helper.Scrollintoview(landerProperties);
		helper.highLightElement(driver, landerProperties);
		landerProperties.click();
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Lander Properties Button Icon");*/

		helper.waitFor(MarketingPlatform);
		helper.highLightElement(driver, MarketingPlatform);
		helper.Scrollintoview(MarketingPlatform);
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On Marketing Platform click");
		System.out.println("Clicked On Marketing Platform click Icon");

		Reporter.log(" ");
		Reporter.log("<B><font color = 'Green'>-Marketing Platform</font>");
		Reporter.log("       :-"+ReadConfig.getProperty("MarketingPlatform"));
		helper.SelectDropdownValue(MarketingPlatform ,ReadConfig.getProperty("MarketingPlatformBrand"));

		helper.SelectDropdownValue(MarketingPlatform,ReadConfig.getProperty("MarketingPlatformBrand"));
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Selected  On Marketing Platform "+ReadConfig.getProperty("MarketingPlatformBrand"));
		System.out.println("Selected On Ecommerce platform "+ReadConfig.getProperty("MarketingPlatformBrand"));

		helper.waitFor(search_bar);
		helper.highLightElement(driver, search_bar);
		helper.Scrollintoview(search_bar);
		search_bar.click();
		helper.waitForPageToLoad();
		helper.waitForpage();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On search Button Icon");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_newest=toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Total_Ads_Count_newest= " + Total_Ads_Count_newest);

		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ads");

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			String linkText01 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText01);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics1.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();


			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link2);
				helper.highLightElement(driver, link2);

				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ads");

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			String linkText02 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText02);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics2.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link2);
				helper.highLightElement(driver, link2);

				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}








		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ads");

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			String linkText03 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText03);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics3.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link2);
				helper.highLightElement(driver, link2);

				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}







		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ads");

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			String linkText04 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText04);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics4.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link2);
				helper.highLightElement(driver, link2);

				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}










		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ads");

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			String linkText05 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText05);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics5.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();

			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link2);
				helper.highLightElement(driver, link2);

				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}






		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ads");

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			String linkText06 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText06);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics6.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();



			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e) {
					// TODO: handle exception
				}
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link2);
				helper.highLightElement(driver, link2);

				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}






		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ads");

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			helper.waitFor(ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			String linkText07 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText07);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics7.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();



			try {
				String linkText=null;
				helper.Scrollintoview(link1);
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				helper.waitFor(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link2);
				helper.highLightElement(driver, link2);

				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ads");

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			String linkText08 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText08);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics8.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();



			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link2);
				helper.highLightElement(driver, link2);

				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}






		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ads");

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			String linkText09 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText09);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics9.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();
			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link2);
				helper.highLightElement(driver, link2);

				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}








		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ads");

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			String linkText010 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText010);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics10.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();

			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link2);
				helper.highLightElement(driver, link2);

				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ads");

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			String linkText011 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText011);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics11.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();

			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				try {
					String linkText=null;
					helper.Scrollintoview(link2);
					helper.highLightElement(driver, link2);

					System.out.println("Redirects: URL:  "+link2);
					linkText = link2.getAttribute("href");
					System.out.println("Basic info: URL: "+linkText);
					//	 String sentence = linkText1; 
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e2) {
					// TODO: handle exception
				}
				// TODO: handle exception

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font>  ");
			System.out.println("");
			System.out.println("12 Ads");

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			String linkText012 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText012);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics12.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();

			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link2);
				helper.highLightElement(driver, link2);

				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}






		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font>  ");
			System.out.println("");
			System.out.println("13 Ads");

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			String linkText013 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText013);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics13.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();

			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link2);
				helper.highLightElement(driver, link2);

				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font>  ");
			System.out.println("");
			System.out.println("14 Ads");

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			String linkText014 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText014);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics14.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();

			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link2);
				helper.highLightElement(driver, link2);

				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		try
		{

			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font>  ");
			System.out.println("");
			System.out.println("15 Ads");

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			String linkText015 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText015);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics15.click();


			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();

			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitForpage();
			helper.waitForPageToLoad();

			try {
				String linkText=null;
				helper.highLightElement(driver, link1);
				helper.Scrollintoview(link1);
				System.out.println("Redirects: URL:  "+link1);
				linkText = link1.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {

				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link2);
				helper.highLightElement(driver, link2);

				System.out.println("Redirects: URL:  "+link2);
				linkText = link2.getAttribute("href");
				System.out.println("Basic info: URL: "+linkText);
				//	 String sentence = linkText1; 
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Basic info: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link3);
				helper.highLightElement(driver, link3);

				System.out.println("Redirects: URL:  "+link3);
				linkText = link3.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				String linkText=null;
				helper.Scrollintoview(link4);
				helper.highLightElement(driver, link4);

				System.out.println("Redirects: URL:  "+link4);
				linkText = link4.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link15);
				helper.highLightElement(driver, link15);

				System.out.println("Redirects: URL:  "+link15);
				linkText = link15.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e2) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link16);
				helper.highLightElement(driver, link16);

				System.out.println("Redirects: URL:  "+link16);
				linkText = link16.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e3) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link17);
				helper.highLightElement(driver, link17);

				System.out.println("Redirects: URL:  "+link17);
				linkText = link17.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e4) {
				// TODO: handle exception
			}
			try {
				String linkText=null;
				helper.Scrollintoview(link18);
				helper.highLightElement(driver, link18);

				System.out.println("Redirects: URL:  "+link18);
				linkText = link18.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {
			}

			try {
				String linkText=null;
				helper.Scrollintoview(link19);
				helper.highLightElement(driver, link19);

				System.out.println("Redirects: URL:  "+link19);
				linkText = link19.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link20);
				helper.highLightElement(driver, link20);

				System.out.println("Redirects: URL:  "+link20);
				linkText = link20.getAttribute("href");
				System.out.println("Redirects: URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Redirects: URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			}
			catch (Exception e5) {

			}


			try {
				String linkText=null;
				helper.Scrollintoview(link5);
				helper.highLightElement(driver, link5);

				System.out.println("Redirects: URL:  "+link5);
				linkText = link5.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link6);
				helper.highLightElement(driver, link6);
				System.out.println("Redirects: URL:  "+link6);
				linkText = link6.getAttribute("href");
				System.out.println("Outgoing links: Source URL:  "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Source URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {

				}
			}


			try {
				String linkText=null;
				helper.Scrollintoview(link7);
				helper.highLightElement(driver, link7);				
				System.out.println("Redirects: URL:  "+link7);
				linkText = link7.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				helper.AssertEcomerencePlatform(linkText);
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link8);
				helper.highLightElement(driver, link8);

				System.out.println("Redirects: URL:  "+link8);
				linkText = link8.getAttribute("href");
				System.out.println("Outgoing links: Redirect URL: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Redirect URL: "+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}

			}

			try {
				String linkText=null;
				helper.Scrollintoview(link11);
				helper.highLightElement(driver, link11);
				System.out.println("Redirects: URL:  "+link11);

				linkText = link11.getAttribute("href");
				System.out.println("linkText11: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			} catch (Exception e) {
				// TODO: handle exception
				String linkText=null;
				helper.Scrollintoview(link12);
				helper.highLightElement(driver, link12);
				System.out.println("Redirects: URL:  "+link12);

				linkText = link12.getAttribute("href");
				System.out.println("linkText12: "+linkText);
				System.out.println("");
				Reporter.log(" ");
				Reporter.log("<B><font color = 'blue'> ==> -</font>Outgoing links: Final URL:"+linkText);
				try {
					helper.AssertEcomerencePlatform(linkText);
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}


			try {
				try {
					String linkText=null;
					helper.Scrollintoview(link13);
					helper.highLightElement(driver, link13);

					linkText = link13.getAttribute("href");
					System.out.println("linkText13: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}

				} catch (Exception e) {
					// TODO: handle exception
					String linkText=null;
					helper.highLightElement(driver, link14);
					helper.Scrollintoview(link14);
					linkText = link14.getAttribute("href");
					System.out.println("linkText14: "+linkText);
					System.out.println("");
					Reporter.log(" ");
					Reporter.log("<B><font color = 'blue'> ==> -</font>Fb post link: URL : "+linkText);
					try {
						helper.AssertEcomerencePlatform(linkText);
					} catch (Exception e2) {
						// TODO: handle exception
					}
				}

			} catch (Exception e) {
				// TODO: handle exception
			}


			driver.close();

			driver.switchTo().window(parent);

		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		

		helper.waitFor(clearSearchField);
		helper.highLightElement(driver, clearSearchField);
		helper.jsCLick(clearSearchField);
	}
		
	
	public void PinterestInPagelanderProperties() throws Exception
	{
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'orange'> Step2 -</font> I am on the page :" + Page_titel);

		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(pinterest);
		helper.highLightElement(driver, pinterest);
		pinterest.click();
		Assert.assertTrue(pinterest.isDisplayed(), "PowerAdSpy | Pinterest Dashboard");
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Pinterest Icon");
		helper.waitForPageToLoad();

		Reporter.log("       " );
		Reporter.log("<B><font color = 'purple'>  - ShortBy Newest Step will Start from here </font>  ");
		helper.waitFor(sortBy);
		helper.highLightElement(driver, sortBy);
		sortBy.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On sortBy Icon");

		helper.waitFor(SortBy_Newest);
		helper.highLightElement(driver, SortBy_Newest);
		helper.Scrollintoview(SortBy_Newest);
		SortBy_Newest.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On SortBy Newest Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();


	}

	public void AffiliateNetwork() throws InterruptedException
	{

		helper.waitFor(landerProperties);
		helper.Scrollintoview(landerProperties);
		helper.highLightElement(driver, landerProperties);
		landerProperties.click();
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Lander Properties Button Icon");

		helper.waitFor(AffiliateNetwork);
		helper.highLightElement(driver, AffiliateNetwork);
		helper.Scrollintoview(AffiliateNetwork);
		Reporter.log("<B><font color = 'orange'> Step5 -</font> Clicked On Affiliate Network click");
		System.out.println("Clicked On Affiliate Network click Icon");

		Reporter.log(" ");
		Reporter.log("<B><font color = 'Green'>- Affiliate Network </font>");
		Reporter.log("       :-"+ReadConfig.getProperty("Afliated"));
		helper.SelectDropdownValue(AffiliateNetwork,ReadConfig.getProperty("Afliated"));

		helper.SelectDropdownValue(AffiliateNetwork,ReadConfig.getProperty("Afliated"));
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Selected  On Affiliate Network"+ReadConfig.getProperty("Afliated"));
		System.out.println("Selected On Affiliate Network "+ReadConfig.getProperty("Afliated"));

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		searchButton.click();
		helper.waitForPageToLoad();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On search Button Icon");

		helper.waitForPageToLoad();
		helper.waitFor(toatal_Count_Ads);
		helper.highLightElement(driver, toatal_Count_Ads);
		helper.jsCLick(toatal_Count_Ads);
		String Total_Ads_Count_newest=toatal_Count_Ads.getText();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Total_Ads_Count_newest= " + Total_Ads_Count_newest);
		System.out.println("Total_Ads_Count_newest: "+Total_Ads_Count_newest);







		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 1 Ad -</font>  ");
			System.out.println("");
			System.out.println("1 Ad");

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.Scrollintoview(ShowAnalytics1);
			 linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics1.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		

		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 2 Ad -</font>  ");
			System.out.println("");
			System.out.println("2 Ad");

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.Scrollintoview(ShowAnalytics2);
			 linkText1 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics2.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		

		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 3 Ad -</font>  ");
			System.out.println("");
			System.out.println("3 Ad");

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.Scrollintoview(ShowAnalytics3);
			 linkText1 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics3.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		

		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 4 Ad -</font>  ");
			System.out.println("");
			System.out.println("4 Ad");

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.Scrollintoview(ShowAnalytics4);
			 linkText1 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics4.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		
		

		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 5 Ad -</font>  ");
			System.out.println("");
			System.out.println("5 Ad");

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.Scrollintoview(ShowAnalytics5);
			 linkText1 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics5.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		

		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 6 Ad -</font>  ");
			System.out.println("");
			System.out.println("6 Ad");

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.Scrollintoview(ShowAnalytics6);
			 linkText1 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics6.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		
		

		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 7 Ad -</font>  ");
			System.out.println("");
			System.out.println("7 Ad");

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.Scrollintoview(ShowAnalytics7);
			 linkText1 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics7.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		
		

		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 8 Ad -</font>  ");
			System.out.println("");
			System.out.println("8 Ad");

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.Scrollintoview(ShowAnalytics8);
			 linkText1 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics8.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		
		

		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 9 Ad -</font>  ");
			System.out.println("");
			System.out.println("9 Ad");

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.Scrollintoview(ShowAnalytics9);
			 linkText1 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics9.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		
		

		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 10 Ad -</font>  ");
			System.out.println("");
			System.out.println("10 Ad");

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.Scrollintoview(ShowAnalytics10);
			 linkText1 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics10.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		
		
		

		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 11 Ad -</font>  ");
			System.out.println("");
			System.out.println("11 Ad");

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.Scrollintoview(ShowAnalytics11);
			 linkText1 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics11.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		
		

		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 12 Ad -</font>  ");
			System.out.println("");
			System.out.println("12 Ad");

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.Scrollintoview(ShowAnalytics12);
			 linkText1 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics12.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		

		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 13 Ad -</font>  ");
			System.out.println("");
			System.out.println("13 Ad");

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.Scrollintoview(ShowAnalytics13);
			 linkText1 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics13.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		
		

		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 14 Ad -</font>  ");
			System.out.println("");
			System.out.println("14 Ad");

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.Scrollintoview(ShowAnalytics14);
			 linkText1 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics14.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
		
		
		

		try
		{

			String linkText1 =null;
			String linkText=null;
			Reporter.log(" ");
			Reporter.log("<B><font color ='red'> 15 Ad -</font>  ");
			System.out.println("");
			System.out.println("15 Ad");

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.Scrollintoview(ShowAnalytics15);
			 linkText1 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText1);
			System.out.println("Clicked On ShowAnalytics Icon");
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On ShowAnalytics Icon");
			ShowAnalytics15.click();

			Set<String> S1=driver.getWindowHandles();
			Iterator<String>it=S1.iterator();
			String parent=it.next();
			String child=it.next();
			driver.switchTo().window(child);
			helper.waitForpage();
			helper.waitForPageToLoad();
			helper.waitFor(destinationUrl);
			helper.Scrollintoview(destinationUrl);
			helper.jsCLick(destinationUrl);
			helper.waitForPageToLoad();
			
			ArrayList<String> newTb = new ArrayList<String>(driver.getWindowHandles());
			//switch to new tab
			driver.switchTo().window(newTb.get(2));
			System.out.println("Page title of new tab: " + driver.getTitle());
			linkText = driver.getPageSource();
			helper.AssertAffiliateNetwork(linkText);
			helper.waitForPageToLoad();
			
			driver.close();
			//    switch to parent window
			driver.switchTo().window(newTb.get(1));
			driver.close();
			driver.switchTo().window(newTb.get(0));
		}

		catch (Exception e) {
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");

			Reporter.log("<B><font color = 'red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}
	
	
	}
	
	
	public void PinterestInPageFilters() throws Exception
	{
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Logged into PowerAdSpy Application");
		String Page_titel = driver.getTitle();
		System.out.println(Page_titel);
		Reporter.log("<B><font color = 'orange'> Step2 -</font> I am on the page :" + Page_titel);

		helper.waitForPageToLoad();
		helper.waitFor(Logo);
		helper.highLightElement(driver, Logo);
		Assert.assertTrue(Logo.isDisplayed(), "Power Ad Spy Logo is Dispalyed");
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Power Ad Spy Logo is Displayed");

		helper.waitFor(pinterest);
		helper.highLightElement(driver, pinterest);
		pinterest.click();
		Assert.assertTrue(pinterest.isDisplayed(), "PowerAdSpy | Pinterest Dashboard");
		Reporter.log("<B><font color = 'orange'> Step4 -</font> Clicked On Pinterest Icon");
		helper.waitForPageToLoad();

		Reporter.log("       " );
		Reporter.log("<B><font color = 'purple'>  - ShortBy Newest Step will Start from here </font>  ");
		helper.waitFor(sortBy);
		helper.highLightElement(driver, sortBy);
		sortBy.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On sortBy Icon");

		helper.waitFor(SortBy_Newest);
		helper.highLightElement(driver, SortBy_Newest);
		helper.Scrollintoview(SortBy_Newest);
		SortBy_Newest.click();
		Reporter.log("<B><font color = 'orange'> Step2 -</font> Clicked On SortBy Newest Icon");

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step3 -</font> Clicked On search Button Icon");
		helper.waitForPageToLoad();


	}
	
	public void verify_filtersSearchByCounrty() throws Exception
	{
		helper.waitFor(filterDropDown);
		helper.highLightElement(driver, filterDropDown);
		filterDropDown.click();


		Reporter.log(" ");
		Reporter.log("<B><font color = 'Green'>- Country </font>");
		Reporter.log("       ==> -" + ReadConfig.getProperty("Country"));
		helper.SelectDropdownValue(countryDropDown, ReadConfig.getProperty("Country"));

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		helper.jsCLick(searchButton);
		searchButton.click();
		Reporter.log("<B><font color = 'orange'> Step1 -</font> Clicked On Search Button Icon");
		helper.waitForPageToLoad();

		helper.waitFor(searchButton);
		helper.highLightElement(driver, searchButton);
		helper.Scrollintoview(searchButton);
		helper.jsCLick(searchButton);
		searchButton.click();
		helper.waitForPageToLoad();

		String totaladscount=totaladscount_ad.getText();
		System.out.println("Totaladscount: "+totaladscount);
		Reporter.log("<B><font color = 'orange'> Step2 -</font>  Total Ad Count is :" +totaladscount);


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -1 Ad -</font>  ");
		System.out.println("");
		System.out.println("1 Ads");
		try {

			helper.waitFor(ShowAnalytics1);
			helper.highLightElement(driver, ShowAnalytics1);
			helper.jsScrollintoview(ShowAnalytics1);
			String linkText1 = ShowAnalytics1.getAttribute("href");
			helper.getAdID(linkText1);
			ShowAnalytics1.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");
			helper.ListOfcountry(countryDropDown1);


			driver.close();
			driver.switchTo().window(parent);			
		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -2 Ad -</font>  ");
		System.out.println("");
		System.out.println("2 Ads");
		try {

			helper.waitFor(ShowAnalytics2);
			helper.highLightElement(driver, ShowAnalytics2);
			helper.jsScrollintoview(ShowAnalytics2);
			String linkText2 = ShowAnalytics2.getAttribute("href");
			helper.getAdID(linkText2);
			ShowAnalytics2.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);




		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -3 Ad -</font>  ");
		System.out.println("");
		System.out.println("3 Ads");
		try {

			helper.waitFor(ShowAnalytics3);
			helper.highLightElement(driver, ShowAnalytics3);
			helper.jsScrollintoview(ShowAnalytics3);
			String linkText3 = ShowAnalytics3.getAttribute("href");
			helper.getAdID(linkText3);
			ShowAnalytics3.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);

		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -4 Ad -</font>  ");
		System.out.println("");
		System.out.println("4 Ads");
		try {

			helper.waitFor(ShowAnalytics4);
			helper.highLightElement(driver, ShowAnalytics4);
			helper.jsScrollintoview(ShowAnalytics4);
			String linkText4 = ShowAnalytics4.getAttribute("href");
			helper.getAdID(linkText4);
			ShowAnalytics4.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);

			driver.close();
			driver.switchTo().window(parent);


		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -5 Ad -</font>  ");
		System.out.println("");
		System.out.println("5 Ads");
		try {

			helper.waitFor(ShowAnalytics5);
			helper.highLightElement(driver, ShowAnalytics5);
			helper.jsScrollintoview(ShowAnalytics5);
			String linkText5 = ShowAnalytics5.getAttribute("href");
			helper.getAdID(linkText5);
			ShowAnalytics5.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);


		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -6 Ad -</font>  ");
		System.out.println("");
		System.out.println("6 Ads");
		try {

			helper.waitFor(ShowAnalytics6);
			helper.highLightElement(driver, ShowAnalytics6);
			helper.jsScrollintoview(ShowAnalytics6);
			String linkText6 = ShowAnalytics6.getAttribute("href");
			helper.getAdID(linkText6);
			ShowAnalytics6.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);


		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -7 Ad -</font>  ");
		System.out.println("");
		System.out.println("7 Ads");
		try {

			helper.waitFor(ShowAnalytics7);
			helper.highLightElement(driver, ShowAnalytics7);
			helper.jsScrollintoview(ShowAnalytics7);
			String linkText7 = ShowAnalytics7.getAttribute("href");
			helper.getAdID(linkText7);
			ShowAnalytics7.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);



		} 
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -8 Ad -</font>  ");
		System.out.println("");
		System.out.println("8 Ads");
		try {

			helper.waitFor(ShowAnalytics8);
			helper.highLightElement(driver, ShowAnalytics8);
			helper.jsScrollintoview(ShowAnalytics8);
			String linkText8 = ShowAnalytics8.getAttribute("href");
			helper.getAdID(linkText8);
			ShowAnalytics8.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);



		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -9 Ad -</font>  ");
		System.out.println("");
		System.out.println("9 Ads");
		try {

			helper.waitFor(ShowAnalytics9);
			helper.highLightElement(driver, ShowAnalytics9);
			helper.jsScrollintoview(ShowAnalytics9);
			String linkText9 = ShowAnalytics9.getAttribute("href");
			helper.getAdID(linkText9);
			ShowAnalytics9.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);



		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -10 Ad -</font>  ");
		System.out.println("");
		System.out.println("10 Ads");
		try {

			helper.waitFor(ShowAnalytics10);
			helper.highLightElement(driver, ShowAnalytics10);
			helper.jsScrollintoview(ShowAnalytics10);
			String linkText10 = ShowAnalytics10.getAttribute("href");
			helper.getAdID(linkText10);
			ShowAnalytics10.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.Scrollintoview(country);
			helper.waitFor(country);
			helper.highLightElement(driver, country);
			String textCountry = country.getText();
			System.out.println("Filter Country : " + textCountry);
			Thread.sleep(3000);
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country in  Page= " + textCountry);
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);



		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}

		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -11 Ad -</font>  ");
		System.out.println("");
		System.out.println("11 Ads");
		try {

			helper.waitFor(ShowAnalytics11);
			helper.highLightElement(driver, ShowAnalytics11);
			helper.jsScrollintoview(ShowAnalytics11);
			String linkText11 = ShowAnalytics11.getAttribute("href");
			helper.getAdID(linkText11);
			ShowAnalytics11.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();
			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);



		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -12 Ad -</font>  ");
		System.out.println("");
		System.out.println("12 Ads");
		try {

			helper.waitFor(ShowAnalytics12);
			helper.highLightElement(driver, ShowAnalytics12);
			helper.jsScrollintoview(ShowAnalytics12);
			String linkText12 = ShowAnalytics12.getAttribute("href");
			helper.getAdID(linkText12);
			ShowAnalytics12.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();

			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);





		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -13 Ad -</font>  ");
		System.out.println("");
		System.out.println("13 Ads");
		try {

			helper.waitFor(ShowAnalytics13);
			helper.highLightElement(driver, ShowAnalytics13);
			helper.jsScrollintoview(ShowAnalytics13);
			String linkText13 = ShowAnalytics13.getAttribute("href");
			helper.getAdID(linkText13);
			ShowAnalytics13.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();


			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);






		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -14 Ad -</font>  ");
		System.out.println("");
		System.out.println("14 Ads");
		try {

			helper.waitFor(ShowAnalytics14);
			helper.highLightElement(driver, ShowAnalytics14);
			helper.jsScrollintoview(ShowAnalytics14);
			String linkText14 = ShowAnalytics14.getAttribute("href");
			helper.getAdID(linkText14);
			ShowAnalytics14.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();

			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);


		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}



		Reporter.log(" ");
		Reporter.log("<B><font color ='red'> -15 Ad -</font>  ");
		System.out.println("");
		System.out.println("15 Ads");
		try {

			helper.waitFor(ShowAnalytics15);
			helper.highLightElement(driver, ShowAnalytics15);
			helper.jsScrollintoview(ShowAnalytics15);
			String linkText15 = ShowAnalytics15.getAttribute("href");
			helper.getAdID(linkText15);
			ShowAnalytics15.click();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Clicked On Show Analytics Icon");
			helper.waitForPageToLoad();

			Set<String> S1 = driver.getWindowHandles();
			Iterator<String> it = S1.iterator();
			String parent = it.next();
			String child = it.next();
			driver.switchTo().window(child);
			helper.waitForPageToLoad();
			Reporter.log("<B><font color = 'blue'> ==> -</font> Country");

			helper.waitForPageToLoad();

			helper.ListOfcountry(countryDropDown1);
			driver.close();
			driver.switchTo().window(parent);


		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
			Reporter.log(
					"<B><font color = 'Red'> ==> -</font> Image is not able: Oops! Looks like we don't have data for this search criteria yet.");
		}


		helper.waitFor(Clear_Filters);
		helper.highLightElement(driver, Clear_Filters);
		helper.jsScrollintoview(Clear_Filters);
		Clear_Filters.click();
		//	Reporter.log("<B><font color = 'orange'> Step9 -</font> Clicked On Clear Filters Icon");
		helper.waitForPageToLoad();
		System.out.println(" ");
		Reporter.log(" ");
	}
}

